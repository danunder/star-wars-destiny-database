{"ast":null,"code":"import _defineProperty from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initState = {\n  cards: [],\n  formats: [],\n  itemLimit: 10,\n  sorted: {\n    rarity_name: {\n      toggle: false,\n      val: []\n    },\n    affiliation_code: {\n      toggle: false,\n      val: []\n    },\n    type_code: {\n      toggle: false,\n      val: []\n    },\n    faction_code: {\n      toggle: false,\n      val: []\n    },\n    set_name: {\n      toggle: false,\n      val: []\n    },\n    health: {\n      toggle: false,\n      val: []\n    },\n    cost: {\n      toggle: false,\n      val: []\n    },\n    points: {\n      toggle: false,\n      val: []\n    },\n    sides: {\n      toggle: false,\n      val: []\n    },\n    formats: {\n      toggle: false,\n      val: []\n    }\n  },\n  style: JSON.parse(localStorage.getItem('localStyle')) || '',\n  name: \"\",\n  options: false,\n  styles: false\n};\n\nconst rootReducer = (state = initState, action) => {\n  if (action.type === 'INCREASE_LIMIT') {\n    let val = state.itemLimit;\n    val = val + 10;\n    return _objectSpread({}, state, {\n      itemLimit: val\n    });\n  }\n\n  if (action.type === 'SET_SORT') {\n    let orgArray = state.sorted[action.prop].val;\n\n    if (orgArray.includes(action.val)) {\n      let ind = orgArray.indexOf(action.val);\n      orgArray.splice(ind, 1);\n    } else {\n      orgArray.push(action.val);\n    }\n\n    let togg = orgArray.length > 0;\n    return _objectSpread({}, state, {\n      itemLimit: 10,\n      sorted: _objectSpread({}, state.sorted, {\n        [action.prop]: {\n          toggle: togg,\n          val: orgArray\n        }\n      })\n    });\n  }\n\n  if (action.type === 'SET_NAME') {\n    return _objectSpread({}, state, {\n      name: action.name\n    });\n  }\n\n  if (action.type === 'SET_STYLE') {\n    document.documentElement.style.backgroundColor = action.style.body;\n    return _objectSpread({}, state, {\n      style: action.style\n    });\n  }\n\n  if (action.type === 'TOGGLE_OPTIONS') {\n    return _objectSpread({}, state, {\n      options: !state.options,\n      styles: false\n    });\n  }\n\n  if (action.type === 'TOGGLE_STYLES') {\n    return _objectSpread({}, state, {\n      styles: !state.styles,\n      options: false\n    });\n  }\n\n  if (action.type === 'CLEAR_OPTIONS') {\n    return _objectSpread({}, state, {\n      itemLimit: 10,\n      sorted: {\n        rarity_name: {\n          toggle: false,\n          val: []\n        },\n        affiliation_code: {\n          toggle: false,\n          val: []\n        },\n        type_code: {\n          toggle: false,\n          val: []\n        },\n        faction_code: {\n          toggle: false,\n          val: []\n        },\n        set_name: {\n          toggle: false,\n          val: []\n        },\n        health: {\n          toggle: false,\n          val: []\n        },\n        cost: {\n          toggle: false,\n          val: []\n        },\n        points: {\n          toggle: false,\n          val: []\n        },\n        sides: {\n          toggle: false,\n          val: []\n        },\n        formats: {\n          toggle: false,\n          val: []\n        }\n      },\n      name: \"\",\n      options: false,\n      styles: false\n    });\n  }\n\n  if (action.type === 'SET_CARDS') {\n    return _objectSpread({}, state, {\n      cards: action.cards\n    });\n  }\n\n  if (action.type === 'SET_FORMATS') {\n    return _objectSpread({}, state, {\n      formats: action.formats\n    });\n  }\n\n  return state;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/redux/reducers/index.js"],"names":["initState","cards","formats","itemLimit","sorted","rarity_name","toggle","val","affiliation_code","type_code","faction_code","set_name","health","cost","points","sides","style","JSON","parse","localStorage","getItem","name","options","styles","rootReducer","state","action","type","orgArray","prop","includes","ind","indexOf","splice","push","togg","length","document","documentElement","backgroundColor","body"],"mappings":"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","sourcesContent":["const initState = {\n    cards: [],\n    formats: [],\n    itemLimit: 10,\n    sorted: {\n        rarity_name: {toggle: false, val: []},\n        affiliation_code: {toggle: false, val: []},\n        type_code: {toggle: false, val: []},\n        faction_code: {toggle: false, val: []},\n        set_name: {toggle: false, val: []},\n        health: {toggle: false, val: []},\n        cost: {toggle: false, val: []},\n        points: {toggle: false, val: []},\n        sides: {toggle: false, val: []},\n        formats: {toggle: false, val: []}\n    },\n    style: JSON.parse(localStorage.getItem('localStyle')) || '',\n    name: \"\",\n    options: false,\n    styles: false\n\n\n};\n\n\nconst rootReducer = (state = initState, action) => {\n\n    if (action.type === 'INCREASE_LIMIT') {\n\n        let val = state.itemLimit;\n\n        val = val + 10;\n\n\n        return {\n            ...state,\n            itemLimit: val\n        }\n    }\n\n    if (action.type === 'SET_SORT') {\n\n        let orgArray = state.sorted[action.prop].val;\n\n        if (orgArray.includes(action.val)) {\n            let ind = orgArray.indexOf(action.val);\n            orgArray.splice(ind, 1);\n\n        } else {\n            orgArray.push(action.val)\n        }\n\n        let togg = orgArray.length > 0;\n\n        return {\n            ...state,\n            itemLimit: 10,\n            sorted: {\n                ...state.sorted,\n                [action.prop]: {\n                    toggle: togg,\n                    val: orgArray\n                }\n            }\n\n        }\n\n    }\n\n    if (action.type === 'SET_NAME') {\n        return {\n            ...state,\n            name: action.name\n        }\n    }\n\n    if (action.type === 'SET_STYLE') {\n\n        document.documentElement.style.backgroundColor = action.style.body;\n\n        return {\n            ...state,\n            style: action.style\n        }\n    }\n\n    if (action.type === 'TOGGLE_OPTIONS') {\n\n        return {\n            ...state,\n            options: !state.options,\n            styles: false\n        }\n    }\n\n    if (action.type === 'TOGGLE_STYLES') {\n\n\n        return {\n            ...state,\n            styles: !state.styles,\n            options: false\n        }\n    }\n\n    if (action.type === 'CLEAR_OPTIONS') {\n\n        return {\n            ...state,\n            itemLimit: 10,\n\n            sorted: {\n                rarity_name: {toggle: false, val: []},\n                affiliation_code: {toggle: false, val: []},\n                type_code: {toggle: false, val: []},\n                faction_code: {toggle: false, val: []},\n                set_name: {toggle: false, val: []},\n                health: {toggle: false, val: []},\n                cost: {toggle: false, val: []},\n                points: {toggle: false, val: []},\n                sides: {toggle: false, val: []},\n                formats: {toggle: false, val: []}\n            },\n            name: \"\",\n            options: false,\n            styles: false\n        }\n    }\n\n    if (action.type === 'SET_CARDS') {\n        return {\n            ...state,\n            cards: action.cards\n        }\n    }\n\n    if (action.type === 'SET_FORMATS') {\n        return {\n            ...state,\n            formats: action.formats\n        }\n    }\n\n\n    return state;\n};\n\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}