{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction Sort(props) {\n  let Sort = [{\n    name: \"Affiliations\",\n    type: \"affiliation_code\",\n    values: [\"hero\", \"villain\", \"neutral\"]\n  }, {\n    name: \"Colors\",\n    type: \"faction_code\",\n    values: [\"red\", \"blue\", \"yellow\", \"gray\"]\n  }, {\n    name: \"Rarity\",\n    type: \"rarity_name\",\n    values: [\"Starter\", \"Common\", \"Uncommon\", \"Rare\", \"Legendary\"]\n  }, {\n    name: \"Health\",\n    type: \"health\",\n    values: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n  }, {\n    name: \"Cost\",\n    type: \"cost\",\n    values: [0, 1, 2, 3, 4, 5, 6]\n  }, {\n    name: \"Set\",\n    type: \"set_name\",\n    values: props.sets\n  }, {\n    name: \"Points\",\n    type: \"points\",\n    values: [\"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\"]\n  }, {\n    name: \"Type\",\n    type: \"type_code\",\n    values: [\"character\", \"upgrade\", \"support\", \"event\", \"downgrade\", \"plot\"]\n  }, {\n    name: \"Dice Sides\",\n    type: \"sides\",\n    values: [\"RD\", \"Sh\", \"MD\", \"ID\", \"Dc\", \"Dr\", \"F\", \"R\", \"Sp\", \"-\", \"+\"]\n  }, {\n    name: \"Formats\",\n    type: \"formats\",\n    values: [\"Standard\", \"Trilogy\", \"Infinite\"]\n  }, {\n    name: \"Restricted\",\n    type: \"restricted\",\n    values: [\"restricted\"]\n  }, {\n    name: \"Balanced\",\n    type: \"balanced\",\n    values: [\"balanced\"]\n  }, {\n    name: \"Keywords\",\n    type: \"keywords\",\n    values: [\"Guardian\", \"Ambush\", \"Redeploy\"]\n  }];\n  return Sort;\n}\n\nconst mapStateToProps = state => {\n  return {\n    sets: state.sets\n  };\n};\n\nexport default connect(mapStateToProps)(Sort);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/data/Sort.js"],"names":["React","connect","Sort","props","name","type","values","sets","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction Sort(props){\n    let Sort = [\n\n        {\n            name: \"Affiliations\",\n            type: \"affiliation_code\",\n            values:[\"hero\", \"villain\", \"neutral\"]\n        },\n        {\n            name: \"Colors\",\n            type: \"faction_code\",\n            values:[\"red\", \"blue\", \"yellow\", \"gray\"]\n        },\n        {\n            name: \"Rarity\",\n            type: \"rarity_name\",\n            values:[\"Starter\", \"Common\", \"Uncommon\", \"Rare\", \"Legendary\"]\n        },\n        {\n            name:\"Health\",\n            type:\"health\",\n            values:[4,5,6,7,8,9,10,11,12,13,14,15]\n        },\n        {\n            name:\"Cost\",\n            type:\"cost\",\n            values:[0,1,2,3,4,5,6]\n        },\n        {\n            name:\"Set\",\n            type:\"set_name\",\n            values:props.sets},\n        {\n            name:\"Points\",\n            type:\"points\",\n            values:[\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\"]\n        },\n        {\n            name:\"Type\",\n            type:\"type_code\",\n            values:[\"character\", \"upgrade\", \"support\", \"event\", \"downgrade\", \"plot\"]\n        },\n        {\n            name:\"Dice Sides\",\n            type:\"sides\",\n            values:[\"RD\", \"Sh\",\"MD\", \"ID\", \"Dc\",\"Dr\", \"F\", \"R\", \"Sp\",\"-\",\"+\"]\n\n        },\n        {\n            name:\"Formats\",\n            type:\"formats\",\n            values:[\"Standard\", \"Trilogy\", \"Infinite\"]\n        },\n        {\n            name: \"Restricted\",\n            type:\"restricted\",\n            values:[\"restricted\"]\n        },\n        {\n            name: \"Balanced\",\n            type:\"balanced\",\n            values:[\"balanced\"]\n        },\n        {\n            name: \"Keywords\",\n            type:\"keywords\",\n            values:[\"Guardian\", \"Ambush\", \"Redeploy\"]\n        }\n\n    ];\n\n    return Sort;\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        sets:state.sets\n    }\n};\n\nexport default connect(mapStateToProps)(Sort)"]},"metadata":{},"sourceType":"module"}