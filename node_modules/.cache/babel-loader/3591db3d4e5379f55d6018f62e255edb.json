{"ast":null,"code":"import _slicedToArray from\"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import'./less/style.css';import List from'./components/main/List';import CardPage from'./components/card/CardPage';import Nav from'./components/nav/Navigation';import Options from'./components/nav/options';import SortNav from'./components/nav/SortNav';import StyleOptions from'./components/nav/StyleOptions';import{connect}from'react-redux';import{Switch,Route}from\"react-router-dom\";function App(props){var _React$useState=React.useState(JSON.parse(localStorage.getItem('localStyle'))||''),_React$useState2=_slicedToArray(_React$useState,2),style=_React$useState2[0],setValue=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),show=_React$useState4[0],updateShow=_React$useState4[1];React.useEffect(function(){localStorage.setItem('localStyle',JSON.stringify(props.style));setValue(props.style);var check=false;for(var p in props.sorted){if(props.sorted[p].toggle){check=true;}}updateShow(check);},[props.style,style,props.sorted]);document.documentElement.style.backgroundColor=props.style.body;return React.createElement(\"div\",{className:\"App\",style:{backgroundColor:style.body}},React.createElement(Nav,null),React.createElement(SortNav,null),React.createElement(Options,null),React.createElement(StyleOptions,null),React.createElement(\"div\",{className:\"mainWrapper\",style:{color:style.bodyText,backgroundColor:props.style.body,paddingTop:show?\"\"+60+\"px\":\"0\"}},React.createElement(Switch,null,React.createElement(Route,{path:\"/\",component:List}))),React.createElement(Route,{path:\"/:id\",component:CardPage}));}var mapStateToProps=function mapStateToProps(state){return{style:state.style,sorted:state.sorted};};export default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/App.js"],"names":["React","List","CardPage","Nav","Options","SortNav","StyleOptions","connect","Switch","Route","App","props","useState","JSON","parse","localStorage","getItem","style","setValue","show","updateShow","useEffect","setItem","stringify","check","p","sorted","toggle","document","documentElement","backgroundColor","body","color","bodyText","paddingTop","mapStateToProps","state"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,kBAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,GAAP,KAAgB,6BAAhB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CAEA,OACIC,MADJ,CAEIC,KAFJ,KAGO,kBAHP,CAMA,QAASC,CAAAA,GAAT,CAAaC,KAAb,CAAoB,qBAEUX,KAAK,CAACY,QAAN,CACtBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,GAAkD,EAD5B,CAFV,oDAETC,KAFS,qBAEFC,QAFE,0CAKWlB,KAAK,CAACY,QAAN,CAAe,KAAf,CALX,qDAKTO,IALS,qBAKHC,UALG,qBAQhBpB,KAAK,CAACqB,SAAN,CAAgB,UAAM,CAClBN,YAAY,CAACO,OAAb,CAAqB,YAArB,CAAmCT,IAAI,CAACU,SAAL,CAAeZ,KAAK,CAACM,KAArB,CAAnC,EACAC,QAAQ,CAACP,KAAK,CAACM,KAAP,CAAR,CAMA,GAAIO,CAAAA,KAAK,CAAG,KAAZ,CAEA,IAAK,GAAIC,CAAAA,CAAT,GAAcd,CAAAA,KAAK,CAACe,MAApB,CAA4B,CACxB,GAAIf,KAAK,CAACe,MAAN,CAAaD,CAAb,EAAgBE,MAApB,CAA4B,CACxBH,KAAK,CAAG,IAAR,CACH,CAEJ,CAIDJ,UAAU,CAACI,KAAD,CAAV,CAEH,CArBD,CAqBG,CAACb,KAAK,CAACM,KAAP,CAAcA,KAAd,CAAqBN,KAAK,CAACe,MAA3B,CArBH,EAwBAE,QAAQ,CAACC,eAAT,CAAyBZ,KAAzB,CAA+Ba,eAA/B,CAAiDnB,KAAK,CAACM,KAAN,CAAYc,IAA7D,CAEA,MAEI,4BAAK,SAAS,CAAC,KAAf,CAAqB,KAAK,CAAE,CAACD,eAAe,CAAEb,KAAK,CAACc,IAAxB,CAA5B,EACI,oBAAC,GAAD,MADJ,CAEI,oBAAC,OAAD,MAFJ,CAGI,oBAAC,OAAD,MAHJ,CAII,oBAAC,YAAD,MAJJ,CAKI,2BAAK,SAAS,CAAE,aAAhB,CAA+B,KAAK,CAAE,CAClCC,KAAK,CAAEf,KAAK,CAACgB,QADqB,CAElCH,eAAe,CAAEnB,KAAK,CAACM,KAAN,CAAYc,IAFK,CAGlCG,UAAU,CAAGf,IAAI,CAAG,GAAK,EAAL,CAAU,IAAb,CAAoB,GAHH,CAAtC,EAKI,oBAAC,MAAD,MACI,oBAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,SAAS,CAAElB,IAA3B,EADJ,CALJ,CALJ,CAcI,oBAAC,KAAD,EAAO,IAAI,CAAE,MAAb,CAAqB,SAAS,CAAEC,QAAhC,EAdJ,CAFJ,CAmBH,CAED,GAAMiC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHnB,KAAK,CAAEmB,KAAK,CAACnB,KADV,CAEHS,MAAM,CAAEU,KAAK,CAACV,MAFX,CAAP,CAIH,CALD,CAQA,cAAenB,CAAAA,OAAO,CAAC4B,eAAD,CAAP,CAAyBzB,GAAzB,CAAf","sourcesContent":["import React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage'\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport SortNav from './components/nav/SortNav'\nimport StyleOptions from './components/nav/StyleOptions';\nimport {connect} from 'react-redux';\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\nfunction App(props) {\n\n    const [style, setValue] = React.useState(\n        JSON.parse(localStorage.getItem('localStyle')) || ''\n    );\n    const [show, updateShow] = React.useState(false);\n\n\n    React.useEffect(() => {\n        localStorage.setItem('localStyle', JSON.stringify(props.style));\n        setValue(props.style);\n\n\n\n\n\n        let check = false;\n\n        for (let p in props.sorted) {\n            if (props.sorted[p].toggle) {\n                check = true;\n            }\n\n        }\n\n\n\n        updateShow(check);\n\n    }, [props.style, style, props.sorted]);\n\n\n    document.documentElement.style.backgroundColor = props.style.body;\n\n    return (\n\n        <div className=\"App\" style={{backgroundColor: style.body}}>\n            <Nav/>\n            <SortNav/>\n            <Options/>\n            <StyleOptions/>\n            <div className={\"mainWrapper\"} style={{\n                color: style.bodyText,\n                backgroundColor: props.style.body,\n                paddingTop: (show ? \"\" + 60 + \"px\" : \"0\")\n            }}>\n                <Switch>\n                    <Route path=\"/\" component={List}/>\n                </Switch>\n            </div>\n            <Route path={\"/:id\"} component={CardPage}/>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style,\n        sorted: state.sorted\n    }\n};\n\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}