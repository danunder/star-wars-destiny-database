{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/SortNav.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nfunction SortNav(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        show = _React$useState2[0],\n        updateShow = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        tags = _React$useState4[0],\n        updateTags = _React$useState4[1];\n\n  React.useEffect(() => {\n    let check = false;\n    let tagArray = [];\n\n    for (let p in props.sorted) {\n      if (props.sorted[p].toggle) {\n        check = true;\n        props.sorted[p].val.map(vl => {\n          tagArray.push(vl);\n        });\n      }\n    }\n\n    updateShow(check);\n    updateTags(tagArray);\n  }, [props.sorted]);\n  let shower;\n\n  if (show) {\n    shower = {\n      top: '80px',\n      backgroundColor: props.style.bodyText\n    };\n  } else {\n    shower = {\n      top: '-80px',\n      backgroundColor: props.style.bodyText\n    };\n  }\n\n  let tagEles = tags.map((st, idx) => React.createElement(\"div\", {\n    key: idx,\n    className: \"itm\",\n    style: {\n      backgroundColor: props.style.body,\n      color: props.style.nav\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, st));\n  return React.createElement(\"div\", {\n    className: \"sortNav\",\n    style: shower,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, tagEles);\n}\n\nconst mapStateToProps = state => {\n  return {\n    sorted: state.sorted,\n    style: state.style\n  };\n};\n\nexport default connect(mapStateToProps)(SortNav);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/SortNav.js"],"names":["React","connect","SortNav","props","useState","show","updateShow","tags","updateTags","useEffect","check","tagArray","p","sorted","toggle","val","map","vl","push","shower","top","backgroundColor","style","bodyText","tagEles","st","idx","body","color","nav","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,0BAEOH,KAAK,CAACI,QAAN,CAAe,KAAf,CAFP;AAAA;AAAA,QAEbC,IAFa;AAAA,QAEPC,UAFO;;AAAA,2BAGON,KAAK,CAACI,QAAN,CAAe,EAAf,CAHP;AAAA;AAAA,QAGbG,IAHa;AAAA,QAGPC,UAHO;;AAMpBR,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AAClB,QAAIC,KAAK,GAAG,KAAZ;AACA,QAAIC,QAAQ,GAAG,EAAf;;AAEA,SAAK,IAAIC,CAAT,IAAcT,KAAK,CAACU,MAApB,EAA4B;AACxB,UAAIV,KAAK,CAACU,MAAN,CAAaD,CAAb,EAAgBE,MAApB,EAA4B;AACxBJ,QAAAA,KAAK,GAAG,IAAR;AACAP,QAAAA,KAAK,CAACU,MAAN,CAAaD,CAAb,EAAgBG,GAAhB,CAAoBC,GAApB,CAAyBC,EAAD,IAAQ;AAC5BN,UAAAA,QAAQ,CAACO,IAAT,CAAcD,EAAd;AACH,SAFD;AAIH;AAEJ;;AAEDX,IAAAA,UAAU,CAACI,KAAD,CAAV;AACAF,IAAAA,UAAU,CAACG,QAAD,CAAV;AACH,GAjBD,EAkBJ,CAACR,KAAK,CAACU,MAAP,CAlBI;AAoBJ,MAAIM,MAAJ;;AAEA,MAAId,IAAJ,EAAU;AACNc,IAAAA,MAAM,GAAG;AACLC,MAAAA,GAAG,EAAE,MADA;AAELC,MAAAA,eAAe,EAAElB,KAAK,CAACmB,KAAN,CAAYC;AAFxB,KAAT;AAIH,GALD,MAKO;AACHJ,IAAAA,MAAM,GAAG;AACLC,MAAAA,GAAG,EAAE,OADA;AAELC,MAAAA,eAAe,EAAElB,KAAK,CAACmB,KAAN,CAAYC;AAFxB,KAAT;AAIH;;AAED,MAAIC,OAAO,GAAGjB,IAAI,CAACS,GAAL,CAAS,CAACS,EAAD,EAAKC,GAAL,KACnB;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,SAAS,EAAE,KAA1B;AAAiC,IAAA,KAAK,EAAE;AAACL,MAAAA,eAAe,EAAElB,KAAK,CAACmB,KAAN,CAAYK,IAA9B;AAAoCC,MAAAA,KAAK,EAAEzB,KAAK,CAACmB,KAAN,CAAYO;AAAvD,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsGJ,EAAtG,CADU,CAAd;AAKA,SACI;AAAK,IAAA,SAAS,EAAE,SAAhB;AAA2B,IAAA,KAAK,EAAEN,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,OADL,CADJ;AAKC;;AAED,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHlB,IAAAA,MAAM,EAAEkB,KAAK,CAAClB,MADX;AAEHS,IAAAA,KAAK,EAAES,KAAK,CAACT;AAFV,GAAP;AAIH,CALD;;AAOA,eAAerB,OAAO,CAAC6B,eAAD,CAAP,CAAyB5B,OAAzB,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction SortNav(props) {\n\n    const [show, updateShow] = React.useState(false);\n    const [tags, updateTags] = React.useState([]);\n\n\n    React.useEffect(() => {\n        let check = false;\n        let tagArray = [];\n\n        for (let p in props.sorted) {\n            if (props.sorted[p].toggle) {\n                check = true;\n                props.sorted[p].val.map((vl) => {\n                    tagArray.push(vl);\n                })\n\n            }\n\n        }\n\n        updateShow(check);\n        updateTags(tagArray);\n    },\n[props.sorted]);\n\nlet shower;\n\nif (show) {\n    shower = {\n        top: '80px',\n        backgroundColor: props.style.bodyText\n    }\n} else {\n    shower = {\n        top: '-80px',\n        backgroundColor: props.style.bodyText\n    }\n}\n\nlet tagEles = tags.map((st, idx) =>\n    <div key={idx} className={\"itm\"} style={{backgroundColor: props.style.body, color: props.style.nav}}>{st}</div>\n);\n\n\nreturn (\n    <div className={\"sortNav\"} style={shower}>\n        {tagEles}\n    </div>\n)\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted,\n        style: state.style\n    }\n};\n\nexport default connect(mapStateToProps)(SortNav);"]},"metadata":{},"sourceType":"module"}