{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/SortNav.js\";\nimport React from 'react';\nimport SortTag from './SortTag';\nimport { connect } from 'react-redux';\n\nfunction SortNav(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        show = _React$useState2[0],\n        updateShow = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        tags = _React$useState4[0],\n        updateTags = _React$useState4[1];\n\n  React.useEffect(() => {\n    let check = false;\n    let tagArray = [];\n\n    for (let p in props.sorted) {\n      if (props.sorted[p].toggle) {\n        check = true;\n\n        for (let x = 0; x < props.sorted[p].val.length; x++) {\n          let obj = {\n            prop: p,\n            val: \"\"\n          };\n\n          if (p === 'health') {\n            obj.val = props.sorted[p].val[x] + \"H\";\n          } else if (p === 'points') {\n            obj.val = props.sorted[p].val[x] + \"P\";\n          } else if (p === 'cost') {\n            obj.val = props.sorted[p].val[x] + \"C\";\n          } else {\n            obj.val = props.sorted[p].val[x];\n          }\n\n          tagArray = tagArray.push(obj);\n        }\n      }\n    }\n\n    updateShow(check);\n    updateTags(tagArray);\n  }, [props.sorted]);\n  let shower;\n\n  if (show) {\n    shower = {\n      top: '80px',\n      backgroundColor: props.style.bodyText\n    };\n  } else {\n    shower = {\n      top: '-80px',\n      backgroundColor: props.style.bodyText\n    };\n  }\n\n  let tagEles = tags.map((st, idx) => React.createElement(SortTag, {\n    key: idx,\n    val: st.val,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"sortNav\",\n    style: shower,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, tagEles);\n}\n\nconst mapStateToProps = state => {\n  return {\n    sorted: state.sorted,\n    style: state.style\n  };\n};\n\nexport default connect(mapStateToProps)(SortNav);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/SortNav.js"],"names":["React","SortTag","connect","SortNav","props","useState","show","updateShow","tags","updateTags","useEffect","check","tagArray","p","sorted","toggle","x","val","length","obj","prop","push","shower","top","backgroundColor","style","bodyText","tagEles","map","st","idx","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SortTag from './SortTag';\nimport {connect} from 'react-redux';\n\nfunction SortNav(props) {\n\n    const [show, updateShow] = React.useState(false);\n    const [tags, updateTags] = React.useState([]);\n\n\n    React.useEffect(() => {\n        let check = false;\n        let tagArray = [];\n\n\n        for (let p in props.sorted) {\n\n            if (props.sorted[p].toggle) {\n                check = true;\n                for(let x=0; x<props.sorted[p].val.length; x++){\n                    let obj = {\n                        prop:p,\n                        val:\"\"\n                    };\n                    if(p==='health'){\n                        obj.val=props.sorted[p].val[x]+\"H\";\n                    }else if(p==='points'){\n                        obj.val=props.sorted[p].val[x]+\"P\";\n                    }else if(p==='cost'){\n                        obj.val=props.sorted[p].val[x]+\"C\";\n                    }else{\n                        obj.val=props.sorted[p].val[x];\n                    }\n                    tagArray=tagArray.push(obj)\n                }\n            }\n\n\n\n        }\n\n        updateShow(check);\n        updateTags(tagArray);\n    },\n[props.sorted]);\n\nlet shower;\n\nif (show) {\n    shower = {\n        top: '80px',\n        backgroundColor: props.style.bodyText\n    }\n} else {\n    shower = {\n        top: '-80px',\n        backgroundColor: props.style.bodyText\n    }\n}\n\n\nlet tagEles = tags.map((st, idx) =>\n    <SortTag key={idx} val={st.val}/>\n);\n\nreturn (\n    <div className={\"sortNav\"} style={shower}>\n        {tagEles}\n    </div>\n)\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted,\n        style: state.style\n    }\n};\n\nexport default connect(mapStateToProps)(SortNav);"]},"metadata":{},"sourceType":"module"}