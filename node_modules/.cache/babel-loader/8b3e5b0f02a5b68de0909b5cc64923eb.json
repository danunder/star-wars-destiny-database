{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/main/List.js\";\nimport React from 'react';\nimport { changeLimit } from \"../../redux/actions/setActions\";\nimport Card from '../card/Card';\nimport { connect } from 'react-redux';\nimport Button from '../input/Button';\nimport { Link } from 'react-router-dom';\n\nfunction List(props) {\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        sort = _React$useState2[0],\n        setSort = _React$useState2[1];\n\n  React.useEffect(() => {\n    function sortObject() {\n      let sortedList = props.cards;\n\n      for (let p in props.sorted) {\n        if (props.sorted[p].toggle) {\n          if (p === \"points\") {\n            sortedList = sortedList.filter(crd => {\n              let ret = false;\n\n              if (crd.points !== null) {\n                let arrayPoints = crd.points.split(\"/\");\n\n                for (let i = 0; i < props.sorted.points.val.length; i++) {\n                  for (let v = 0; v < arrayPoints.length; v++) {\n                    if (arrayPoints[v] === props.sorted.points.val[i]) {\n                      ret = true;\n                    }\n                  }\n                }\n              }\n\n              return ret ? crd : null;\n            });\n          } else if (p === \"sides\") {\n            for (let i = 0; i < props.sorted.sides.val.length; i++) {\n              sortedList = sortedList.filter(crd => {\n                let ret = false;\n\n                if (crd.hasOwnProperty('sides')) {\n                  for (let v = 0; v < crd.sides.length; v++) {\n                    if (crd.sides[v].includes(props.sorted.sides.val[i])) {\n                      ret = true;\n                    }\n                  }\n                }\n\n                return ret ? crd : null;\n              });\n            }\n          } else if (p === 'formats') {\n            sortedList = sortedList.filter(crd => {\n              let ret = false;\n\n              for (let i = 0; i < props.formats.length; i++) {\n                for (let q = 0; q < props.sorted.formats.val.length; q++) {\n                  if (props.formats[i].name === props.sorted.formats.val[q] && props.formats[i].data.sets.includes(crd.set_code)) {\n                    ret = true;\n                  }\n                }\n              }\n\n              return ret ? crd : null;\n            });\n          } else if (p === 'restricted') {\n            sortedList = sortedList.filter(crd => {\n              let ret = false;\n\n              for (let y = 0; y < props.formats.length; y++) {\n                for (let i = 0; i < props.formats[y].data.restricted.length; i++) {\n                  if (props.formats[y].data.restricted[i] === crd.code && props.sorted.restricted.val.includes(\"restricted\")) {\n                    ret = true;\n                  }\n                }\n              }\n\n              return ret ? crd : null;\n            });\n          } else if (p === 'balanced') {\n            sortedList = sortedList.filter(crd => {\n              let ret = false;\n\n              for (let y = 0; y < props.formats.length; y++) {\n                for (let i in props.formats[y].data.balance) {\n                  if (i === crd.code && props.sorted.balanced.val.includes(\"balanced\")) {\n                    ret = true;\n                  }\n                }\n              }\n\n              return ret ? crd : null;\n            });\n          } else if (p === 'keywords') {\n            sortedList = sortedList.filter(crd => {\n              let ret = false;\n\n              for (let i = 0; i < props.sorted.keywords.val.length; i++) {\n                if (crd.text !== null && crd.text.includes(props.sorted.keywords.val[i])) {\n                  ret = true;\n                }\n              }\n\n              return ret ? crd : null;\n            });\n          } else {\n            sortedList = sortedList.filter(crd => {\n              return props.sorted[p].val.includes(crd[p]);\n            });\n          }\n        }\n      }\n\n      if (props.name !== '') {\n        sortedList = sortedList.filter(crd => {\n          if (crd.name.includes(props.name)) {\n            return true;\n          } else if (crd.name.toLowerCase().includes(props.name)) {\n            return true;\n          } else return crd.name.toUpperCase().includes(props.name);\n        });\n      }\n\n      setSort(sortedList);\n    }\n\n    sortObject();\n    return () => {\n      sortObject();\n    };\n  }, [load, props.name, props.sorted, props.cards, props.formats]);\n  let cardEle;\n\n  if (sort.length !== 0) {\n    cardEle = sort.slice(0, props.itemLimit).map((crd, idx) => React.createElement(Link, {\n      to: \"/\" + crd.code,\n      key: idx,\n      className: \"cardFlop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Card, {\n      name: crd.name,\n      bod: true,\n      imagesrc: crd.imagesrc,\n      code: crd.code,\n      loadColor: \"#343740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })));\n  } else if (!load && !error) {\n    cardEle = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"No cards in search\");\n  } else if (load && !error) {\n    cardEle = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Fetching Cards...\");\n  } else if (load && error) {\n    cardEle = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Loading Cards failed. Refresh page...\");\n  }\n\n  const button = () => {\n    if (props.itemLimit < sort.length && sort.length > 10) {\n      return React.createElement(Button, {\n        handleClick: () => props.changeLimit(),\n        text: \"Load More\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, cardEle), button());\n}\n\nconst mapStateToProps = state => {\n  return {\n    displayedSet: state.displayedSet,\n    itemLimit: state.itemLimit,\n    setLimit: state.setLimit,\n    sorted: state.sorted,\n    name: state.name,\n    style: state.style,\n    cards: state.cards,\n    formats: state.formats\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeLimit: () => {\n      dispatch(changeLimit());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/main/List.js"],"names":["React","changeLimit","Card","connect","Button","Link","List","props","useState","sort","setSort","useEffect","sortObject","sortedList","cards","p","sorted","toggle","filter","crd","ret","points","arrayPoints","split","i","val","length","v","sides","hasOwnProperty","includes","formats","q","name","data","sets","set_code","y","restricted","code","balance","balanced","keywords","text","toLowerCase","toUpperCase","load","cardEle","slice","itemLimit","map","idx","imagesrc","error","button","mapStateToProps","state","displayedSet","setLimit","style","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {changeLimit} from \"../../redux/actions/setActions\";\nimport Card from '../card/Card';\nimport {connect} from 'react-redux';\nimport Button from '../input/Button';\nimport {Link} from 'react-router-dom';\n\nfunction List(props) {\n\n    const [sort, setSort] = React.useState([]);\n\n    React.useEffect(() => {\n\n\n        function sortObject() {\n\n            let sortedList = props.cards;\n\n            for (let p in props.sorted) {\n\n\n                if (props.sorted[p].toggle) {\n\n                    if (p === \"points\") {\n\n\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            if (crd.points !== null) {\n                                let arrayPoints = crd.points.split(\"/\");\n                                for (let i = 0; i < props.sorted.points.val.length; i++) {\n                                    for (let v = 0; v < arrayPoints.length; v++) {\n                                        if (arrayPoints[v] === props.sorted.points.val[i]) {\n\n                                            ret = true;\n                                        }\n                                    }\n                                }\n                            }\n                            return (ret ? crd : null)\n\n                        });\n\n\n                    } else if (p === \"sides\") {\n\n                        for (let i = 0; i < props.sorted.sides.val.length; i++) {\n\n                            sortedList = sortedList.filter(crd => {\n                                let ret = false;\n                                if (crd.hasOwnProperty('sides')) {\n                                    for (let v = 0; v < crd.sides.length; v++) {\n                                        if (crd.sides[v].includes(props.sorted.sides.val[i])) {\n                                            ret = true\n                                        }\n                                    }\n                                }\n                                return (ret ? crd : null)\n\n                            });\n                        }\n\n\n                    } else if (p === 'formats') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for (let i = 0; i < props.formats.length; i++) {\n                                for (let q = 0; q < props.sorted.formats.val.length; q++) {\n                                    if (props.formats[i].name === props.sorted.formats.val[q] && props.formats[i].data.sets.includes(crd.set_code)) {\n                                        ret = true;\n                                    }\n                                }\n                            }\n                            return (ret ? crd : null);\n                        });\n                    }else if (p === 'restricted') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for(let y=0; y<props.formats.length; y++){\n                                for (let i = 0; i < props.formats[y].data.restricted.length; i++) {\n                                    if(props.formats[y].data.restricted[i]===crd.code&&props.sorted.restricted.val.includes(\"restricted\")){\n                                        ret=true\n                                    }\n                                }\n                            }\n\n                            return (ret ? crd : null);\n                        });\n                    }else if (p === 'balanced') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for(let y=0; y<props.formats.length; y++){\n                                for (let i in props.formats[y].data.balance) {\n                                    if(i===crd.code&&props.sorted.balanced.val.includes(\"balanced\")){\n                                        ret=true\n                                    }\n                                }\n                            }\n\n                            return (ret ? crd : null);\n                        });\n                    }else if (p === 'keywords') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for(let i=0; i<props.sorted.keywords.val.length; i++){\n                                if(crd.text!==null&&crd.text.includes(props.sorted.keywords.val[i])){\n                                    ret=true;\n                                }\n                            }\n                            return (ret ? crd : null);\n                        });\n                    } else {\n                        sortedList = sortedList.filter(crd => {\n\n                            return props.sorted[p].val.includes(crd[p])\n\n                        });\n                    }\n                }\n            }\n\n\n            if (props.name !== '') {\n                sortedList = sortedList.filter(crd => {\n                    if (crd.name.includes(props.name)) {\n                        return true\n                    } else if (crd.name.toLowerCase().includes(props.name)) {\n                        return true\n                    } else return crd.name.toUpperCase().includes(props.name);\n                });\n            }\n\n\n            setSort(sortedList)\n        }\n\n        sortObject();\n\n        return () => {\n            sortObject();\n        }\n\n    }, [load, props.name, props.sorted, props.cards, props.formats]);\n\n\n    let cardEle;\n\n    if (sort.length !== 0) {\n        cardEle = sort.slice(0, props.itemLimit).map((crd, idx) =>\n\n\n            <Link to={\"/\" + crd.code} key={idx} className={\"cardFlop\"}>\n\n                <Card name={crd.name} bod={true} imagesrc={crd.imagesrc} code={crd.code}\n                      loadColor={\"#343740\"}/>\n            </Link>\n        );\n    } else if (!load && !error) {\n        cardEle = <h1>No cards in search</h1>;\n    } else if (load && !error) {\n        cardEle = <h1>Fetching Cards...</h1>;\n    } else if (load && error) {\n        cardEle = <h1>Loading Cards failed. Refresh page...</h1>;\n    }\n\n\n    const button = () => {\n        if (props.itemLimit < sort.length && sort.length > 10) {\n            return <Button handleClick={() => props.changeLimit()} text={\"Load More\"}/>\n        }\n    };\n\n\n    return (\n\n        <div className={\"list\"}>\n            <div className={\"wrapper\"}>\n                {cardEle}\n            </div>\n            {button()}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        displayedSet: state.displayedSet,\n        itemLimit: state.itemLimit,\n        setLimit: state.setLimit,\n        sorted: state.sorted,\n        name: state.name,\n        style: state.style,\n        cards:state.cards,\n        formats:state.formats\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeLimit: () => {\n            dispatch(changeLimit())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n"]},"metadata":{},"sourceType":"module"}