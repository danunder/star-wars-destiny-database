{"ast":null,"code":"var _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/OptionItem.js\";\nimport React from 'react';\nimport { setSort } from \"../../redux/actions/setActions\";\nimport { connect } from \"react-redux\";\n\nfunction OptionItem(props) {\n  let shower;\n\n  const toggleReturn = (prop, val) => {\n    return !(props.sorted[prop].toggle && props.sorted[prop].val === val);\n  };\n\n  const handleSort = (prop, val) => {\n    props.setSort(prop, toggleReturn(prop, val), val);\n  };\n\n  if (props.sorted[props.type].val.includes(props.value) && props.sorted[props.type].toggle) {\n    shower = {\n      backgroundColor: props.style.navText,\n      color: props.style.nav\n    };\n  } else {\n    shower = {\n      backgroundColor: props.style.nav,\n      color: props.style.navText\n    };\n  }\n\n  const numberCheck = () => {\n    if (isNaN(props.value)) {\n      return props.value.charAt(0).toUpperCase() + props.value.substring(1);\n    } else if (props.value.includes(\"RD\")) {\n      return React.createElement(\"span\", {\n        className: \"icon icon-ranged\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    } else {\n      return props.value;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"item\",\n    style: shower,\n    onClick: () => handleSort(props.type, props.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, numberCheck());\n}\n\nconst mapStateToProps = state => {\n  return {\n    sorted: state.sorted,\n    style: state.style\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSort: (prop, toggle, val) => {\n      dispatch(setSort(prop, toggle, val));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionItem);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/OptionItem.js"],"names":["React","setSort","connect","OptionItem","props","shower","toggleReturn","prop","val","sorted","toggle","handleSort","type","includes","value","backgroundColor","style","navText","color","nav","numberCheck","isNaN","charAt","toUpperCase","substring","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,gCAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEvB,MAAIC,MAAJ;;AAEA,QAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AAChC,WAAO,EAAEJ,KAAK,CAACK,MAAN,CAAaF,IAAb,EAAmBG,MAAnB,IAA6BN,KAAK,CAACK,MAAN,CAAaF,IAAb,EAAmBC,GAAnB,KAA2BA,GAA1D,CAAP;AACH,GAFD;;AAIA,QAAMG,UAAU,GAAG,CAACJ,IAAD,EAAOC,GAAP,KAAe;AAC9BJ,IAAAA,KAAK,CAACH,OAAN,CAAcM,IAAd,EAAoBD,YAAY,CAACC,IAAD,EAAOC,GAAP,CAAhC,EAA6CA,GAA7C;AACH,GAFD;;AAIA,MAAIJ,KAAK,CAACK,MAAN,CAAaL,KAAK,CAACQ,IAAnB,EAAyBJ,GAAzB,CAA6BK,QAA7B,CAAsCT,KAAK,CAACU,KAA5C,KAAsDV,KAAK,CAACK,MAAN,CAAaL,KAAK,CAACQ,IAAnB,EAAyBF,MAAnF,EAA2F;AACvFL,IAAAA,MAAM,GAAG;AACLU,MAAAA,eAAe,EAAEX,KAAK,CAACY,KAAN,CAAYC,OADxB;AAELC,MAAAA,KAAK,EAACd,KAAK,CAACY,KAAN,CAAYG;AAFb,KAAT;AAIH,GALD,MAKK;AACDd,IAAAA,MAAM,GAAG;AACLU,MAAAA,eAAe,EAAEX,KAAK,CAACY,KAAN,CAAYG,GADxB;AAELD,MAAAA,KAAK,EAACd,KAAK,CAACY,KAAN,CAAYC;AAFb,KAAT;AAIH;;AAED,QAAMG,WAAW,GAAG,MAAM;AACtB,QAAIC,KAAK,CAACjB,KAAK,CAACU,KAAP,CAAT,EAAwB;AACpB,aAAOV,KAAK,CAACU,KAAN,CAAYQ,MAAZ,CAAmB,CAAnB,EAAsBC,WAAtB,KAAsCnB,KAAK,CAACU,KAAN,CAAYU,SAAZ,CAAsB,CAAtB,CAA7C;AACH,KAFD,MAEO,IAAGpB,KAAK,CAACU,KAAN,CAAYD,QAAZ,CAAqB,IAArB,CAAH,EAA8B;AACjC,aAAQ;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH,KAFM,MAED;AACF,aAAOT,KAAK,CAACU,KAAb;AACH;AACJ,GARD;;AAWA,SACI;AAAK,IAAA,SAAS,EAAE,MAAhB;AAAwB,IAAA,KAAK,EAAET,MAA/B;AAAuC,IAAA,OAAO,EAAE,MAAMM,UAAU,CAACP,KAAK,CAACQ,IAAP,EAAaR,KAAK,CAACU,KAAnB,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4FM,WAAW,EAAvG,CADJ;AAIH;;AAED,MAAMK,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHjB,IAAAA,MAAM,EAAEiB,KAAK,CAACjB,MADX;AAEHO,IAAAA,KAAK,EAACU,KAAK,CAACV;AAFT,GAAP;AAIH,CALD;;AAOA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACH3B,IAAAA,OAAO,EAAE,CAACM,IAAD,EAAOG,MAAP,EAAeF,GAAf,KAAuB;AAC5BoB,MAAAA,QAAQ,CAAC3B,OAAO,CAACM,IAAD,EAAOG,MAAP,EAAeF,GAAf,CAAR,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AASA,eAAeN,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxB,UAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {setSort} from \"../../redux/actions/setActions\";\nimport {connect} from \"react-redux\";\n\nfunction OptionItem(props) {\n\n    let shower;\n\n    const toggleReturn = (prop, val) => {\n        return !(props.sorted[prop].toggle && props.sorted[prop].val === val);\n    };\n\n    const handleSort = (prop, val) => {\n        props.setSort(prop, toggleReturn(prop, val), val)\n    };\n\n    if (props.sorted[props.type].val.includes(props.value) && props.sorted[props.type].toggle) {\n        shower = {\n            backgroundColor: props.style.navText,\n            color:props.style.nav\n        }\n    }else{\n        shower = {\n            backgroundColor: props.style.nav,\n            color:props.style.navText\n        }\n    }\n\n    const numberCheck = () => {\n        if (isNaN(props.value)) {\n            return props.value.charAt(0).toUpperCase() + props.value.substring(1)\n        } else if(props.value.includes(\"RD\")){\n            return (<span className='icon icon-ranged'></span>)\n        }else {\n            return props.value\n        }\n    };\n\n\n    return (\n        <div className={\"item\"} style={shower} onClick={() => handleSort(props.type, props.value)}>{numberCheck()}</div>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted,\n        style:state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSort: (prop, toggle, val) => {\n            dispatch(setSort(prop, toggle, val))\n        }\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionItem);"]},"metadata":{},"sourceType":"module"}