{"ast":null,"code":"import React from'react';import{setSort as _setSort}from\"../../redux/actions/setActions\";import{connect}from\"react-redux\";function OptionItem(props){var shower;var toggleReturn=function toggleReturn(prop,val){return!(props.sorted[prop].toggle&&props.sorted[prop].val===val);};var handleSort=function handleSort(prop,val){props.setSort(prop,toggleReturn(prop,val),val);};if(props.sorted[props.type].val===props.value&&props.sorted[props.type].toggle){shower={\"backgroundColor\":\"#343740\"};}var numberCheck=function numberCheck(){if(isNaN(props.value)){return props.value.charAt(0).toUpperCase()+props.value.substring(1);}else{return props.value;}};return React.createElement(\"div\",{className:\"item\",style:shower,onClick:function onClick(){return handleSort(props.type,props.value);}},numberCheck());}var mapStateToProps=function mapStateToProps(state){return{sorted:state.sorted};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setSort:function setSort(prop,toggle,val){dispatch(_setSort(prop,toggle,val));}};};export default connect(mapStateToProps,mapDispatchToProps)(OptionItem);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/OptionItem.js"],"names":["React","setSort","connect","OptionItem","props","shower","toggleReturn","prop","val","sorted","toggle","handleSort","type","value","numberCheck","isNaN","charAt","toUpperCase","substring","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAO,GAAPA,CAAAA,QAAR,KAAsB,gCAAtB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CAEvB,GAAIC,CAAAA,MAAJ,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAOC,GAAP,CAAe,CAChC,MAAO,EAAEJ,KAAK,CAACK,MAAN,CAAaF,IAAb,EAAmBG,MAAnB,EAA6BN,KAAK,CAACK,MAAN,CAAaF,IAAb,EAAmBC,GAAnB,GAA2BA,GAA1D,CAAP,CACH,CAFD,CAIA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACJ,IAAD,CAAOC,GAAP,CAAe,CAC9BJ,KAAK,CAACH,OAAN,CAAcM,IAAd,CAAoBD,YAAY,CAACC,IAAD,CAAOC,GAAP,CAAhC,CAA6CA,GAA7C,EACH,CAFD,CAIA,GAAIJ,KAAK,CAACK,MAAN,CAAaL,KAAK,CAACQ,IAAnB,EAAyBJ,GAAzB,GAAiCJ,KAAK,CAACS,KAAvC,EAAgDT,KAAK,CAACK,MAAN,CAAaL,KAAK,CAACQ,IAAnB,EAAyBF,MAA7E,CAAqF,CACjFL,MAAM,CAAG,CACL,kBAAmB,SADd,CAAT,CAGH,CAED,GAAMS,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAIC,KAAK,CAACX,KAAK,CAACS,KAAP,CAAT,CAAwB,CACpB,MAAOT,CAAAA,KAAK,CAACS,KAAN,CAAYG,MAAZ,CAAmB,CAAnB,EAAsBC,WAAtB,GAAsCb,KAAK,CAACS,KAAN,CAAYK,SAAZ,CAAsB,CAAtB,CAA7C,CACH,CAFD,IAEO,CACH,MAAOd,CAAAA,KAAK,CAACS,KAAb,CACH,CACJ,CAND,CASA,MACI,4BAAK,SAAS,CAAE,MAAhB,CAAwB,KAAK,CAAER,MAA/B,CAAuC,OAAO,CAAE,yBAAMM,CAAAA,UAAU,CAACP,KAAK,CAACQ,IAAP,CAAaR,KAAK,CAACS,KAAnB,CAAhB,EAAhD,EAA4FC,WAAW,EAAvG,CADJ,CAIH,CAED,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHX,MAAM,CAAEW,KAAK,CAACX,MADX,CAAP,CAGH,CAJD,CAMA,GAAMY,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACrC,MAAO,CACHrB,OAAO,CAAE,iBAACM,IAAD,CAAOG,MAAP,CAAeF,GAAf,CAAuB,CAC5Bc,QAAQ,CAACrB,QAAO,CAACM,IAAD,CAAOG,MAAP,CAAeF,GAAf,CAAR,CAAR,CACH,CAHE,CAAP,CAKH,CAND,CASA,cAAeN,CAAAA,OAAO,CAACiB,eAAD,CAAkBE,kBAAlB,CAAP,CAA6ClB,UAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {setSort} from \"../../redux/actions/setActions\";\nimport {connect} from \"react-redux\";\n\nfunction OptionItem(props) {\n\n    let shower;\n\n    const toggleReturn = (prop, val) => {\n        return !(props.sorted[prop].toggle && props.sorted[prop].val === val);\n    };\n\n    const handleSort = (prop, val) => {\n        props.setSort(prop, toggleReturn(prop, val), val)\n    };\n\n    if (props.sorted[props.type].val === props.value && props.sorted[props.type].toggle) {\n        shower = {\n            \"backgroundColor\": \"#343740\"\n        }\n    }\n\n    const numberCheck = () => {\n        if (isNaN(props.value)) {\n            return props.value.charAt(0).toUpperCase() + props.value.substring(1)\n        } else {\n            return props.value\n        }\n    };\n\n\n    return (\n        <div className={\"item\"} style={shower} onClick={() => handleSort(props.type, props.value)}>{numberCheck()}</div>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSort: (prop, toggle, val) => {\n            dispatch(setSort(prop, toggle, val))\n        }\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionItem);"]},"metadata":{},"sourceType":"module"}