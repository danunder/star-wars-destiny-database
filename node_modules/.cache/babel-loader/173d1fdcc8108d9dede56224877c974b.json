{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/CardInfo.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\n\nfunction CardInfo(props) {\n  const _React$useState = React.useState([{\n    format: \"trilogy\",\n    restricted: false,\n    balance: \"--\",\n    legal: false\n  }, {\n    format: \"standard\",\n    restricted: false,\n    balance: \"--\",\n    legal: false\n  }, {\n    format: \"infinite\",\n    restricted: false,\n    balance: \"--\",\n    legal: true\n  }]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        rst = _React$useState2[0],\n        setRst = _React$useState2[1];\n\n  const _React$useState3 = React.useState({\n    rst: false,\n    load: true,\n    error: false\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rend = _React$useState4[0],\n        rendElement = _React$useState4[1];\n\n  let subtypes;\n  let sides;\n\n  if (props.crd.subtypes !== undefined) {\n    subtypes = props.crd.subtypes.map((sb, idx) => React.createElement(\"h3\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, sb.name, idx !== props.crd.subtypes.length - 1 && \"-\"));\n  }\n\n  if (props.crd.sides !== undefined) {\n    sides = props.crd.sides.map((sd, idx) => React.createElement(\"div\", {\n      key: idx,\n      className: \"side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, sd));\n  }\n\n  React.useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    function handleStatusChange(status) {\n      setRst(status);\n    }\n\n    const unsubscribe = () => {\n      fetch(\"https://swdestinydb.com/api/public/formats/\", {\n        signal: signal\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        let formats = [];\n        data.map(fm => {\n          let format = {\n            name: fm.name,\n            restricted: false,\n            balance: \"--\",\n            legal: false\n          };\n\n          if (props.code in fm.data.balance) {\n            format.balance = fm.data.balance[props.code];\n          }\n\n          if (fm.data.restricted.includes(props.code)) {\n            format.restricted = true;\n          }\n\n          if (fm.data.sets.includes(props.crd.set_code)) {\n            format.legal = true;\n          }\n\n          rendElement({\n            rst: true,\n            load: false,\n            error: false\n          });\n          return formats.push(format);\n        });\n        handleStatusChange(formats);\n      }).catch(() => rendElement({\n        rst: false,\n        load: false,\n        error: true\n      }));\n    };\n\n    unsubscribe();\n    return function cleanup() {\n      unsubscribe();\n      abortController.abort();\n    };\n  }, [props.code, props.crd.set_code]);\n  let formats = rst.map((fm, idx) => React.createElement(\"div\", {\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, fm.name), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, fm.restricted ? \"Restricted\" : null), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, fm.balance), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Legal: \", fm.legal ? \"Playable\" : \"Unplayable\")));\n  return React.createElement(\"div\", {\n    className: \"cardInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, props.crd.is_unique && \"â—† \", props.crd.name), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, props.crd.health && \"Health:\", props.crd.health), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, props.crd.cost && \"Cost:\", props.crd.cost), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, props.crd.points && \"Points:\", props.crd.points), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, props.crd.type_name), React.createElement(\"div\", {\n    className: \"subtypes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, subtypes), React.createElement(\"div\", {\n    className: \"sides\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, sides), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, props.crd.has_errata && \"This card has an errata\"), rend.rst && formats, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, rend.load && React.createElement(FontAwesomeIcon, {\n    icon: faSpinner,\n    spin: true,\n    size: \"lg\",\n    style: {\n      color: props.loadColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), rend.error && React.createElement(FontAwesomeIcon, {\n    icon: faExclamationCircle,\n    style: {\n      color: \"red\"\n    },\n    size: \"6x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: props.crd.text\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, props.crd.flavor), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, props.crd.affiliation_name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, props.crd.rarity_name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, props.crd.set_name, \": \", props.crd.position));\n}\n\nexport default CardInfo;","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/CardInfo.js"],"names":["React","FontAwesomeIcon","faSpinner","faExclamationCircle","CardInfo","props","useState","format","restricted","balance","legal","rst","setRst","load","error","rend","rendElement","subtypes","sides","crd","undefined","map","sb","idx","name","length","sd","useEffect","abortController","AbortController","signal","handleStatusChange","status","unsubscribe","fetch","then","response","json","data","formats","fm","code","includes","sets","set_code","push","catch","cleanup","abort","is_unique","health","cost","points","type_name","has_errata","color","loadColor","__html","text","flavor","affiliation_name","rarity_name","set_name","position"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\n\n\nfunction CardInfo(props){\n\n    const [rst, setRst] = React.useState([\n\n       {\n           format:\"trilogy\",\n           restricted:false,\n            balance:\"--\",\n            legal:false\n        },\n        {\n            format:\"standard\",\n            restricted:false,\n            balance:\"--\",\n            legal:false\n        },\n        {\n            format:\"infinite\",\n            restricted:false,\n            balance:\"--\",\n            legal:true\n        }\n    ]);\n\n    const [rend, rendElement] = React.useState({\n        rst:false,\n        load:true,\n        error:false\n    });\n\n\n    let subtypes;\n    let sides;\n\n    if(props.crd.subtypes!==undefined){\n       subtypes =props.crd.subtypes.map((sb, idx)=>\n           <h3 key={idx}>{sb.name}{idx!==(props.crd.subtypes.length-1)&&\"-\"}</h3>\n       );\n    }\n\n    if(props.crd.sides!==undefined){\n        sides = props.crd.sides.map((sd, idx)=>\n            <div key={idx} className={\"side\"}>{sd}</div>\n        );\n    }\n\n    React.useEffect(()=>{\n\n        const abortController = new AbortController();\n        const signal  =abortController.signal;\n\n\n        function handleStatusChange(status) {\n            setRst(status);\n        }\n\n        const unsubscribe = ()=>{\n\n            fetch(\"https://swdestinydb.com/api/public/formats/\", {signal:signal})\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    let formats=[];\n\n                     data.map((fm)=>{\n\n                        let format ={\n                            name:fm.name,\n                            restricted:false,\n                            balance:\"--\",\n                            legal:false\n                        };\n\n                        if(props.code in fm.data.balance){\n                            format.balance = fm.data.balance[props.code];\n                        }\n\n                        if(fm.data.restricted.includes(props.code)){\n                            format.restricted=true;\n                        }\n\n                        if(fm.data.sets.includes(props.crd.set_code)){\n                            format.legal=true;\n                        }\n\n                         rendElement({rst:true,load:false, error:false});\n\n\n                        return formats.push(format);\n\n                    });\n\n                    handleStatusChange(formats);\n                }).catch(()=> rendElement({rst:false,load:false, error:true}))\n        };\n\n        unsubscribe();\n\n\n        return function cleanup(){\n            unsubscribe();\n            abortController.abort();\n        };\n    },[props.code, props.crd.set_code]);\n\n    let formats = rst.map((fm, idx)=>\n    <div key={idx}>\n        <h1>{fm.name}</h1>\n        <h3>{fm.restricted ? \"Restricted\":null}</h3>\n        <h3>{fm.balance}</h3>\n        <h6>Legal: {fm.legal ? \"Playable\":\"Unplayable\"}</h6>\n    </div>\n    );\n\n\n    return(\n        <div className={\"cardInfo\"}>\n            <h1>{props.crd.is_unique&&\"â—† \"}{props.crd.name}</h1>\n            <h2>{props.crd.health&& \"Health:\"}{props.crd.health}</h2>\n            <h2>{props.crd.cost&& \"Cost:\"}{props.crd.cost}</h2>\n            <h2>{props.crd.points&& \"Points:\"}{props.crd.points}</h2>\n            <h2>{props.crd.type_name}</h2>\n            <div className={\"subtypes\"}>{subtypes}</div>\n            <div className={\"sides\"}>{sides}</div>\n            <h3>{props.crd.has_errata&&\"This card has an errata\"}</h3>\n            {rend.rst&&formats}\n            <div>\n                {rend.load&&<FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color:props.loadColor}}/>}\n                {rend.error&&<FontAwesomeIcon icon={faExclamationCircle} style={{color:\"red\"}} size={\"6x\"}/>}\n            </div>\n            <p dangerouslySetInnerHTML={{ __html: props.crd.text }}></p>\n\n            <i>{props.crd.flavor}</i>\n\n            <div>{props.crd.affiliation_name}</div>\n            <div>{props.crd.rarity_name}</div>\n\n            <div>{props.crd.set_name}: {props.crd.position}</div>\n\n\n        </div>\n    )\n}\n\nexport default CardInfo"]},"metadata":{},"sourceType":"module"}