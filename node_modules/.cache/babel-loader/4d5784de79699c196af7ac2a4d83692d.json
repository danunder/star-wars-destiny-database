{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/CardInfo.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport Side from './Side';\n\nfunction CardInfo(props) {\n  const _React$useState = React.useState([{\n    format: \"trilogy\",\n    restricted: false,\n    balance: \"--\",\n    legal: false\n  }, {\n    format: \"standard\",\n    restricted: false,\n    balance: \"--\",\n    legal: false\n  }, {\n    format: \"infinite\",\n    restricted: false,\n    balance: \"--\",\n    legal: true\n  }]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        rst = _React$useState2[0],\n        setRst = _React$useState2[1];\n\n  const _React$useState3 = React.useState({\n    rst: false,\n    load: true,\n    error: false\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rend = _React$useState4[0],\n        rendElement = _React$useState4[1];\n\n  React.useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    function handleStatusChange(status) {\n      setRst(status);\n    }\n\n    const unsubscribe = () => {\n      fetch(\"https://swdestinydb.com/api/public/formats/\", {\n        signal: signal\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        let formats = [];\n        data.map(fm => {\n          let format = {\n            name: fm.name,\n            restricted: false,\n            balance: \"--\",\n            legal: false\n          };\n\n          if (props.code in fm.data.balance) {\n            format.balance = fm.data.balance[props.code];\n          }\n\n          if (fm.data.restricted.includes(props.code)) {\n            format.restricted = true;\n          }\n\n          if (fm.data.sets.includes(props.crd.set_code)) {\n            format.legal = true;\n          }\n\n          rendElement({\n            rst: true,\n            load: false,\n            error: false\n          });\n          return formats.push(format);\n        });\n        handleStatusChange(formats);\n      }).catch(() => rendElement({\n        rst: false,\n        load: false,\n        error: true\n      }));\n    };\n\n    unsubscribe();\n    return function cleanup() {\n      unsubscribe();\n      abortController.abort();\n    };\n  }, [props.code, props.crd.set_code]);\n  let formats = rst.map((fm, idx) => React.createElement(\"div\", {\n    key: idx,\n    className: \"format\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, fm.name), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, fm.restricted ? \"Restricted\" : null), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, fm.balance), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Legal: \", fm.legal ? \"Playable\" : \"Unplayable\")));\n  return React.createElement(\"div\", {\n    className: \"cardInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, props.crd.is_unique && \"â—† \", props.crd.name), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, props.crd.health && \"Health:\", props.crd.health), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, props.crd.cost && \"Cost:\", props.crd.cost), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, props.crd.points && \"Points:\", props.crd.points), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, props.crd.type_name), React.createElement(\"div\", {\n    className: \"subtypes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, props.crd.subtypes !== undefined && props.crd.subtypes.map((sb, idx) => React.createElement(\"h3\", {\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, sb.name, idx !== props.crd.subtypes.length - 1 && \"-\"))), React.createElement(\"div\", {\n    className: \"sides\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, props.crd.sides !== undefined && props.crd.sides.map((sd, idx) => React.createElement(Side, {\n    key: idx,\n    sd: sd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }))), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, props.crd.has_errata && \"This card has an errata\"), React.createElement(\"div\", {\n    className: \"formats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, rend.rst && formats), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, rend.load && React.createElement(FontAwesomeIcon, {\n    icon: faSpinner,\n    spin: true,\n    size: \"lg\",\n    style: {\n      color: props.loadColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), rend.error && React.createElement(FontAwesomeIcon, {\n    icon: faExclamationCircle,\n    style: {\n      color: \"red\"\n    },\n    size: \"6x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: props.crd.text\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, props.crd.flavor), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, props.crd.affiliation_name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, props.crd.rarity_name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, props.crd.set_name, \": \", props.crd.position));\n}\n\nexport default CardInfo;","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/CardInfo.js"],"names":["React","FontAwesomeIcon","faSpinner","faExclamationCircle","Side","CardInfo","props","useState","format","restricted","balance","legal","rst","setRst","load","error","rend","rendElement","useEffect","abortController","AbortController","signal","handleStatusChange","status","unsubscribe","fetch","then","response","json","data","formats","map","fm","name","code","includes","sets","crd","set_code","push","catch","cleanup","abort","idx","is_unique","health","cost","points","type_name","subtypes","undefined","sb","length","sides","sd","has_errata","color","loadColor","__html","text","flavor","affiliation_name","rarity_name","set_name","position"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\nimport Side from './Side';\n\n\nfunction CardInfo(props) {\n\n    const [rst, setRst] = React.useState([\n\n        {\n            format: \"trilogy\",\n            restricted: false,\n            balance: \"--\",\n            legal: false\n        },\n        {\n            format: \"standard\",\n            restricted: false,\n            balance: \"--\",\n            legal: false\n        },\n        {\n            format: \"infinite\",\n            restricted: false,\n            balance: \"--\",\n            legal: true\n        }\n    ]);\n\n    const [rend, rendElement] = React.useState({\n        rst: false,\n        load: true,\n        error: false\n    });\n\n\n    React.useEffect(() => {\n\n        const abortController = new AbortController();\n        const signal = abortController.signal;\n\n\n        function handleStatusChange(status) {\n            setRst(status);\n        }\n\n        const unsubscribe = () => {\n\n            fetch(\"https://swdestinydb.com/api/public/formats/\", {signal: signal})\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    let formats = [];\n\n                    data.map((fm) => {\n\n                        let format = {\n                            name: fm.name,\n                            restricted: false,\n                            balance: \"--\",\n                            legal: false\n                        };\n\n                        if (props.code in fm.data.balance) {\n                            format.balance = fm.data.balance[props.code];\n                        }\n\n                        if (fm.data.restricted.includes(props.code)) {\n                            format.restricted = true;\n                        }\n\n                        if (fm.data.sets.includes(props.crd.set_code)) {\n                            format.legal = true;\n                        }\n\n                        rendElement({rst: true, load: false, error: false});\n\n\n                        return formats.push(format);\n\n                    });\n\n                    handleStatusChange(formats);\n                }).catch(() => rendElement({rst: false, load: false, error: true}))\n        };\n\n        unsubscribe();\n\n\n        return function cleanup() {\n            unsubscribe();\n            abortController.abort();\n        };\n    }, [props.code, props.crd.set_code]);\n\n    let formats = rst.map((fm, idx) =>\n        <div key={idx} className={\"format\"}>\n            <h3>{fm.name}</h3>\n            <h3>{fm.restricted ? \"Restricted\" : null}</h3>\n            <h3>{fm.balance}</h3>\n            <h6>Legal: {fm.legal ? \"Playable\" : \"Unplayable\"}</h6>\n        </div>\n    );\n\n\n    return (\n        <div className={\"cardInfo\"}>\n            <h1>{props.crd.is_unique && \"â—† \"}{props.crd.name}</h1>\n            <h2>{props.crd.health && \"Health:\"}{props.crd.health}</h2>\n            <h2>{props.crd.cost && \"Cost:\"}{props.crd.cost}</h2>\n            <h2>{props.crd.points && \"Points:\"}{props.crd.points}</h2>\n            <h2>{props.crd.type_name}</h2>\n            <div className={\"subtypes\"}>{props.crd.subtypes !== undefined && props.crd.subtypes.map((sb, idx) =>\n                <h3 key={idx}>{sb.name}{idx !== (props.crd.subtypes.length - 1) && \"-\"}</h3>\n            )}</div>\n            <div className={\"sides\"}>{props.crd.sides !== undefined && props.crd.sides.map((sd, idx) =>\n                <Side key={idx} sd={sd}/>\n            )}</div>\n            <h3>{props.crd.has_errata && \"This card has an errata\"}</h3>\n            <div className={\"formats\"}>\n                {rend.rst && formats}\n            </div>\n            <div>\n                {rend.load && <FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color: props.loadColor}}/>}\n                {rend.error && <FontAwesomeIcon icon={faExclamationCircle} style={{color: \"red\"}} size={\"6x\"}/>}\n            </div>\n            <p dangerouslySetInnerHTML={{__html: props.crd.text}}></p>\n\n            <i>{props.crd.flavor}</i>\n\n            <div>{props.crd.affiliation_name}</div>\n            <div>{props.crd.rarity_name}</div>\n\n            <div>{props.crd.set_name}: {props.crd.position}</div>\n\n\n        </div>\n    )\n}\n\nexport default CardInfo"]},"metadata":{},"sourceType":"module"}