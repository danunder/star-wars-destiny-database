{"ast":null,"code":"import _slicedToArray from\"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import'./less/style.css';import List from'./components/main/List';import CardPage from'./components/card/CardPage';import Nav from'./components/nav/Navigation';import Options from'./components/nav/options';import SortNav from'./components/nav/SortNav';import StyleOptions from'./components/nav/StyleOptions';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSpinner,faExclamationCircle}from'@fortawesome/free-solid-svg-icons';import{connect}from'react-redux';import{setCards as _setCards,setFormats as _setFormats,setSets as _setSets}from\"./redux/actions/setActions\";import{Switch,Route}from\"react-router-dom\";function App(props){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),show=_React$useState2[0],updateShow=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),seconds=_React$useState4[0],setSeconds=_React$useState4[1];var _React$useState5=React.useState(60),_React$useState6=_slicedToArray(_React$useState5,2),pad=_React$useState6[0],setPad=_React$useState6[1];// const [load, setLoad] =React.useState(\"load\");\nReact.useEffect(function(){localStorage.setItem('localStyle',JSON.stringify(props.style));// let loadCards=\"load\";\n// let loadFormats=\"load\";\n// let loadSets=\"load\";\n//\n// fetch(\"https://swdestinydb.com/api/public/cards/\")\n//     .then(response => {\n//         return response.json();\n//     })\n//     .then((data) => {\n//         loadCards=\"loaded\";\n//         props.setCards(data);\n//     }).catch(function () {\n//     loadCards=\"error\";\n// });\n//\n// fetch(\"https://swdestinydb.com/api/public/formats/\")\n//     .then(response => {\n//         return response.json();\n//     })\n//     .then((data) => {\n//         loadFormats=\"loaded\";\n//         props.setFormats(data);\n//     }).catch(function () {\n//     loadCards=\"error\";\n// });\n//\n// fetch(\"https://swdestinydb.com/api/public/sets/\")\n//     .then(response => {\n//         return response.json();\n//     })\n//     .then((data) => {\n//         loadSets=\"loaded\";\n//         props.setSets(data);\n//     }).catch(function () {\n//     loadCards=\"error\";\n// });\n//\n// if(loadCards===\"loaded\"&&loadFormats===\"loaded\"&&loadSets===\"loaded\"){\n//     setLoad(\"loaded\")\n// }else if(loadCards===\"error\"||loadFormats===\"error\"||loadSets===\"error\"){\n//     setLoad(\"error\");\n// }\nvar check=false;for(var p in props.sorted){if(props.sorted[p].toggle){check=true;}}updateShow(check);var interval=null;interval=setInterval(function(){setSeconds(function(seconds){return seconds+1;});},500);// if(load===\"loaded\"){\nsetPad(document.querySelector(\".sortNav\").getBoundingClientRect().height);document.documentElement.style.backgroundColor=props.style.body;// }\nreturn function(){return clearInterval(interval);};},[props.style,props.sorted,seconds]);var appStyle={backgroundColor:props.style.body};var wrapStyle={color:props.style.bodyText,backgroundColor:props.style.body,paddingTop:show?\"\"+pad+\"px\":\"0\"};return React.createElement(\"div\",{className:\"App\",style:appStyle},React.createElement(Nav,null),React.createElement(SortNav,null),React.createElement(Options,null),React.createElement(StyleOptions,null),React.createElement(\"div\",{className:\"mainWrapper\",style:wrapStyle},React.createElement(Switch,null,React.createElement(Route,{path:\"/\",component:List}))),React.createElement(Route,{path:\"/:id\",component:CardPage}));}var mapStateToProps=function mapStateToProps(state){return{style:state.style,sorted:state.sorted};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setCards:function setCards(crds){dispatch(_setCards(crds));},setFormats:function setFormats(fmts){dispatch(_setFormats(fmts));},setSets:function setSets(sts){dispatch(_setSets(sts));}};};export default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/App.js"],"names":["React","List","CardPage","Nav","Options","SortNav","StyleOptions","FontAwesomeIcon","faSpinner","faExclamationCircle","connect","setCards","setFormats","setSets","Switch","Route","App","props","useState","show","updateShow","seconds","setSeconds","pad","setPad","useEffect","localStorage","setItem","JSON","stringify","style","check","p","sorted","toggle","interval","setInterval","document","querySelector","getBoundingClientRect","height","documentElement","backgroundColor","body","clearInterval","appStyle","wrapStyle","color","bodyText","paddingTop","mapStateToProps","state","mapDispatchToProps","dispatch","crds","fmts","sts"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage'\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport SortNav from './components/nav/SortNav'\nimport StyleOptions from './components/nav/StyleOptions';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\n\nimport {connect} from 'react-redux';\nimport {setCards, setFormats, setSets} from \"./redux/actions/setActions\";\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\n\nfunction App(props) {\n\n    const [show, updateShow] = React.useState(false);\n    const [seconds, setSeconds] = React.useState(0);\n    const [pad, setPad] = React.useState(60);\n    // const [load, setLoad] =React.useState(\"load\");\n\n\n    React.useEffect(() => {\n        localStorage.setItem('localStyle', JSON.stringify(props.style));\n        // let loadCards=\"load\";\n        // let loadFormats=\"load\";\n        // let loadSets=\"load\";\n        //\n        // fetch(\"https://swdestinydb.com/api/public/cards/\")\n        //     .then(response => {\n        //         return response.json();\n        //     })\n        //     .then((data) => {\n        //         loadCards=\"loaded\";\n        //         props.setCards(data);\n        //     }).catch(function () {\n        //     loadCards=\"error\";\n        // });\n        //\n        // fetch(\"https://swdestinydb.com/api/public/formats/\")\n        //     .then(response => {\n        //         return response.json();\n        //     })\n        //     .then((data) => {\n        //         loadFormats=\"loaded\";\n        //         props.setFormats(data);\n        //     }).catch(function () {\n        //     loadCards=\"error\";\n        // });\n        //\n        // fetch(\"https://swdestinydb.com/api/public/sets/\")\n        //     .then(response => {\n        //         return response.json();\n        //     })\n        //     .then((data) => {\n        //         loadSets=\"loaded\";\n        //         props.setSets(data);\n        //     }).catch(function () {\n        //     loadCards=\"error\";\n        // });\n        //\n        // if(loadCards===\"loaded\"&&loadFormats===\"loaded\"&&loadSets===\"loaded\"){\n        //     setLoad(\"loaded\")\n        // }else if(loadCards===\"error\"||loadFormats===\"error\"||loadSets===\"error\"){\n        //     setLoad(\"error\");\n        // }\n\n        let check = false;\n\n        for (let p in props.sorted) {\n            if (props.sorted[p].toggle) {\n                check = true;\n            }\n        }\n\n        updateShow(check);\n\n        let interval = null;\n\n        interval = setInterval(() => {\n            setSeconds(seconds => seconds + 1);\n        }, 500);\n\n        // if(load===\"loaded\"){\n            setPad(document.querySelector(\".sortNav\").getBoundingClientRect().height);\n\n            document.documentElement.style.backgroundColor = props.style.body;\n        // }\n\n\n        return () => clearInterval(interval);\n\n    }, [props.style, props.sorted, seconds]);\n\n    let appStyle = {\n        backgroundColor: props.style.body\n    };\n\n    let wrapStyle = {\n        color: props.style.bodyText,\n        backgroundColor: props.style.body,\n        paddingTop: (show ? \"\" + pad + \"px\" : \"0\")\n    };\n\n    return (\n\n        <div className=\"App\" style={appStyle}>\n            {/*{load===\"loaded\"&&<span><Nav/> <SortNav/> <Options/> <StyleOptions/> <div className={\"mainWrapper\"} style={wrapStyle}><Switch><Route path=\"/\" component={List}/></Switch></div><Route path={\"/:id\"} component={CardPage}/></span>}*/}\n            {/*{load===\"load\"&&<div style={{height:\"100%\"}}><FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color:props.style.bodyText}}/></div>}*/}\n            <Nav/>\n            <SortNav/>\n            <Options/>\n            <StyleOptions/>\n            <div className={\"mainWrapper\"} style={wrapStyle}>\n                <Switch>\n                    <Route path=\"/\" component={List}/>\n                </Switch>\n            </div>\n            <Route path={\"/:id\"} component={CardPage}/>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style,\n        sorted: state.sorted\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setCards: (crds) => {\n            dispatch(setCards(crds))\n        },\n        setFormats: (fmts) => {\n            dispatch(setFormats(fmts))\n        },\n        setSets: (sts) => {\n            dispatch(setSets(sts))\n        },\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}