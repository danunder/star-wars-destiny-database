{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/input/Search.js\";\nimport React from 'react';\nimport { setName } from \"../../redux/actions/setActions\";\nimport { connect } from 'react-redux';\n\nfunction Search(props) {\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        text = _React$useState2[0],\n        setText = _React$useState2[1];\n\n  const handleChange = event => {\n    props.setName(text);\n    setText(event.target.value);\n  };\n\n  return React.createElement(\"input\", {\n    placeholder: \"Search for a Card by Name...\",\n    onChange: handleChange,\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n}\n\nconst mapStateToProps = state => {\n  return {\n    displayedSet: state.displayedSet,\n    itemLimit: state.itemLimit,\n    setLimit: state.setLimit,\n    sorted: state.sorted\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setName: name => {\n      dispatch(setName(name));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/input/Search.js"],"names":["React","setName","connect","Search","props","useState","text","setText","handleChange","event","target","value","mapStateToProps","state","displayedSet","itemLimit","setLimit","sorted","mapDispatchToProps","dispatch","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,gCAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,0BAEKJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAFL;AAAA;AAAA,QAEZC,IAFY;AAAA,QAENC,OAFM;;AAKnB,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1BL,IAAAA,KAAK,CAACH,OAAN,CAAcK,IAAd;AACAC,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AAEH,GAJD;;AASA,SACI;AAAO,IAAA,WAAW,EAAE,8BAApB;AAAoD,IAAA,QAAQ,EAAEH,YAA9D;AAA4E,IAAA,SAAS,EAAE,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAIH;;AAED,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,YAAY,EAAED,KAAK,CAACC,YADjB;AAEHC,IAAAA,SAAS,EAAEF,KAAK,CAACE,SAFd;AAGHC,IAAAA,QAAQ,EAAEH,KAAK,CAACG,QAHb;AAIHC,IAAAA,MAAM,EAACJ,KAAK,CAACI;AAJV,GAAP;AAMH,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAY;AACnC,SAAO;AACHlB,IAAAA,OAAO,EAAGmB,IAAD,IAAU;AACfD,MAAAA,QAAQ,CAAClB,OAAO,CAACmB,IAAD,CAAR,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAelB,OAAO,CAACU,eAAD,EAAkBM,kBAAlB,CAAP,CAA6Cf,MAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {setName} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\n\nfunction Search(props) {\n\n    const [text, setText] = React.useState(\"\");\n\n\n    const handleChange = event => {\n        props.setName(text);\n        setText(event.target.value);\n\n    };\n\n\n\n\n    return (\n        <input placeholder={\"Search for a Card by Name...\"} onChange={handleChange} className={\"search\"}/>\n\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        displayedSet: state.displayedSet,\n        itemLimit: state.itemLimit,\n        setLimit: state.setLimit,\n        sorted:state.sorted\n    }\n};\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        setName: (name) => {\n            dispatch(setName(name))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n"]},"metadata":{},"sourceType":"module"}