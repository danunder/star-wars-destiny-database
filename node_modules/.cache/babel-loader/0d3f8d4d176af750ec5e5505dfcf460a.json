{"ast":null,"code":"import React from'react';import{toggleOptions as _toggleOptions,clearOptions as _clearOptions,toggleStyles as _toggleStyles}from\"../../redux/actions/setActions\";import{connect}from'react-redux';import Search from'../input/Search';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSearch,faTimes,faPalette}from'@fortawesome/free-solid-svg-icons';function Nav(props){var style={color:props.style.navText,backgroundColor:props.style.nav};return React.createElement(\"nav\",{style:style},React.createElement(\"div\",{className:\"logo\"},props.style.name!==undefined?React.createElement(\"img\",{alt:\"logo\",src:require(\"./../../assets/\"+props.style.name.toLowerCase()+\"logo.svg\"),onClick:function onClick(){return props.clearOptions();}}):React.createElement(\"img\",{alt:\"logo\",src:require(\"./../../assets/awakeningslogo.svg\"),onClick:function onClick(){return props.clearOptions();}})),React.createElement(Search,null),React.createElement(\"div\",{className:\"ham\"},!props.styles&&React.createElement(FontAwesomeIcon,{icon:faPalette,size:\"2x\",onClick:function onClick(){return props.toggleStyles();}}),props.styles&&React.createElement(FontAwesomeIcon,{icon:faTimes,size:\"2x\",onClick:function onClick(){return props.toggleStyles();}}),!props.options&&React.createElement(FontAwesomeIcon,{icon:faSearch,size:\"2x\",onClick:function onClick(){return props.toggleOptions();}}),props.options&&React.createElement(FontAwesomeIcon,{icon:faTimes,size:\"2x\",onClick:function onClick(){return props.toggleOptions();}})));}var mapStateToProps=function mapStateToProps(state){return{options:state.options,styles:state.styles,style:state.style};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{toggleOptions:function toggleOptions(){dispatch(_toggleOptions());},clearOptions:function clearOptions(){dispatch(_clearOptions());},toggleStyles:function toggleStyles(){dispatch(_toggleStyles());}};};export default connect(mapStateToProps,mapDispatchToProps)(Nav);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/Navigation.js"],"names":["React","toggleOptions","clearOptions","toggleStyles","connect","Search","FontAwesomeIcon","faSearch","faTimes","faPalette","Nav","props","style","color","navText","backgroundColor","nav","name","undefined","require","toLowerCase","styles","options","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {toggleOptions, clearOptions, toggleStyles} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\nimport Search from '../input/Search';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSearch, faTimes, faPalette} from '@fortawesome/free-solid-svg-icons';\n\nfunction Nav(props) {\n\n    let style= {\n        color:props.style.navText,\n        backgroundColor:props.style.nav\n    };\n\n    return (\n\n\n        <nav style={style}>\n            <div className={\"logo\"} >\n                {(props.style.name!==undefined)?<img alt={\"logo\"} src={require(\"./../../assets/\"+props.style.name.toLowerCase()+\"logo.svg\")} onClick={()=>props.clearOptions()}/>:<img alt={\"logo\"} src={require(\"./../../assets/awakeningslogo.svg\")} onClick={()=>props.clearOptions()}/>}\n            </div>\n            <Search/>\n            <div className={\"ham\"} >\n\n                {!props.styles && <FontAwesomeIcon icon={faPalette} size=\"2x\" onClick={() => props.toggleStyles()}/>}\n                {props.styles && <FontAwesomeIcon icon={faTimes} size=\"2x\" onClick={() => props.toggleStyles()}/>}\n\n                {!props.options && <FontAwesomeIcon icon={faSearch} size=\"2x\" onClick={() => props.toggleOptions()}/>}\n                {props.options && <FontAwesomeIcon icon={faTimes} size=\"2x\" onClick={() => props.toggleOptions()}/>}\n\n            </div>\n\n        </nav>\n\n\n    );\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        options: state.options,\n        styles:state.styles,\n        style:state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleOptions: () => {\n            dispatch(toggleOptions())\n        },\n        clearOptions:()=>{\n            dispatch(clearOptions())\n        },\n        toggleStyles: ()=>{\n            dispatch(toggleStyles())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n"]},"metadata":{},"sourceType":"module"}