{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/CardInfo.js\";\nimport React from 'react';\n\nfunction CardInfo(props) {\n  const _React$useState = React.useState([{\n    format: \"trilogy\",\n    restricted: false,\n    balance: \"--\",\n    legal: false\n  }, {\n    format: \"standard\",\n    restricted: false,\n    balance: \"--\",\n    legal: false\n  }, {\n    format: \"infinite\",\n    restricted: false,\n    balance: \"--\",\n    legal: true\n  }]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        rst = _React$useState2[0],\n        setRst = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        load = _React$useState4[0],\n        setLoad = _React$useState4[1];\n\n  let subtypes;\n  let sides;\n\n  if (props.crd.subtypes !== undefined) {\n    subtypes = props.crd.subtypes.map((sb, idx) => React.createElement(\"h3\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, sb.name, idx !== props.crd.subtypes.length - 1 && \"-\"));\n  }\n\n  if (props.crd.sides !== undefined) {\n    sides = props.crd.sides.map((sd, idx) => React.createElement(\"div\", {\n      key: idx,\n      className: \"side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, sd));\n  }\n\n  React.useEffect(() => {\n    function handleStatusChange(status) {\n      setRst(status);\n      console.log(rst);\n    }\n\n    const unsubscribe = () => {\n      let formats = [];\n      fetch(\"https://swdestinydb.com/api/public/formats/\").then(response => {\n        return response.json();\n      }).then(data => {\n        let format = data.map(fm => {\n          let format = {\n            name: fm.name,\n            restricted: false,\n            balance: \"\",\n            legal: false\n          };\n          console.log(props.crd.code);\n\n          if (props.crd.code in fm.data.balance) {\n            format.balance = fm.data.balance[props.crd.code];\n            console.log(\"hit\");\n          } // if(){\n          //\n          // }\n          //\n          // if(){\n          //\n          // }\n\n        });\n        handleStatusChange(format);\n      });\n    };\n\n    unsubscribe();\n    return () => unsubscribe();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"cardInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, props.crd.is_unique && \"â—† \", props.crd.name), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, props.crd.health && \"Health:\", props.crd.health), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, props.crd.cost && \"Cost:\", props.crd.cost), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, props.crd.points && \"Points:\", props.crd.points), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, props.crd.type_name), React.createElement(\"div\", {\n    className: \"subtypes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, subtypes), React.createElement(\"div\", {\n    className: \"sides\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, sides), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, props.crd.has_errata && \"This card has an errata\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, props.crd.text), React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, props.crd.flavor), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, props.crd.affiliation_name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, props.crd.rarity_name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, props.crd.set_name, \": \", props.crd.position));\n}\n\nexport default CardInfo;","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/CardInfo.js"],"names":["React","CardInfo","props","useState","format","restricted","balance","legal","rst","setRst","load","setLoad","subtypes","sides","crd","undefined","map","sb","idx","name","length","sd","useEffect","handleStatusChange","status","console","log","unsubscribe","formats","fetch","then","response","json","data","fm","code","is_unique","health","cost","points","type_name","has_errata","text","flavor","affiliation_name","rarity_name","set_name","position"],"mappings":"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","sourcesContent":["import React from 'react';\n\nfunction CardInfo(props){\n\n    const [rst, setRst] = React.useState([\n\n       {\n           format:\"trilogy\",\n           restricted:false,\n            balance:\"--\",\n            legal:false\n        },\n        {\n            format:\"standard\",\n            restricted:false,\n            balance:\"--\",\n            legal:false\n        },\n        {\n            format:\"infinite\",\n            restricted:false,\n            balance:\"--\",\n            legal:true\n        }\n    ]);\n    const [load, setLoad]= React.useState(false);\n\n\n    let subtypes;\n    let sides;\n\n    if(props.crd.subtypes!==undefined){\n       subtypes =props.crd.subtypes.map((sb, idx)=>\n           <h3 key={idx}>{sb.name}{idx!==(props.crd.subtypes.length-1)&&\"-\"}</h3>\n       );\n    }\n\n    if(props.crd.sides!==undefined){\n        sides = props.crd.sides.map((sd, idx)=>\n            <div key={idx} className={\"side\"}>{sd}</div>\n        );\n    }\n\n    React.useEffect(()=>{\n\n\n        function handleStatusChange(status) {\n            setRst(status);\n            console.log(rst);\n        }\n\n        const unsubscribe = ()=>{\n\n            let formats=[];\n\n            fetch(\"https://swdestinydb.com/api/public/formats/\")\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n\n                    let format = data.map((fm)=>{\n\n                        let format ={\n                            name:fm.name,\n                            restricted:false,\n                            balance:\"\",\n                            legal:false\n                        };\n\n                        console.log(props.crd.code );\n\n                        if(props.crd.code in fm.data.balance){\n                            format.balance = fm.data.balance[props.crd.code]\n                            console.log(\"hit\");\n                        }\n\n                        // if(){\n                        //\n                        // }\n                        //\n                        // if(){\n                        //\n                        // }\n\n                    });\n\n                    handleStatusChange(format);\n                })\n        };\n\n        unsubscribe();\n\n\n        return ()=>unsubscribe();\n    },[]);\n\n\n    return(\n        <div className={\"cardInfo\"}>\n            <h1>{props.crd.is_unique&&\"â—† \"}{props.crd.name}</h1>\n            <h2>{props.crd.health&& \"Health:\"}{props.crd.health}</h2>\n            <h2>{props.crd.cost&& \"Cost:\"}{props.crd.cost}</h2>\n            <h2>{props.crd.points&& \"Points:\"}{props.crd.points}</h2>\n            <h2>{props.crd.type_name}</h2>\n            <div className={\"subtypes\"}>{subtypes}</div>\n            <div className={\"sides\"}>{sides}</div>\n            <h3>{props.crd.has_errata&&\"This card has an errata\"}</h3>\n            <p>{props.crd.text}</p>\n\n            <i>{props.crd.flavor}</i>\n\n            <div>{props.crd.affiliation_name}</div>\n            <div>{props.crd.rarity_name}</div>\n\n            <div>{props.crd.set_name}: {props.crd.position}</div>\n\n\n        </div>\n    )\n}\n\nexport default CardInfo"]},"metadata":{},"sourceType":"module"}