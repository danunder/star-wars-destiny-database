{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/App.js\";\nimport React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage';\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport SortNav from './components/nav/SortNav';\nimport StyleOptions from './components/nav/StyleOptions';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App(props) {\n  const _React$useState = React.useState(JSON.parse(localStorage.getItem('localStyle')) || ''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        style = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        show = _React$useState4[0],\n        updateShow = _React$useState4[1];\n\n  const _React$useState5 = React.useState(\"\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        pad = _React$useState6[0],\n        changePad = _React$useState6[1];\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        time = _React$useState8[0],\n        changeTime = _React$useState8[1];\n\n  React.useEffect(() => {\n    localStorage.setItem('localStyle', JSON.stringify(props.style));\n    setValue(props.style);\n    setInterval(() => {\n      changeTime(time => time + 1);\n    }, 1000);\n\n    const getBound = () => {\n      if (pad === \"\") {\n        let ele = document.querySelector(\".sortNav\").getBoundingClientRect();\n        console.log(ele.height);\n        changePad(ele.height);\n      }\n    };\n\n    let check = false;\n\n    for (let p in props.sorted) {\n      if (props.sorted[p].toggle) {\n        check = true;\n      }\n    }\n\n    getBound();\n    updateShow(check);\n  }, [props.style, style, props.sorted, time]);\n  document.documentElement.style.backgroundColor = props.style.body;\n  return React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: style.body\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(SortNav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Options, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(StyleOptions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"mainWrapper\",\n    style: {\n      color: style.bodyText,\n      backgroundColor: props.style.body,\n      paddingTop: show ? \"\" + pad + \"px\" : \"0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    component: List,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))), React.createElement(Route, {\n    path: \"/:id\",\n    component: CardPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    style: state.style,\n    sorted: state.sorted\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/App.js"],"names":["React","List","CardPage","Nav","Options","SortNav","StyleOptions","connect","Switch","Route","App","props","useState","JSON","parse","localStorage","getItem","style","setValue","show","updateShow","pad","changePad","time","changeTime","useEffect","setItem","stringify","setInterval","getBound","ele","document","querySelector","getBoundingClientRect","console","log","height","check","p","sorted","toggle","documentElement","backgroundColor","body","color","bodyText","paddingTop","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage'\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport SortNav from './components/nav/SortNav'\nimport StyleOptions from './components/nav/StyleOptions';\nimport {connect} from 'react-redux';\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\nfunction App(props) {\n\n    const [style, setValue] = React.useState(\n        JSON.parse(localStorage.getItem('localStyle')) || ''\n    );\n    const [show, updateShow] = React.useState(false);\n    const [pad, changePad] = React.useState(\"\");\n    const [time, changeTime] = React.useState(0);\n\n    React.useEffect(() => {\n        localStorage.setItem('localStyle', JSON.stringify(props.style));\n        setValue(props.style);\n\n        setInterval(() => {\n            changeTime(time => time + 1);\n        }, 1000);\n\n        const getBound = () => {\n            if (pad === \"\") {\n                let ele = document.querySelector(\".sortNav\").getBoundingClientRect();\n                console.log(ele.height);\n                changePad(ele.height);\n            }\n        };\n\n\n\n\n\n        let check = false;\n\n        for (let p in props.sorted) {\n            if (props.sorted[p].toggle) {\n                check = true;\n            }\n\n        }\n\n        getBound();\n\n        updateShow(check);\n    }, [props.style, style, props.sorted, time]);\n\n\n    document.documentElement.style.backgroundColor = props.style.body;\n\n    return (\n\n        <div className=\"App\" style={{backgroundColor: style.body}}>\n            <Nav/>\n            <SortNav/>\n            <Options/>\n            <StyleOptions/>\n            <div className={\"mainWrapper\"} style={{\n                color: style.bodyText,\n                backgroundColor: props.style.body,\n                paddingTop: (show ? \"\" + pad + \"px\" : \"0\")\n            }}>\n                <Switch>\n                    <Route path=\"/\" component={List}/>\n                </Switch>\n            </div>\n            <Route path={\"/:id\"} component={CardPage}/>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style,\n        sorted: state.sorted\n    }\n};\n\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}