{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/SortNav.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nfunction SortNav(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        show = _React$useState2[0],\n        updateShow = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        tags = _React$useState4[0],\n        updateTags = _React$useState4[1];\n\n  React.useEffect(() => {\n    let check = false;\n    let tagArray = [];\n\n    for (let p in props.sorted) {\n      if (props.sorted[p].toggle) {\n        check = true;\n        tagArray.push(p);\n      }\n    }\n\n    updateShow(check);\n    updateTags(tagArray);\n  }, [props.sorted]);\n  let shower;\n\n  if (show) {\n    shower = {\n      top: '80px'\n    };\n  } else {\n    shower = {\n      top: '-80px'\n    };\n  }\n\n  let tagEles = tags.map(() => React.createElement(\"div\", {\n    className: \"itm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Item\"));\n  return React.createElement(\"div\", {\n    className: \"sortNav\",\n    style: shower,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, tagEles);\n}\n\nconst mapStateToProps = state => {\n  return {\n    sorted: state.sorted\n  };\n};\n\nexport default connect(mapStateToProps)(SortNav);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/SortNav.js"],"names":["React","connect","SortNav","props","useState","show","updateShow","tags","updateTags","useEffect","check","tagArray","p","sorted","toggle","push","shower","top","tagEles","map","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,0BAEOH,KAAK,CAACI,QAAN,CAAe,KAAf,CAFP;AAAA;AAAA,QAEbC,IAFa;AAAA,QAEPC,UAFO;;AAAA,2BAGON,KAAK,CAACI,QAAN,CAAe,EAAf,CAHP;AAAA;AAAA,QAGbG,IAHa;AAAA,QAGPC,UAHO;;AAMpBR,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AAClB,QAAIC,KAAK,GAAG,KAAZ;AACA,QAAIC,QAAQ,GAAC,EAAb;;AAEA,SAAK,IAAIC,CAAT,IAAcT,KAAK,CAACU,MAApB,EAA4B;AACxB,UAAIV,KAAK,CAACU,MAAN,CAAaD,CAAb,EAAgBE,MAApB,EAA4B;AACxBJ,QAAAA,KAAK,GAAG,IAAR;AACAC,QAAAA,QAAQ,CAACI,IAAT,CAAcH,CAAd;AACH;AACJ;;AAEDN,IAAAA,UAAU,CAACI,KAAD,CAAV;AACAF,IAAAA,UAAU,CAACG,QAAD,CAAV;AAGH,GAfD,EAeG,CAACR,KAAK,CAACU,MAAP,CAfH;AAiBA,MAAIG,MAAJ;;AAEA,MAAGX,IAAH,EAAQ;AACLW,IAAAA,MAAM,GAAC;AACHC,MAAAA,GAAG,EAAC;AADD,KAAP;AAGF,GAJD,MAIK;AACDD,IAAAA,MAAM,GAAC;AACHC,MAAAA,GAAG,EAAE;AADF,KAAP;AAGH;;AAED,MAAIC,OAAO,GAAGX,IAAI,CAACY,GAAL,CAAS,MACnB;AAAK,IAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,CAAd;AAKA,SACI;AAAK,IAAA,SAAS,EAAE,SAAhB;AAA2B,IAAA,KAAK,EAAEH,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,OADL,CADJ;AAKH;;AAED,MAAME,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,MAAM,EAAEQ,KAAK,CAACR;AADX,GAAP;AAGH,CAJD;;AAMA,eAAeZ,OAAO,CAACmB,eAAD,CAAP,CAAyBlB,OAAzB,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction SortNav(props) {\n\n    const [show, updateShow] = React.useState(false);\n    const [tags, updateTags] = React.useState([]);\n\n\n    React.useEffect(() => {\n        let check = false;\n        let tagArray=[];\n\n        for (let p in props.sorted) {\n            if (props.sorted[p].toggle) {\n                check = true;\n                tagArray.push(p);\n            }\n        }\n\n        updateShow(check);\n        updateTags(tagArray);\n\n\n    }, [props.sorted]);\n\n    let shower;\n\n    if(show){\n       shower={\n           top:'80px'\n       }\n    }else{\n        shower={\n            top: '-80px'\n        }\n    }\n\n    let tagEles = tags.map(()=>\n        <div className={\"itm\"}>Item</div>\n    );\n\n\n    return (\n        <div className={\"sortNav\"} style={shower}>\n            {tagEles}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted\n    }\n};\n\nexport default connect(mapStateToProps)(SortNav);"]},"metadata":{},"sourceType":"module"}