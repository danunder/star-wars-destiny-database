{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/App.js\";\nimport React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage';\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport SortNav from './components/nav/SortNav';\nimport StyleOptions from './components/nav/StyleOptions';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App(props) {\n  const _React$useState = React.useState(JSON.parse(localStorage.getItem('localStyle')) || ''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        style = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        show = _React$useState4[0],\n        updateShow = _React$useState4[1];\n\n  const _React$useState5 = React.useState(\"\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        pad = _React$useState6[0],\n        changePad = _React$useState6[1];\n\n  React.useEffect(() => {\n    localStorage.setItem('localStyle', JSON.stringify(props.style));\n    setValue(props.style);\n\n    if (pad === \"\") {\n      changePad(document.querySelector(\".sortNav\").offsetHeight);\n    }\n\n    let check = false;\n\n    for (let p in props.sorted) {\n      if (props.sorted[p].toggle) {\n        check = true;\n      }\n    }\n\n    updateShow(check);\n  }, [props.style, style, props.sorted, pad]);\n  document.documentElement.style.backgroundColor = props.style.body;\n  return React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: style.body\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(SortNav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Options, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(StyleOptions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"mainWrapper\",\n    style: {\n      color: style.bodyText,\n      backgroundColor: props.style.body,\n      paddingTop: show ? \"\" + pad + \"px\" : \"0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    component: List,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))), React.createElement(Route, {\n    path: \"/:id\",\n    component: CardPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    style: state.style,\n    sorted: state.sorted\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/App.js"],"names":["React","List","CardPage","Nav","Options","SortNav","StyleOptions","connect","Switch","Route","App","props","useState","JSON","parse","localStorage","getItem","style","setValue","show","updateShow","pad","changePad","useEffect","setItem","stringify","document","querySelector","offsetHeight","check","p","sorted","toggle","documentElement","backgroundColor","body","color","bodyText","paddingTop","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage'\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport SortNav from './components/nav/SortNav'\nimport StyleOptions from './components/nav/StyleOptions';\nimport {connect} from 'react-redux';\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\n\nfunction App(props) {\n\n    const [style, setValue] = React.useState(\n        JSON.parse(localStorage.getItem('localStyle')) || ''\n    );\n    const [show, updateShow] = React.useState(false);\n    const [pad,changePad]=React.useState(\"\");\n\n    React.useEffect(() => {\n        localStorage.setItem('localStyle', JSON.stringify(props.style));\n        setValue(props.style);\n        if(pad===\"\"){\n            changePad(document.querySelector(\".sortNav\").offsetHeight)\n        }\n        let check = false;\n\n        for (let p in props.sorted) {\n            if (props.sorted[p].toggle) {\n                check = true;\n            }\n\n        }\n\n        updateShow(check);\n    }, [props.style, style, props.sorted, pad]);\n\n\n\n    document.documentElement.style.backgroundColor=props.style.body;\n\n    return (\n\n        <div className=\"App\" style={{backgroundColor: style.body}}>\n            <Nav/>\n            <SortNav/>\n            <Options/>\n            <StyleOptions/>\n            <div className={\"mainWrapper\"} style={{color:style.bodyText, backgroundColor: props.style.body, paddingTop: (show ? \"\"+pad+\"px\":\"0\")}}>\n                <Switch>\n                    <Route path=\"/\" component={List}/>\n                </Switch>\n            </div>\n            <Route path={\"/:id\"} component={CardPage}/>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style:state.style,\n        sorted:state.sorted\n    }\n};\n\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}