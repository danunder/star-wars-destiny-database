{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/main/List.js\";\nimport React from 'react';\nimport { changeLimit } from \"../../redux/actions/setActions\";\nimport Card from '../card/Card';\nimport { connect } from 'react-redux';\nimport Button from '../input/Button';\nimport { Link } from 'react-router-dom';\n\nfunction List(props) {\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        cards = _React$useState2[0],\n        setCards = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        formats = _React$useState4[0],\n        setFormat = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        sort = _React$useState6[0],\n        setSort = _React$useState6[1];\n\n  const _React$useState7 = React.useState(true),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        load = _React$useState8[0],\n        setLoad = _React$useState8[1];\n\n  const _React$useState9 = React.useState(false),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        error = _React$useState10[0],\n        setError = _React$useState10[1];\n\n  React.useEffect(() => {\n    function handleStatusChange(status) {\n      setCards(status);\n    }\n\n    function handleSecondChange(status) {\n      setFormat(status);\n    }\n\n    if (load) {\n      let loaded1 = false;\n      let loaded2 = false;\n      let error1 = false;\n      let error2 = false;\n      fetch(\"https://swdestinydb.com/api/public/cards/\").then(response => {\n        return response.json();\n      }).then(data => {\n        handleStatusChange(data);\n        loaded1 = true;\n      }).catch(function () {\n        error1 = true;\n      });\n      fetch(\"https://swdestinydb.com/api/public/formats/\").then(response => {\n        return response.json();\n      }).then(data => {\n        handleSecondChange(data);\n        loaded2 = true;\n      }).catch(function () {\n        error2 = true;\n      });\n\n      if (loaded1 && loaded2) {\n        setLoad(false);\n      } else if (error1 || error2) {\n        setError(true);\n      }\n    }\n\n    function sortObject() {\n      let sortedList = cards;\n\n      for (let p in props.sorted) {\n        if (props.sorted[p].toggle) {\n          if (p === \"points\") {\n            sortedList = sortedList.filter(crd => {\n              let ret = false;\n\n              if (crd.points !== null) {\n                let arrayPoints = crd.points.split(\"/\");\n\n                for (let i = 0; i < props.sorted.points.val.length; i++) {\n                  for (let v = 0; v < arrayPoints.length; v++) {\n                    if (arrayPoints[v] === props.sorted.points.val[i]) {\n                      ret = true;\n                    }\n                  }\n                }\n              }\n\n              return ret ? crd : null;\n            });\n          } else if (p === \"sides\") {\n            for (let i = 0; i < props.sorted.sides.val.length; i++) {\n              sortedList = sortedList.filter(crd => {\n                let ret = false;\n\n                if (crd.hasOwnProperty('sides')) {\n                  for (let v = 0; v < crd.sides.length; v++) {\n                    if (crd.sides[v].includes(props.sorted.sides.val[i])) {\n                      ret = true;\n                    }\n                  }\n                }\n\n                return ret ? crd : null;\n              });\n            }\n          } else {\n            sortedList = sortedList.filter(crd => {\n              return props.sorted[p].val.includes(crd[p]);\n            });\n          }\n        }\n      }\n\n      if (props.name !== '') {\n        sortedList = sortedList.filter(crd => {\n          if (crd.name.includes(props.name)) {\n            return true;\n          } else if (crd.name.toLowerCase().includes(props.name)) {\n            return true;\n          } else return crd.name.toUpperCase().includes(props.name);\n        });\n      }\n\n      setSort(sortedList);\n    }\n\n    sortObject();\n    return () => {\n      sortObject();\n    };\n  }, [cards, load, props.name, props.sorted]);\n  let cardEle;\n\n  if (sort.length !== 0) {\n    cardEle = sort.slice(0, props.itemLimit).map((crd, idx) => React.createElement(Link, {\n      to: \"/\" + crd.code,\n      key: idx,\n      className: \"cardFlop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Card, {\n      name: crd.name,\n      bod: true,\n      imagesrc: crd.imagesrc,\n      code: crd.code,\n      loadColor: \"#343740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })));\n  } else if (!load && !error) {\n    cardEle = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"No cards in search\");\n  } else if (load && !error) {\n    cardEle = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Fetching Cards...\");\n  } else if (load && error) {\n    cardEle = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Loading Cards failed. Refresh page...\");\n  }\n\n  const button = () => {\n    if (props.itemLimit < sort.length && sort.length > 10) {\n      return React.createElement(Button, {\n        handleClick: () => props.changeLimit(),\n        text: \"Load More\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, cardEle), button());\n}\n\nconst mapStateToProps = state => {\n  return {\n    displayedSet: state.displayedSet,\n    itemLimit: state.itemLimit,\n    setLimit: state.setLimit,\n    sorted: state.sorted,\n    name: state.name,\n    style: state.style\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeLimit: () => {\n      dispatch(changeLimit());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/main/List.js"],"names":["React","changeLimit","Card","connect","Button","Link","List","props","useState","cards","setCards","formats","setFormat","sort","setSort","load","setLoad","error","setError","useEffect","handleStatusChange","status","handleSecondChange","loaded1","loaded2","error1","error2","fetch","then","response","json","data","catch","sortObject","sortedList","p","sorted","toggle","filter","crd","ret","points","arrayPoints","split","i","val","length","v","sides","hasOwnProperty","includes","name","toLowerCase","toUpperCase","cardEle","slice","itemLimit","map","idx","code","imagesrc","button","mapStateToProps","state","displayedSet","setLimit","style","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {changeLimit} from \"../../redux/actions/setActions\";\nimport Card from '../card/Card';\nimport {connect} from 'react-redux';\nimport Button from '../input/Button';\nimport {Link} from 'react-router-dom';\n\nfunction List(props) {\n\n    const [cards, setCards] = React.useState([]);\n    const [formats, setFormat] = React.useState([]);\n    const [sort, setSort] = React.useState([]);\n    const [load, setLoad] = React.useState(true);\n    const [error, setError] = React.useState(false);\n\n\n    React.useEffect(() => {\n\n        function handleStatusChange(status) {\n            setCards(status)\n        }\n\n        function handleSecondChange(status) {\n            setFormat(status)\n        }\n\n        if (load) {\n            let loaded1 = false;\n            let loaded2 = false;\n            let error1 = false;\n            let error2 = false;\n            fetch(\"https://swdestinydb.com/api/public/cards/\")\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    handleStatusChange(data);\n                    loaded1=true;\n                }).catch(function () {\n                error1=true;\n            });\n\n            fetch(\"https://swdestinydb.com/api/public/formats/\")\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    handleSecondChange(data);\n                    loaded2=true;\n                }).catch(function () {\n                error2=true;\n            });\n\n            if(loaded1&&loaded2){\n                setLoad(false);\n            }else if(error1||error2){\n                setError(true);\n            }\n        }\n\n        function sortObject() {\n\n            let sortedList = cards;\n\n            for (let p in props.sorted) {\n\n\n                if (props.sorted[p].toggle) {\n\n                    if (p === \"points\") {\n\n\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            if (crd.points !== null) {\n                                let arrayPoints = crd.points.split(\"/\");\n                                for (let i = 0; i < props.sorted.points.val.length; i++) {\n                                    for (let v = 0; v < arrayPoints.length; v++) {\n                                        if (arrayPoints[v] === props.sorted.points.val[i]) {\n\n                                            ret = true;\n                                        }\n                                    }\n                                }\n                            }\n                            return (ret ? crd : null)\n\n                        });\n\n\n                    } else if (p === \"sides\") {\n\n                        for (let i = 0; i < props.sorted.sides.val.length; i++) {\n\n                            sortedList = sortedList.filter(crd => {\n                                let ret = false;\n                                if (crd.hasOwnProperty('sides')) {\n                                    for (let v = 0; v < crd.sides.length; v++) {\n                                        if (crd.sides[v].includes(props.sorted.sides.val[i])) {\n                                            ret = true\n                                        }\n                                    }\n                                }\n                                return (ret ? crd : null)\n\n                            });\n                        }\n\n\n                    } else {\n                        sortedList = sortedList.filter(crd => {\n\n                            return props.sorted[p].val.includes(crd[p])\n\n                        });\n                    }\n                }\n            }\n\n\n            if (props.name !== '') {\n                sortedList = sortedList.filter(crd => {\n                    if (crd.name.includes(props.name)) {\n                        return true\n                    } else if (crd.name.toLowerCase().includes(props.name)) {\n                        return true\n                    } else return crd.name.toUpperCase().includes(props.name);\n                });\n            }\n\n\n            setSort(sortedList)\n        }\n\n        sortObject();\n\n        return () => {\n            sortObject();\n        }\n\n    }, [cards, load, props.name, props.sorted]);\n\n\n    let cardEle;\n\n    if (sort.length !== 0) {\n        cardEle = sort.slice(0, props.itemLimit).map((crd, idx) =>\n\n\n            <Link to={\"/\" + crd.code} key={idx} className={\"cardFlop\"}>\n\n                <Card name={crd.name} bod={true} imagesrc={crd.imagesrc} code={crd.code}\n                      loadColor={\"#343740\"}/>\n            </Link>\n        );\n    } else if (!load && !error) {\n        cardEle = <h1>No cards in search</h1>;\n    } else if (load && !error) {\n        cardEle = <h1>Fetching Cards...</h1>;\n    } else if (load && error) {\n        cardEle = <h1>Loading Cards failed. Refresh page...</h1>;\n    }\n\n\n    const button = () => {\n        if (props.itemLimit < sort.length && sort.length > 10) {\n            return <Button handleClick={() => props.changeLimit()} text={\"Load More\"}/>\n        }\n    };\n\n\n    return (\n\n        <div className={\"list\"}>\n            <div className={\"wrapper\"}>\n                {cardEle}\n            </div>\n            {button()}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        displayedSet: state.displayedSet,\n        itemLimit: state.itemLimit,\n        setLimit: state.setLimit,\n        sorted: state.sorted,\n        name: state.name,\n        style: state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeLimit: () => {\n            dispatch(changeLimit())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n"]},"metadata":{},"sourceType":"module"}