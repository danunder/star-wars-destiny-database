{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/OptionItem.js\";\nimport React from 'react';\nimport { setSort } from \"../../redux/actions/setActions\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\n\nfunction OptionItem(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        hover = _React$useState2[0],\n        setHover = _React$useState2[1];\n\n  const hoverChange = () => {\n    setHover(!hover);\n  };\n\n  let shower;\n\n  const handleSort = (prop, val) => {\n    props.setSort(prop, val);\n  };\n\n  if (hover) {\n    if (props.style.navText === undefined) {\n      shower = {\n        backgroundColor: '#343740',\n        color: 'white'\n      };\n    } else {\n      shower = {\n        backgroundColor: props.style.bodyText,\n        color: props.style.navText\n      };\n    }\n  } else {\n    if (props.sorted[props.type].val.includes(props.value) && props.sorted[props.type].toggle) {\n      if (props.style.navText === undefined) {\n        shower = {\n          backgroundColor: 'black',\n          color: 'white'\n        };\n      } else {\n        shower = {\n          backgroundColor: props.style.navText,\n          color: props.style.nav\n        };\n      }\n    } else {\n      if (props.style.navText === undefined) {\n        shower = {\n          backgroundColor: 'white',\n          color: 'black'\n        };\n      } else {\n        shower = {\n          backgroundColor: props.style.nav,\n          color: props.style.navText\n        };\n      }\n    }\n  }\n\n  const numberCheck = () => {\n    if (props.value === \"RD\") {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"icon icon-ranged\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \" Ranged\");\n    } else if (props.value === \"Sh\") {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"icon icon-shield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), \" Shield\");\n    } else if (props.value === \"MD\") {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"icon icon-melee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), \" Melee\");\n    } else if (props.value === \"ID\") {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"icon icon-indirect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), \" Indirect\");\n    } else if (props.value === \"Dc\") {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"icon icon-discard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), \" Discard\");\n    } else if (props.value === \"Dr\") {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"icon icon-disrupt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), \" Disrupt\");\n    } else if (props.value === \"F\") {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"icon icon-focus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), \" Focus\");\n    } else if (props.value === \"Sp\") {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"icon icon-special\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), \" Special\");\n    } else if (props.value === \"R\") {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"icon icon-resource\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), \" Resource\");\n    } else if (props.value === \"-\") {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"icon icon-blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), \" Blank\");\n    } else if (props.value === \"+\") {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Modified\");\n    } else if (isNaN(props.value)) {\n      return props.value.charAt(0).toUpperCase() + props.value.substring(1);\n    } else {\n      return props.value;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"item\",\n    onMouseEnter: hoverChange,\n    onMouseLeave: hoverChange,\n    style: shower,\n    onClick: () => handleSort(props.type, props.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, props.sorted[props.type].val.includes(props.value) && props.sorted[props.type].toggle ? React.createElement(FontAwesomeIcon, {\n    icon: faCheckSquare,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }) : React.createElement(FontAwesomeIcon, {\n    icon: faSquare,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), \" \", numberCheck());\n}\n\nconst mapStateToProps = state => {\n  return {\n    sorted: state.sorted,\n    style: state.style\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSort: (prop, val) => {\n      dispatch(setSort(prop, val));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionItem);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/OptionItem.js"],"names":["React","setSort","connect","FontAwesomeIcon","faCheckSquare","faSquare","OptionItem","props","useState","hover","setHover","hoverChange","shower","handleSort","prop","val","style","navText","undefined","backgroundColor","color","bodyText","sorted","type","includes","value","toggle","nav","numberCheck","isNaN","charAt","toUpperCase","substring","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {setSort} from \"../../redux/actions/setActions\";\nimport {connect} from \"react-redux\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCheckSquare, faSquare} from '@fortawesome/free-solid-svg-icons';\n\n\nfunction OptionItem(props) {\n\n    const [hover, setHover] = React.useState(false)\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n\n\n    let shower;\n\n    const handleSort = (prop, val) => {\n        props.setSort(prop,  val)\n    };\n\n    if(hover){\n        if(props.style.navText===undefined){\n            shower = {\n                backgroundColor: '#343740',\n                color:'white'\n            }\n        }else{\n            shower = {\n                backgroundColor: props.style.bodyText,\n                color:props.style.navText\n            }\n        }\n    }else{\n        if (props.sorted[props.type].val.includes(props.value) && props.sorted[props.type].toggle) {\n            if(props.style.navText===undefined){\n                shower = {\n                    backgroundColor: 'black',\n                    color:'white'\n                }\n            }else{\n                shower = {\n                    backgroundColor: props.style.navText,\n                    color:props.style.nav\n                }\n            }\n\n        }else{\n            if(props.style.navText===undefined){\n                shower = {\n                    backgroundColor: 'white',\n                    color:'black'\n                }\n            }else{\n                shower = {\n                    backgroundColor: props.style.nav,\n                    color:props.style.navText\n                }\n            }\n        }\n    }\n\n\n\n    const numberCheck = () => {\n        if(props.value===\"RD\"){\n            return <span><span className='icon icon-ranged'></span> Ranged</span>\n        }else if(props.value===\"Sh\"){\n            return <span><span className='icon icon-shield'></span> Shield</span>\n        }else if(props.value===\"MD\"){\n            return <span><span className='icon icon-melee'></span> Melee</span>\n        }else if(props.value===\"ID\"){\n            return <span><span className='icon icon-indirect'></span> Indirect</span>\n        }else if(props.value===\"Dc\"){\n            return <span><span className='icon icon-discard'></span> Discard</span>\n        }else if(props.value===\"Dr\"){\n            return <span><span className='icon icon-disrupt'></span> Disrupt</span>\n        }else if(props.value===\"F\"){\n            return <span><span className='icon icon-focus'></span> Focus</span>\n        }else if(props.value===\"Sp\"){\n            return <span><span className='icon icon-special'></span> Special</span>\n        }else if(props.value===\"R\"){\n            return <span><span className='icon icon-resource'></span> Resource</span>\n        }else if(props.value===\"-\"){\n            return <span><span className='icon icon-blank'></span> Blank</span>\n        }else if(props.value===\"+\"){\n            return <span>Modified</span>\n        }else if (isNaN(props.value)) {\n            return props.value.charAt(0).toUpperCase() + props.value.substring(1)\n        } else {\n            return props.value\n        }\n    };\n\n\n    return (\n        <div className={\"item\"} onMouseEnter={hoverChange}\n             onMouseLeave={hoverChange} style={shower} onClick={() => handleSort(props.type, props.value)}>{props.sorted[props.type].val.includes(props.value) && props.sorted[props.type].toggle ? <FontAwesomeIcon icon={faCheckSquare}/> :<FontAwesomeIcon icon={faSquare}/>} {numberCheck()}</div>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted,\n        style:state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSort: (prop, val) => {\n            dispatch(setSort(prop, val))\n        }\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionItem);"]},"metadata":{},"sourceType":"module"}