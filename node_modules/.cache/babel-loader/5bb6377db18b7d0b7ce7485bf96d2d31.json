{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/SortNav.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nfunction SortNav(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        show = _React$useState2[0],\n        updateShow = _React$useState2[1];\n\n  React.useEffect(() => {\n    let check = false;\n\n    for (let p in props.sorted) {\n      if (props.sorted[p].toggle) {\n        check = true;\n      }\n    }\n\n    updateShow(check);\n  }, [props.sorted]);\n  let shower;\n\n  if (show) {\n    shower = {\n      top: '80px'\n    };\n  } else {\n    shower = {\n      top: '-80px'\n    };\n  }\n\n  return React.createElement(\"div\", {\n    className: \"sortNav\",\n    style: shower,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"itm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Item\"));\n}\n\nconst mapStateToProps = state => {\n  return {\n    sorted: state.sorted\n  };\n};\n\nexport default connect(mapStateToProps)(SortNav);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/SortNav.js"],"names":["React","connect","SortNav","props","useState","show","updateShow","useEffect","check","p","sorted","toggle","shower","top","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,0BAEOH,KAAK,CAACI,QAAN,CAAe,KAAf,CAFP;AAAA;AAAA,QAEbC,IAFa;AAAA,QAEPC,UAFO;;AAKpBN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AAClB,QAAIC,KAAK,GAAG,KAAZ;;AAEA,SAAK,IAAIC,CAAT,IAAcN,KAAK,CAACO,MAApB,EAA4B;AACxB,UAAIP,KAAK,CAACO,MAAN,CAAaD,CAAb,EAAgBE,MAApB,EAA4B;AACxBH,QAAAA,KAAK,GAAG,IAAR;AACH;AACJ;;AAEDF,IAAAA,UAAU,CAACE,KAAD,CAAV;AAGH,GAZD,EAYG,CAACL,KAAK,CAACO,MAAP,CAZH;AAcA,MAAIE,MAAJ;;AAEA,MAAGP,IAAH,EAAQ;AACLO,IAAAA,MAAM,GAAC;AACHC,MAAAA,GAAG,EAAC;AADD,KAAP;AAGF,GAJD,MAIK;AACDD,IAAAA,MAAM,GAAC;AACHC,MAAAA,GAAG,EAAE;AADF,KAAP;AAGH;;AAGD,SACI;AAAK,IAAA,SAAS,EAAE,SAAhB;AAA2B,IAAA,KAAK,EAAED,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAKH;;AAED,MAAME,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHL,IAAAA,MAAM,EAAEK,KAAK,CAACL;AADX,GAAP;AAGH,CAJD;;AAMA,eAAeT,OAAO,CAACa,eAAD,CAAP,CAAyBZ,OAAzB,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction SortNav(props) {\n\n    const [show, updateShow] = React.useState(false)\n\n\n    React.useEffect(() => {\n        let check = false;\n\n        for (let p in props.sorted) {\n            if (props.sorted[p].toggle) {\n                check = true;\n            }\n        }\n\n        updateShow(check)\n\n\n    }, [props.sorted]);\n\n    let shower;\n\n    if(show){\n       shower={\n           top:'80px'\n       }\n    }else{\n        shower={\n            top: '-80px'\n        }\n    }\n\n\n    return (\n        <div className={\"sortNav\"} style={shower}>\n            <div className={\"itm\"}>Item</div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted\n    }\n};\n\nexport default connect(mapStateToProps)(SortNav);"]},"metadata":{},"sourceType":"module"}