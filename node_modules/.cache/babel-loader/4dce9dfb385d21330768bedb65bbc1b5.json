{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/CardPage.js\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Card from './Card';\nimport { connect } from 'react-redux';\nimport CardInfo from './CardInfo';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner, faExclamationCircle, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nfunction CardPage(props) {\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        card = _React$useState2[0],\n        setCard = _React$useState2[1];\n\n  const _React$useState3 = React.useState({\n    crd: false,\n    load: true,\n    error: false\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rend = _React$useState4[0],\n        rendElement = _React$useState4[1];\n\n  React.useEffect(() => {\n    function handleStatusChange(status) {\n      rendElement({\n        crd: true,\n        load: false,\n        error: false\n      });\n      setCard(status);\n    }\n\n    let cardMain = props.cards.filter(crd => {\n      return props.match.params.id === crd.code;\n    });\n    handleStatusChange(cardMain[0]);\n  }, [props.match.params.id, props.cards]);\n  const code = card.code;\n  return React.createElement(Link, {\n    className: props.match.params.id ? \"cardPageWrapper\" : undefined,\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"close\",\n    style: {\n      backgroundColor: props.style.navText,\n      color: props.style.nav\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    size: \"4x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), rend.load && React.createElement(FontAwesomeIcon, {\n    icon: faSpinner,\n    spin: true,\n    size: \"lg\",\n    style: {\n      color: props.loadColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), rend.error && React.createElement(FontAwesomeIcon, {\n    icon: faExclamationCircle,\n    style: {\n      color: \"red\"\n    },\n    size: \"6x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), rend.crd && React.createElement(Card, {\n    name: card.name,\n    bod: false,\n    imagesrc: card.imagesrc,\n    code: card.code,\n    loadColor: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), code && React.createElement(CardInfo, {\n    crd: card,\n    code: code,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    style: state.style,\n    cards: state.cards\n  };\n};\n\nexport default connect(mapStateToProps)(CardPage);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/CardPage.js"],"names":["React","Link","Card","connect","CardInfo","FontAwesomeIcon","faSpinner","faExclamationCircle","faTimes","CardPage","props","useState","card","setCard","crd","load","error","rend","rendElement","useEffect","handleStatusChange","status","cardMain","cards","filter","match","params","id","code","undefined","backgroundColor","style","navText","color","nav","loadColor","name","imagesrc","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Link\n} from \"react-router-dom\";\nimport Card from './Card';\nimport {connect} from 'react-redux';\nimport CardInfo from './CardInfo';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle, faTimes} from '@fortawesome/free-solid-svg-icons';\n\n\nfunction CardPage(props) {\n\n    const [card, setCard] = React.useState(\"\");\n\n    const [rend, rendElement] = React.useState({\n        crd: false,\n        load: true,\n        error: false\n    });\n\n\n    React.useEffect(() => {\n\n\n            function handleStatusChange(status) {\n                rendElement({\n                    crd: true,\n                    load: false,\n                    error: false\n                });\n                setCard(status)\n            }\n\n\n            let cardMain = props.cards.filter(crd => {\n                return props.match.params.id === crd.code;\n            });\n\n            handleStatusChange(cardMain[0]);\n\n\n        }\n\n        ,\n        [props.match.params.id, props.cards]\n    )\n    ;\n\n    const code = card.code;\n\n\n    return (\n        <Link className={props.match.params.id ? \"cardPageWrapper\" : undefined} to={\"/\"}>\n\n            <div className={\"close\"} style={{backgroundColor: props.style.navText, color: props.style.nav}}>\n                <FontAwesomeIcon icon={faTimes} size={\"4x\"}/>\n            </div>\n\n            {rend.load && <FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color: props.loadColor}}/>}\n            {rend.error && <FontAwesomeIcon icon={faExclamationCircle} style={{color: \"red\"}} size={\"6x\"}/>}\n\n            {rend.crd &&\n            <Card name={card.name} bod={false} imagesrc={card.imagesrc} code={card.code} loadColor={\"white\"}/>}\n            {code && <CardInfo crd={card} code={code}/>}\n\n        </Link>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style,\n        cards: state.cards\n    }\n};\n\nexport default connect(mapStateToProps)(CardPage);"]},"metadata":{},"sourceType":"module"}