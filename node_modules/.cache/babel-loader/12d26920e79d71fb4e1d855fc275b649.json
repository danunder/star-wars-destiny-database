{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/App.js\";\nimport React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage';\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport SortNav from './components/nav/SortNav';\nimport StyleOptions from './components/nav/StyleOptions';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App(props) {\n  const _React$useState = React.useState(JSON.parse(localStorage.getItem('localStyle')) || ''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        style = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        show = _React$useState4[0],\n        updateShow = _React$useState4[1];\n\n  const _React$useState5 = React.useState(0),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        seconds = _React$useState6[0],\n        setSeconds = _React$useState6[1];\n\n  const _React$useState7 = React.useState(true),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        isActive = _React$useState8[0],\n        setIsActive = _React$useState8[1];\n\n  const _React$useState9 = React.useState(60),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        pad = _React$useState10[0],\n        setPad = _React$useState10[1];\n\n  React.useEffect(() => {\n    localStorage.setItem('localStyle', JSON.stringify(props.style));\n    setValue(props.style);\n    let check = false;\n\n    for (let p in props.sorted) {\n      if (props.sorted[p].toggle) {\n        check = true;\n      }\n    }\n\n    updateShow(check);\n    let interval = null;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n\n    setPad(document.querySelector(\".sortNav\").getBoundingClientRect().height);\n    return () => clearInterval(interval);\n  }, [props.style, style, props.sorted, seconds, isActive]);\n  document.documentElement.style.backgroundColor = props.style.body;\n  return React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: style.body\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(SortNav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Options, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(StyleOptions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"mainWrapper\",\n    style: {\n      color: style.bodyText,\n      backgroundColor: props.style.body,\n      paddingTop: show ? \"\" + pad + \"px\" : \"0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    component: List,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))), React.createElement(Route, {\n    path: \"/:id\",\n    component: CardPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    style: state.style,\n    sorted: state.sorted\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/App.js"],"names":["React","List","CardPage","Nav","Options","SortNav","StyleOptions","connect","Switch","Route","App","props","useState","JSON","parse","localStorage","getItem","style","setValue","show","updateShow","seconds","setSeconds","isActive","setIsActive","pad","setPad","useEffect","setItem","stringify","check","p","sorted","toggle","interval","setInterval","clearInterval","document","querySelector","getBoundingClientRect","height","documentElement","backgroundColor","body","color","bodyText","paddingTop","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage'\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport SortNav from './components/nav/SortNav'\nimport StyleOptions from './components/nav/StyleOptions';\nimport {connect} from 'react-redux';\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\nfunction App(props) {\n\n    const [style, setValue] = React.useState(\n        JSON.parse(localStorage.getItem('localStyle')) || ''\n    );\n    const [show, updateShow] = React.useState(false);\n    const [seconds, setSeconds] = React.useState(0);\n    const [isActive, setIsActive] = React.useState(true);\n    const [pad, setPad] =React.useState(60);\n\n\n    React.useEffect(() => {\n        localStorage.setItem('localStyle', JSON.stringify(props.style));\n        setValue(props.style);\n\n\n\n\n\n        let check = false;\n\n        for (let p in props.sorted) {\n            if (props.sorted[p].toggle) {\n                check = true;\n            }\n\n        }\n\n\n\n        updateShow(check);\n\n        let interval = null;\n        if (isActive) {\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds + 1);\n            }, 1000);\n        } else if (!isActive && seconds !== 0) {\n            clearInterval(interval);\n        }\n        setPad(document.querySelector(\".sortNav\").getBoundingClientRect().height);\n        return () => clearInterval(interval);\n\n    }, [props.style, style, props.sorted, seconds, isActive]);\n\n\n    document.documentElement.style.backgroundColor = props.style.body;\n\n    return (\n\n        <div className=\"App\" style={{backgroundColor: style.body}}>\n            <Nav/>\n            <SortNav/>\n            <Options/>\n            <StyleOptions/>\n            <div className={\"mainWrapper\"} style={{\n                color: style.bodyText,\n                backgroundColor: props.style.body,\n                paddingTop: (show ? \"\" + pad + \"px\" : \"0\")\n            }}>\n                <Switch>\n                    <Route path=\"/\" component={List}/>\n                </Switch>\n            </div>\n            <Route path={\"/:id\"} component={CardPage}/>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style,\n        sorted: state.sorted\n    }\n};\n\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}