{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/App.js\";\nimport React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage';\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport { Switch, Route, useLocation } from \"react-router-dom\";\n\nfunction App() {\n  const _React$useState = React.useState(500),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        scroll = _React$useState2[0],\n        scrollTo = _React$useState2[1];\n\n  React.useEffect(() => {\n    try {// trying to use new API - https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo\n    } catch (error) {\n      // just a fallback for older browsers\n      window.scrollTo(0, 0);\n    }\n  });\n  let location = useLocation();\n  let fixer;\n\n  const preventDefault = () => {\n    const e = window.event; // For the case whereby consumers adds a touchmove event listener to document.\n    // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n    // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n    // the touchmove event on document will break.\n\n    if (allowTouchMove(e.target)) {\n      return true;\n    } // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n\n\n    if (e.touches.length > 1) return true;\n    if (e.preventDefault) e.preventDefault();\n    return false;\n  };\n\n  if (location.pathname !== \"/\") {\n    document.body.querySelector(\".mainWrapper\").removeEventListener('DOMMouseScroll', preventDefault, false);\n  } else {\n    document.body.querySelector(\".mainWrapper\").addEventListener('DOMMouseScroll', preventDefault, false);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Options, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"mainWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    component: List,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))), React.createElement(Route, {\n    path: \"/:id\",\n    component: CardPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/App.js"],"names":["React","List","CardPage","Nav","Options","Switch","Route","useLocation","App","useState","scroll","scrollTo","useEffect","error","window","location","fixer","preventDefault","e","event","allowTouchMove","target","touches","length","pathname","document","body","querySelector","removeEventListener","addEventListener"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,SACIC,MADJ,EAEIC,KAFJ,EAEYC,WAFZ,QAGO,kBAHP;;AAOA,SAASC,GAAT,GAAe;AAAA,0BAEcR,KAAK,CAACS,QAAN,CAAe,GAAf,CAFd;AAAA;AAAA,QAEJC,MAFI;AAAA,QAEIC,QAFJ;;AAIXX,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AAClB,QAAI,CACA;AAEH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZ;AACAC,MAAAA,MAAM,CAACH,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH;AACJ,GARD;AAWA,MAAII,QAAQ,GAAGR,WAAW,EAA1B;AAGA,MAAIS,KAAJ;;AAEA,QAAMC,cAAc,GAAG,MAAM;AACzB,UAAMC,CAAC,GAAIJ,MAAM,CAACK,KAAlB,CADyB,CAGzB;AACA;AACA;AACA;;AACA,QAAIC,cAAc,CAACF,CAAC,CAACG,MAAH,CAAlB,EAA8B;AAC1B,aAAO,IAAP;AACH,KATwB,CAWzB;;;AACA,QAAIH,CAAC,CAACI,OAAF,CAAUC,MAAV,GAAmB,CAAvB,EAA0B,OAAO,IAAP;AAE1B,QAAIL,CAAC,CAACD,cAAN,EAAsBC,CAAC,CAACD,cAAF;AAEtB,WAAO,KAAP;AACH,GAjBD;;AAmBA,MAAIF,QAAQ,CAACS,QAAT,KAAoB,GAAxB,EAA6B;AACzBC,IAAAA,QAAQ,CAACC,IAAT,CAAcC,aAAd,CAA4B,cAA5B,EAA4CC,mBAA5C,CAAgE,gBAAhE,EAAkFX,cAAlF,EAAkG,KAAlG;AAEH,GAHD,MAGO;AACHQ,IAAAA,QAAQ,CAACC,IAAT,CAAcC,aAAd,CAA4B,cAA5B,EAA4CE,gBAA5C,CAA6D,gBAA7D,EAA+EZ,cAA/E,EAA+F,KAA/F;AAEH;;AAKD,SAEI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAK,IAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAEhB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAHJ,EAQI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,MAAb;AAAqB,IAAA,SAAS,EAAEC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAFJ;AAaH;;AAGD,eAAeM,GAAf","sourcesContent":["import React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage'\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\n\nimport {\n    Switch,\n    Route,  useLocation\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n\n    const [scroll, scrollTo]=React.useState(500);\n\n    React.useEffect(() => {\n        try {\n            // trying to use new API - https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo\n\n        } catch (error) {\n            // just a fallback for older browsers\n            window.scrollTo(0, 0);\n        }\n    });\n\n\n    let location = useLocation();\n\n\n    let fixer;\n\n    const preventDefault = () => {\n        const e =  window.event;\n\n        // For the case whereby consumers adds a touchmove event listener to document.\n        // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n        // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n        // the touchmove event on document will break.\n        if (allowTouchMove(e.target)) {\n            return true;\n        }\n\n        // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n        if (e.touches.length > 1) return true;\n\n        if (e.preventDefault) e.preventDefault();\n\n        return false;\n    };\n\n    if (location.pathname!==\"/\") {\n        document.body.querySelector(\".mainWrapper\").removeEventListener('DOMMouseScroll', preventDefault, false);\n\n    } else {\n        document.body.querySelector(\".mainWrapper\").addEventListener('DOMMouseScroll', preventDefault, false);\n\n    }\n\n\n\n\n    return (\n\n        <div className=\"App\">\n            <Nav/>\n            <Options/>\n            <div className={\"mainWrapper\"}>\n                <Switch>\n                    <Route path=\"/\" component={List}/>\n                </Switch>\n            </div>\n            <Route path={\"/:id\"} component={CardPage}/>\n        </div>\n    );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}