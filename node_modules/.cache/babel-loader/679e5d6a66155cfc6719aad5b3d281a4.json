{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/App.js\";\nimport React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage';\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport SortNav from './components/nav/SortNav';\nimport StyleOptions from './components/nav/StyleOptions';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        show = _React$useState2[0],\n        updateShow = _React$useState2[1];\n\n  const _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        seconds = _React$useState4[0],\n        setSeconds = _React$useState4[1];\n\n  const _React$useState5 = React.useState(60),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        pad = _React$useState6[0],\n        setPad = _React$useState6[1];\n\n  React.useEffect(() => {\n    localStorage.setItem('localStyle', JSON.stringify(props.style));\n    let check = false;\n\n    for (let p in props.sorted) {\n      if (props.sorted[p].toggle) {\n        check = true;\n      }\n    }\n\n    updateShow(check);\n    let interval = null;\n    interval = setInterval(() => {\n      setSeconds(seconds => seconds + 1);\n    }, 500);\n    setPad(document.querySelector(\".sortNav\").getBoundingClientRect().height);\n    document.documentElement.style.backgroundColor = props.style.body;\n    return () => clearInterval(interval);\n  }, [props.style, props.sorted, seconds]);\n  let appStyle = {\n    backgroundColor: props.style.body\n  };\n  let wrapStyle = {\n    color: props.style.bodyText,\n    backgroundColor: props.style.body,\n    paddingTop: show ? \"\" + pad + \"px\" : \"0\"\n  };\n  return React.createElement(\"div\", {\n    className: \"App\",\n    style: appStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(SortNav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Options, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(StyleOptions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"mainWrapper\",\n    style: wrapStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    component: List,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))), React.createElement(Route, {\n    path: \"/:id\",\n    component: CardPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    style: state.style,\n    sorted: state.sorted\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/App.js"],"names":["React","List","CardPage","Nav","Options","SortNav","StyleOptions","connect","Switch","Route","App","props","useState","show","updateShow","seconds","setSeconds","pad","setPad","useEffect","localStorage","setItem","JSON","stringify","style","check","p","sorted","toggle","interval","setInterval","document","querySelector","getBoundingClientRect","height","documentElement","backgroundColor","body","clearInterval","appStyle","wrapStyle","color","bodyText","paddingTop","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage'\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport SortNav from './components/nav/SortNav'\nimport StyleOptions from './components/nav/StyleOptions';\nimport {connect} from 'react-redux';\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\nfunction App(props) {\n\n    const [show, updateShow] = React.useState(false);\n    const [seconds, setSeconds] = React.useState(0);\n    const [pad, setPad] = React.useState(60);\n\n\n    React.useEffect(() => {\n        localStorage.setItem('localStyle', JSON.stringify(props.style));\n\n        let check = false;\n\n        for (let p in props.sorted) {\n            if (props.sorted[p].toggle) {\n                check = true;\n            }\n        }\n\n        updateShow(check);\n\n        let interval = null;\n\n        interval = setInterval(() => {\n            setSeconds(seconds => seconds + 1);\n        }, 500);\n\n        setPad(document.querySelector(\".sortNav\").getBoundingClientRect().height);\n\n        document.documentElement.style.backgroundColor = props.style.body;\n        return () => clearInterval(interval);\n\n    }, [props.style, props.sorted, seconds]);\n\n    let appStyle = {\n        backgroundColor: props.style.body\n    };\n\n    let wrapStyle = {\n        color: props.style.bodyText,\n        backgroundColor: props.style.body,\n        paddingTop: (show ? \"\" + pad + \"px\" : \"0\")\n    };\n\n\n\n\n    return (\n\n        <div className=\"App\" style={appStyle}>\n            <Nav/>\n            <SortNav/>\n            <Options/>\n            <StyleOptions/>\n            <div className={\"mainWrapper\"} style={wrapStyle}>\n                <Switch>\n                    <Route path=\"/\" component={List}/>\n                </Switch>\n            </div>\n            <Route path={\"/:id\"} component={CardPage}/>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style,\n        sorted: state.sorted\n    }\n};\n\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}