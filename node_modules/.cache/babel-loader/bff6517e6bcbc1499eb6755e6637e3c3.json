{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/CardInfo.js\";\nimport React from 'react';\n\nfunction CardInfo(props) {\n  const _React$useState = React.useState({\n    trilogy: {\n      restricted: false,\n      balance: \"\",\n      legal: false\n    },\n    standard: {\n      restricted: false,\n      balance: \"\",\n      legal: false\n    },\n    infinite: {\n      restricted: false,\n      balance: \"\",\n      legal: true\n    }\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        rst = _React$useState2[0],\n        setRst = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        load = _React$useState4[0],\n        setLoad = _React$useState4[1];\n\n  let subtypes;\n  let sides;\n\n  if (props.crd.subtypes !== undefined) {\n    subtypes = props.crd.subtypes.map((sb, idx) => React.createElement(\"h3\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, sb.name, idx !== props.crd.subtypes.length - 1 && \"-\"));\n  }\n\n  if (props.crd.sides !== undefined) {\n    sides = props.crd.sides.map((sd, idx) => React.createElement(\"div\", {\n      key: idx,\n      className: \"side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, sd));\n  }\n\n  React.useEffect(() => {\n    function handleStatusChange(status) {}\n\n    const unsubscribe = () => {\n      fetch(\"https://swdestinydb.com/api/public/formats/\").then(response => {\n        return response.json();\n      }).then(data => {\n        let cardMain = data.filter(crd => {});\n        handleStatusChange(cardMain[0]);\n      });\n    };\n\n    unsubscribe();\n    return () => unsubscribe();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"cardInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.crd.is_unique && \"◆ \", props.crd.name), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, props.crd.health && \"Health:\", props.crd.health), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, props.crd.cost && \"Cost:\", props.crd.cost), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, props.crd.points && \"Points:\", props.crd.points), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, props.crd.type_name), React.createElement(\"div\", {\n    className: \"subtypes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, subtypes), React.createElement(\"div\", {\n    className: \"sides\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, sides), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, props.crd.has_errata && \"This card has an errata\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, props.crd.text), React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, props.crd.flavor), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, props.crd.affiliation_name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, props.crd.rarity_name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, props.crd.set_name, \": \", props.crd.position));\n}\n\nexport default CardInfo;","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/CardInfo.js"],"names":["React","CardInfo","props","useState","trilogy","restricted","balance","legal","standard","infinite","rst","setRst","load","setLoad","subtypes","sides","crd","undefined","map","sb","idx","name","length","sd","useEffect","handleStatusChange","status","unsubscribe","fetch","then","response","json","data","cardMain","filter","is_unique","health","cost","points","type_name","has_errata","text","flavor","affiliation_name","rarity_name","set_name","position"],"mappings":"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","sourcesContent":["import React from 'react';\n\nfunction CardInfo(props){\n\n    const [rst, setRst] = React.useState({\n\n        trilogy:{\n            restricted:false,\n            balance:\"\",\n            legal:false\n        },\n        standard:{\n            restricted:false,\n            balance:\"\",\n            legal:false\n        },\n        infinite:{\n            restricted:false,\n            balance:\"\",\n            legal:true\n        }\n    });\n    const [load, setLoad]= React.useState(false);\n\n\n    let subtypes;\n    let sides;\n\n    if(props.crd.subtypes!==undefined){\n       subtypes =props.crd.subtypes.map((sb, idx)=>\n           <h3 key={idx}>{sb.name}{idx!==(props.crd.subtypes.length-1)&&\"-\"}</h3>\n       );\n    }\n\n    if(props.crd.sides!==undefined){\n        sides = props.crd.sides.map((sd, idx)=>\n            <div key={idx} className={\"side\"}>{sd}</div>\n        );\n    }\n\n    React.useEffect(()=>{\n\n\n        function handleStatusChange(status) {\n\n        }\n\n        const unsubscribe = ()=>{\n\n\n            fetch(\"https://swdestinydb.com/api/public/formats/\")\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n\n                    let cardMain = data.filter(crd=>{\n\n                    });\n\n                    handleStatusChange(cardMain[0]);\n                })\n        };\n\n        unsubscribe();\n\n\n        return ()=>unsubscribe();\n    },[]);\n\n\n    return(\n        <div className={\"cardInfo\"}>\n            <h1>{props.crd.is_unique&&\"◆ \"}{props.crd.name}</h1>\n            <h2>{props.crd.health&& \"Health:\"}{props.crd.health}</h2>\n            <h2>{props.crd.cost&& \"Cost:\"}{props.crd.cost}</h2>\n            <h2>{props.crd.points&& \"Points:\"}{props.crd.points}</h2>\n            <h2>{props.crd.type_name}</h2>\n            <div className={\"subtypes\"}>{subtypes}</div>\n            <div className={\"sides\"}>{sides}</div>\n            <h3>{props.crd.has_errata&&\"This card has an errata\"}</h3>\n            <p>{props.crd.text}</p>\n\n            <i>{props.crd.flavor}</i>\n\n            <div>{props.crd.affiliation_name}</div>\n            <div>{props.crd.rarity_name}</div>\n\n            <div>{props.crd.set_name}: {props.crd.position}</div>\n\n\n        </div>\n    )\n}\n\nexport default CardInfo"]},"metadata":{},"sourceType":"module"}