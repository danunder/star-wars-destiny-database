{"ast":null,"code":"var _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/options.js\";\nimport React from 'react';\nimport { clearOptions } from \"../../redux/actions/setActions\";\nimport { connect } from 'react-redux';\nimport Option from './Option';\nimport { Sort } from \"../../data/Sort\";\nimport Button from '../input/Button';\n\nfunction Options(props) {\n  let show;\n\n  if (props.options) {\n    show = {\n      \"right\": \"0\",\n      backgroundColor: props.style.navText\n    };\n  } else {\n    show = {\n      \"right\": \"-100%\",\n      backgroundColor: props.style.navText\n    };\n  }\n\n  let options = Sort.map((srt, idx) => React.createElement(Option, {\n    key: idx,\n    opt: srt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"options\",\n    style: show,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      color: props.style.nav\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Sort Cards\"), React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, options), React.createElement(Button, {\n    handleClick: () => props.clearOptions(),\n    text: \"Clear Search Query\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    options: state.options,\n    style: state.style\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    clearOptions: () => {\n      dispatch(clearOptions());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/options.js"],"names":["React","clearOptions","connect","Option","Sort","Button","Options","props","show","options","backgroundColor","style","navText","map","srt","idx","color","nav","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,gCAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAEnB,MAAIC,IAAJ;;AAEA,MAAGD,KAAK,CAACE,OAAT,EAAiB;AACbD,IAAAA,IAAI,GAAC;AACD,eAAQ,GADP;AAEDE,MAAAA,eAAe,EAACH,KAAK,CAACI,KAAN,CAAYC;AAF3B,KAAL;AAIH,GALD,MAKK;AACDJ,IAAAA,IAAI,GAAC;AACD,eAAQ,OADP;AAEDE,MAAAA,eAAe,EAACH,KAAK,CAACI,KAAN,CAAYC;AAF3B,KAAL;AAIH;;AAED,MAAIH,OAAO,GAAGL,IAAI,CAACS,GAAL,CAAS,CAACC,GAAD,EAAMC,GAAN,KACnB,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,GAAb;AAAkB,IAAA,GAAG,EAAED,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,CAAd;AAKA,SACI;AAAK,IAAA,SAAS,EAAE,SAAhB;AAA2B,IAAA,KAAK,EAAEN,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAE;AAACQ,MAAAA,KAAK,EAACT,KAAK,CAACI,KAAN,CAAYM;AAAnB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAK,IAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,OADL,CAFJ,EAKI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMF,KAAK,CAACN,YAAN,EAA3B;AAAiD,IAAA,IAAI,EAAE,oBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AASH;;AAED,MAAMiB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHV,IAAAA,OAAO,EAACU,KAAK,CAACV,OADX;AAEHE,IAAAA,KAAK,EAACQ,KAAK,CAACR;AAFT,GAAP;AAIH,CALD;;AAOA,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AAEHpB,IAAAA,YAAY,EAAC,MAAI;AACboB,MAAAA,QAAQ,CAACpB,YAAY,EAAb,CAAR;AACH;AAJE,GAAP;AAMH,CAPD;;AAWA,eAAeC,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,OAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {clearOptions} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\nimport Option from './Option';\nimport {Sort} from \"../../data/Sort\";\nimport Button from '../input/Button';\n\nfunction Options(props){\n\n    let show;\n\n    if(props.options){\n        show={\n            \"right\":\"0\",\n            backgroundColor:props.style.navText\n        }\n    }else{\n        show={\n            \"right\":\"-100%\",\n            backgroundColor:props.style.navText\n        }\n    }\n\n    let options = Sort.map((srt, idx)=>\n        <Option key={idx} opt={srt}/>\n    );\n\n\n    return (\n        <div className={\"options\"} style={show}>\n            <h1 style={{color:props.style.nav}}>Sort Cards</h1>\n            <div className={\"wrapper\"}>\n                {options}\n            </div>\n            <Button handleClick={() => props.clearOptions()} text={\"Clear Search Query\"}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        options:state.options,\n        style:state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n        clearOptions:()=>{\n            dispatch(clearOptions())\n        }\n    }\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options);\n"]},"metadata":{},"sourceType":"module"}