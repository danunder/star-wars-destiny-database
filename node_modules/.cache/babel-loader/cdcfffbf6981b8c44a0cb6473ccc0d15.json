{"ast":null,"code":"import _slicedToArray from\"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSpinner,faExclamationCircle}from'@fortawesome/free-solid-svg-icons';function Card(props){var _React$useState=React.useState(\"loading\"),_React$useState2=_slicedToArray(_React$useState,2),load=_React$useState2[0],updateLoading=_React$useState2[1];var _React$useState3=React.useState({img:false,load:true,error:false}),_React$useState4=_slicedToArray(_React$useState3,2),rend=_React$useState4[0],rendElement=_React$useState4[1];var _React$useState5=React.useState(0),_React$useState6=_slicedToArray(_React$useState5,2),seconds=_React$useState6[0],setSeconds=_React$useState6[1];React.useEffect(function(){var interval=null;interval=setInterval(function(){setSeconds(function(seconds){return seconds+1;});if(load){if(props.imagesrc===null){rendElement({img:false,load:false,error:true});}else{rendElement({img:true,load:false,error:false});}}else{if(seconds>3){rendElement({img:false,load:false,error:true});}else{rendElement({img:false,load:true,error:false});}}},1000);return function(){return clearInterval(interval);};},[seconds,load,props.imagesrc]);var handleImageLoad=function handleImageLoad(){updateLoading(true);};var handleImageError=function handleImageError(){updateLoading(false);};return React.createElement(\"div\",{className:\"card\"},React.createElement(\"h1\",null,props.name),React.createElement(\"div\",{className:\"cardWrapper\"},rend.img&&React.createElement(\"img\",{alt:props.name,onLoad:handleImageLoad,onError:handleImageError,src:props.imagesrc}),React.createElement(\"div\",null,rend.load&&React.createElement(FontAwesomeIcon,{icon:faSpinner,spin:true,size:\"lg\",style:{color:props.loadColor}}),rend.error&&React.createElement(FontAwesomeIcon,{icon:faExclamationCircle,style:{color:\"red\"},size:\"6x\"}))));}export default Card;","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/Card.js"],"names":["React","FontAwesomeIcon","faSpinner","faExclamationCircle","Card","props","useState","load","updateLoading","img","error","rend","rendElement","seconds","setSeconds","useEffect","interval","setInterval","imagesrc","clearInterval","handleImageLoad","handleImageError","name","color","loadColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\nfunction Card(props) {\n\n    const [load, updateLoading] = React.useState(\"loading\");\n    const [rend, rendElement] = React.useState({\n        img:false,\n        load:true,\n        error:false\n    });\n    const [seconds, setSeconds] = React.useState(0);\n\n\n    React.useEffect(() => {\n        let interval = null;\n\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds + 1);\n                if (load) {\n                    if(props.imagesrc===null){\n                        rendElement({\n                            img:false,\n                            load:false,\n                            error:true\n                        });\n                    }else{\n                        rendElement({\n                            img:true,\n                            load:false,\n                            error:false\n                        });\n                    }\n\n                } else {\n                    if(seconds>3){\n                        rendElement({\n                            img:false,\n                            load:false,\n                            error:true\n                        });\n                    }else{\n                        rendElement({\n                            img:false,\n                            load:true,\n                            error:false\n                        });\n                    }\n                }\n            }, 1000);\n\n        return () => clearInterval(interval);\n    }, [seconds, load, props.imagesrc]);\n\n    const handleImageLoad = () => {\n        updateLoading(true)\n    };\n\n    const handleImageError = () => {\n        updateLoading(false)\n    };\n\n    return (\n        <div className={\"card\"} >\n            <h1>{props.name}</h1>\n            <div className={\"cardWrapper\"}>\n                {rend.img && <img alt={props.name} onLoad={handleImageLoad} onError={handleImageError} src={props.imagesrc}/>}\n                <div>\n                    {rend.load&&<FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color:props.loadColor}}/>}\n                    {rend.error&&<FontAwesomeIcon icon={faExclamationCircle} style={{color:\"red\"}} size={\"6x\"}/>}\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}