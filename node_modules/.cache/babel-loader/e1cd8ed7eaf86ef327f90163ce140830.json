{"ast":null,"code":"import _slicedToArray from \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/main/List.js\";\nimport React from 'react';\nimport { changeLimit } from \"../../redux/actions/setActions\";\nimport Card from '../card/Card';\nimport { connect } from 'react-redux';\nimport Button from '../input/Button';\nimport { Link } from 'react-router-dom';\n\nfunction List(props) {\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        cards = _React$useState2[0],\n        setCards = _React$useState2[1];\n\n  const _React$useState3 = React.useState(true),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        load = _React$useState4[0],\n        setLoad = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        error = _React$useState6[0],\n        setError = _React$useState6[1];\n\n  React.useEffect(() => {\n    function handleStatusChange(status) {\n      setCards(status);\n    }\n\n    fetch(\"https://swdestinydb.com/api/public/cards/\").then(response => {\n      return response.json();\n    }).then(data => {\n      setLoad(false);\n      handleStatusChange(data);\n    }).catch(function () {\n      setError(true);\n    });\n  }, [load]);\n\n  function sortObject() {\n    let sortedList = cards;\n\n    for (let p in props.sorted) {\n      if (props.sorted[p].toggle) {\n        if (props.sorted[p] === \"points\") {\n          let pointCards = [];\n\n          for (let i = 0; i < props.sorted.points.val.length; i++) {\n            cards.filter(crd => {\n              if (crd.points !== null) {// console.log(crd.points.split(\"/\"));\n              }\n\n              return crd.points !== null && crd.points.split(\"/\").includes(\"\" + props.sorted.points.val[i] + \"\") ? pointCards.push(crd) : null;\n            });\n          }\n\n          for (let v = 0; v < pointCards.length; v++) {\n            sortedList.push(pointCards[v]);\n          }\n\n          console.log(sortedList);\n        } else {\n          sortedList = sortedList.filter(crd => {\n            return props.sorted[p].val.includes(crd[p]);\n          });\n        }\n      }\n    }\n\n    if (props.name !== '') {\n      sortedList = sortedList.filter(crd => {\n        if (crd.name.includes(props.name)) {\n          return true;\n        } else if (crd.name.toLowerCase().includes(props.name)) {\n          return true;\n        } else if (crd.name.toUpperCase().includes(props.name)) {\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n\n    return sortedList;\n  }\n\n  let cardEle;\n\n  if (sortObject().length !== 0) {\n    cardEle = sortObject().slice(0, props.itemLimit).map((crd, idx) => React.createElement(Link, {\n      to: \"/\" + crd.code,\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Card, {\n      name: crd.name,\n      bod: true,\n      imagesrc: crd.imagesrc,\n      code: crd.code,\n      loadColor: \"#343740\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  } else if (!load && !error) {\n    cardEle = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"No cards in search\");\n  } else if (load && !error) {\n    cardEle = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Fetching Cards...\");\n  } else if (load && error) {\n    cardEle = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Loading Cards failed. Refresh page...\");\n  }\n\n  const button = () => {\n    if (props.itemLimit < sortObject().length && sortObject().length > 10) {\n      return React.createElement(Button, {\n        handleClick: () => props.changeLimit(),\n        text: \"Load More\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, cardEle), button());\n}\n\nconst mapStateToProps = state => {\n  return {\n    displayedSet: state.displayedSet,\n    itemLimit: state.itemLimit,\n    setLimit: state.setLimit,\n    sorted: state.sorted,\n    name: state.name,\n    style: state.style\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeLimit: () => {\n      dispatch(changeLimit());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/main/List.js"],"names":["React","changeLimit","Card","connect","Button","Link","List","props","useState","cards","setCards","load","setLoad","error","setError","useEffect","handleStatusChange","status","fetch","then","response","json","data","catch","sortObject","sortedList","p","sorted","toggle","pointCards","i","points","val","length","filter","crd","split","includes","push","v","console","log","name","toLowerCase","toUpperCase","cardEle","slice","itemLimit","map","idx","code","imagesrc","button","mapStateToProps","state","displayedSet","setLimit","style","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {changeLimit} from \"../../redux/actions/setActions\";\nimport Card from '../card/Card';\nimport {connect} from 'react-redux';\nimport Button from '../input/Button';\nimport {Link} from 'react-router-dom';\n\nfunction List(props) {\n\n    const [cards, setCards] = React.useState([]);\n    const [load, setLoad] = React.useState(true);\n    const [error, setError] = React.useState(false);\n\n    React.useEffect(() => {\n\n        function handleStatusChange(status) {\n            setCards(status)\n        }\n\n        fetch(\"https://swdestinydb.com/api/public/cards/\")\n            .then(response => {\n                return response.json();\n            })\n            .then((data) => {\n                setLoad(false);\n                handleStatusChange(data);\n            }).catch(function () {\n            setError(true);\n        })\n\n    }, [load]);\n\n\n    function sortObject() {\n\n        let sortedList = cards;\n\n        for (let p in props.sorted) {\n            if (props.sorted[p].toggle) {\n\n                if (props.sorted[p]===\"points\") {\n                    let pointCards=[];\n\n                    for(let i=0; i<props.sorted.points.val.length; i++){\n                        cards.filter(crd => {\n                            if(crd.points !== null){\n                                // console.log(crd.points.split(\"/\"));\n                            }\n\n                            return (crd.points !== null&&crd.points.split(\"/\").includes(\"\" + props.sorted.points.val[i] + \"\")) ? pointCards.push(crd)  : null\n                        });\n                    }\n\n\n\n                    for(let v=0; v<pointCards.length; v++){\n                        sortedList.push(pointCards[v])\n                    }\n                    console.log(sortedList);\n\n\n                } else {\n                    sortedList = sortedList.filter(crd => {\n\n                        return props.sorted[p].val.includes(crd[p])\n\n                    });\n                }\n            }\n        }\n\n\n        if (props.name !== '') {\n            sortedList = sortedList.filter(crd => {\n                if (crd.name.includes(props.name)) {\n                    return true\n                } else if (crd.name.toLowerCase().includes(props.name)) {\n                    return true\n                } else if (crd.name.toUpperCase().includes(props.name)) {\n                    return true\n                } else {\n                    return false\n                }\n            });\n        }\n\n\n        return sortedList\n    }\n\n    let cardEle;\n\n    if (sortObject().length !== 0) {\n        cardEle = sortObject().slice(0, props.itemLimit).map((crd, idx) =>\n\n\n            <Link to={\"/\" + crd.code} key={idx}>\n\n                <Card name={crd.name} bod={true} imagesrc={crd.imagesrc} code={crd.code}\n                                                      loadColor={\"#343740\"}/>\n            </Link>\n        );\n    } else if (!load && !error) {\n        cardEle = <h1>No cards in search</h1>;\n    } else if (load && !error) {\n        cardEle = <h1>Fetching Cards...</h1>;\n    } else if (load && error) {\n        cardEle = <h1>Loading Cards failed. Refresh page...</h1>;\n    }\n\n\n    const button = () => {\n        if (props.itemLimit < sortObject().length && sortObject().length > 10) {\n            return <Button handleClick={() => props.changeLimit()} text={\"Load More\"}/>\n        }\n    };\n\n\n    return (\n\n        <div className={\"list\"}>\n            <div className={\"wrapper\"}>\n                {cardEle}\n            </div>\n            {button()}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        displayedSet: state.displayedSet,\n        itemLimit: state.itemLimit,\n        setLimit: state.setLimit,\n        sorted: state.sorted,\n        name: state.name,\n        style:state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeLimit: () => {\n            dispatch(changeLimit())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n"]},"metadata":{},"sourceType":"module"}