{"ast":null,"code":"import _slicedToArray from\"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useHistory,useParams}from\"react-router-dom\";import Card from'./Card';import CardInfo from'./CardInfo';function CardPage(){var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),card=_React$useState2[0],setCard=_React$useState2[1];var _React$useState3=React.useState(\"loading\"),_React$useState4=_slicedToArray(_React$useState3,2),load=_React$useState4[0],updateLoading=_React$useState4[1];var history=useHistory();var back=function back(e){e.stopPropagation();history.goBack();};var handleImageLoad=function handleImageLoad(){updateLoading(\"loaded\");};var handleImageError=function handleImageError(){updateLoading(\"error\");};var loadDisplay=function loadDisplay(){if(load===\"loading\"){return\"Loading Image...\";}else if(load===\"error\"){return\"Image Error\";}else{return\"\";}};var _useParams=useParams(),id=_useParams.id;console.log(id);React.useEffect(function(){function handleStatusChange(status){setCard(status);}var unsubscribe=function unsubscribe(){fetch(\"https://swdestinydb.com/api/public/cards/\").then(function(response){return response.json();}).then(function(data){var cardMain=data.filter(function(crd){return id===crd.code;});handleStatusChange(cardMain[0]);});};unsubscribe();return function(){return unsubscribe();};},[id]);return React.createElement(\"div\",{className:id?\"cardPageWrapper\":undefined,onClick:back},React.createElement(Card,{name:card.name,imagesrc:card.imagesrc,code:card.code,loadColor:\"white\"}),React.createElement(CardInfo,{crd:card}));}export default CardPage;","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/CardPage.js"],"names":["React","useHistory","useParams","Card","CardInfo","CardPage","useState","card","setCard","load","updateLoading","history","back","e","stopPropagation","goBack","handleImageLoad","handleImageError","loadDisplay","id","console","log","useEffect","handleStatusChange","status","unsubscribe","fetch","then","response","json","data","cardMain","filter","crd","code","undefined","name","imagesrc"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,UAAR,CACIC,SADJ,KAEO,kBAFP,CAGA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,QAASC,CAAAA,QAAT,EAAmB,qBAEQL,KAAK,CAACM,QAAN,CAAe,EAAf,CAFR,oDAERC,IAFQ,qBAEHC,OAFG,0CAGeR,KAAK,CAACM,QAAN,CAAe,SAAf,CAHf,qDAGRG,IAHQ,qBAGFC,aAHE,qBAKf,GAAIC,CAAAA,OAAO,CAAGV,UAAU,EAAxB,CAEA,GAAIW,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAAAC,CAAC,CAAI,CACZA,CAAC,CAACC,eAAF,GACAH,OAAO,CAACI,MAAR,GACH,CAHD,CAKA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAI,CACxBN,aAAa,CAAC,QAAD,CAAb,CACH,CAFD,CAIA,GAAMO,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAI,CACzBP,aAAa,CAAC,OAAD,CAAb,CACH,CAFD,CAIA,GAAIQ,CAAAA,WAAW,CAAE,QAAbA,CAAAA,WAAa,EAAI,CACjB,GAAGT,IAAI,GAAG,SAAV,CAAoB,CAChB,MAAO,kBAAP,CACH,CAFD,IAEM,IAAGA,IAAI,GAAG,OAAV,CAAkB,CACpB,MAAO,aAAP,CACH,CAFK,IAED,CACD,MAAO,EAAP,CACH,CACJ,CARD,CApBe,eA8BFP,SAAS,EA9BP,CA8BTiB,EA9BS,YA8BTA,EA9BS,CA+BfC,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAGAnB,KAAK,CAACsB,SAAN,CAAgB,UAAI,CAGhB,QAASC,CAAAA,kBAAT,CAA4BC,MAA5B,CAAoC,CAChChB,OAAO,CAACgB,MAAD,CAAP,CACH,CAED,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAI,CAGpBC,KAAK,CAAC,2CAAD,CAAL,CACKC,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CAHL,EAIKF,IAJL,CAIU,SAACG,IAAD,CAAU,CAEZ,GAAIC,CAAAA,QAAQ,CAAGD,IAAI,CAACE,MAAL,CAAY,SAAAC,GAAG,CAAE,CAC5B,MAAOd,CAAAA,EAAE,GAAGc,GAAG,CAACC,IAAhB,CACH,CAFc,CAAf,CAIAX,kBAAkB,CAACQ,QAAQ,CAAC,CAAD,CAAT,CAAlB,CACH,CAXL,EAYH,CAfD,CAiBAN,WAAW,GAGX,MAAO,kBAAIA,CAAAA,WAAW,EAAf,EAAP,CACH,CA5BD,CA4BE,CAACN,EAAD,CA5BF,EA8BA,MACI,4BAAK,SAAS,CAAEA,EAAE,CAAG,iBAAH,CAAuBgB,SAAzC,CAAoD,OAAO,CAAEvB,IAA7D,EACI,oBAAC,IAAD,EAAO,IAAI,CAAEL,IAAI,CAAC6B,IAAlB,CAAwB,QAAQ,CAAE7B,IAAI,CAAC8B,QAAvC,CAAiD,IAAI,CAAE9B,IAAI,CAAC2B,IAA5D,CAAkE,SAAS,CAAE,OAA7E,EADJ,CAEI,oBAAC,QAAD,EAAU,GAAG,CAAE3B,IAAf,EAFJ,CADJ,CAMH,CAED,cAAeF,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport {useHistory,\n    useParams\n} from \"react-router-dom\";\nimport Card from './Card';\nimport CardInfo from './CardInfo';\n\nfunction CardPage(){\n\n    const [card,setCard] = React.useState(\"\");\n    const [load, updateLoading] = React.useState(\"loading\");\n\n    let history = useHistory();\n\n    let back = e => {\n        e.stopPropagation();\n        history.goBack();\n    };\n\n    const handleImageLoad = ()=>{\n        updateLoading(\"loaded\")\n    };\n\n    const handleImageError = ()=>{\n        updateLoading(\"error\")\n    };\n\n    let loadDisplay =()=>{\n        if(load===\"loading\"){\n            return \"Loading Image...\"\n        }else if(load===\"error\"){\n            return \"Image Error\";\n        }else{\n            return \"\"\n        }\n    };\n\n    let { id } = useParams();\n    console.log(id);\n\n\n    React.useEffect(()=>{\n\n\n        function handleStatusChange(status) {\n            setCard(status)\n        }\n\n        const unsubscribe = ()=>{\n\n\n            fetch(\"https://swdestinydb.com/api/public/cards/\")\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n\n                    let cardMain = data.filter(crd=>{\n                        return id===crd.code;\n                    });\n\n                    handleStatusChange(cardMain[0]);\n                })\n        };\n\n        unsubscribe();\n\n\n        return ()=>unsubscribe();\n    },[id]);\n\n    return (\n        <div className={id ? \"cardPageWrapper\" : undefined} onClick={back}>\n            <Card  name={card.name} imagesrc={card.imagesrc} code={card.code} loadColor={\"white\"}/>\n            <CardInfo crd={card}/>\n        </div>\n    )\n}\n\nexport default CardPage;"]},"metadata":{},"sourceType":"module"}