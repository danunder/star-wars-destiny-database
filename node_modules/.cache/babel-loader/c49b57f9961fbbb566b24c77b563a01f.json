{"ast":null,"code":"import _slicedToArray from\"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Link}from\"react-router-dom\";import Card from'./Card';import{connect}from'react-redux';import CardInfo from'./CardInfo';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSpinner,faExclamationCircle,faTimes}from'@fortawesome/free-solid-svg-icons';function CardPage(props){var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),card=_React$useState2[0],setCard=_React$useState2[1];var _React$useState3=React.useState({crd:false,load:true,error:false}),_React$useState4=_slicedToArray(_React$useState3,2),rend=_React$useState4[0],rendElement=_React$useState4[1];React.useEffect(function(){function handleStatusChange(status){rendElement({crd:true,load:false,error:false});setCard(status);}var cardMain=props.cards.filter(function(crd){return props.match.params.id===crd.code;});handleStatusChange(cardMain[0]);},[props.match.params.id,props.cards]);var code=card.code;return React.createElement(Link,{className:props.match.params.id?\"cardPageWrapper\":undefined,to:\"/\"},React.createElement(\"div\",{className:\"close\",style:{backgroundColor:props.style.navText,color:props.style.nav}},React.createElement(FontAwesomeIcon,{icon:faTimes,size:\"4x\"})),rend.load&&React.createElement(FontAwesomeIcon,{icon:faSpinner,spin:true,size:\"lg\",style:{color:props.loadColor}}),rend.error&&React.createElement(FontAwesomeIcon,{icon:faExclamationCircle,style:{color:\"red\"},size:\"6x\"}),rend.crd&&React.createElement(Card,{name:card.name,bod:false,imagesrc:card.imagesrc,code:card.code,loadColor:\"white\"}),code&&React.createElement(CardInfo,{crd:card,code:code}));}var mapStateToProps=function mapStateToProps(state){return{style:state.style,cards:state.cards};};export default connect(mapStateToProps)(CardPage);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/CardPage.js"],"names":["React","Link","Card","connect","CardInfo","FontAwesomeIcon","faSpinner","faExclamationCircle","faTimes","CardPage","props","useState","card","setCard","crd","load","error","rend","rendElement","useEffect","handleStatusChange","status","cardMain","cards","filter","match","params","id","code","undefined","backgroundColor","style","navText","color","nav","loadColor","name","imagesrc","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Link\n} from \"react-router-dom\";\nimport Card from './Card';\nimport {connect} from 'react-redux';\nimport CardInfo from './CardInfo';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle, faTimes} from '@fortawesome/free-solid-svg-icons';\n\n\nfunction CardPage(props) {\n\n    const [card, setCard] = React.useState(\"\");\n\n    const [rend, rendElement] = React.useState({\n        crd: false,\n        load: true,\n        error: false\n    });\n\n\n    React.useEffect(() => {\n\n\n            function handleStatusChange(status) {\n                rendElement({\n                    crd: true,\n                    load: false,\n                    error: false\n                });\n                setCard(status)\n            }\n\n\n            let cardMain = props.cards.filter(crd => {\n                return props.match.params.id === crd.code;\n            });\n\n            handleStatusChange(cardMain[0]);\n\n\n        }\n\n        ,\n        [props.match.params.id, props.cards]\n    )\n    ;\n\n    const code = card.code;\n\n\n    return (\n        <Link className={props.match.params.id ? \"cardPageWrapper\" : undefined} to={\"/\"}>\n\n            <div className={\"close\"} style={{backgroundColor: props.style.navText, color: props.style.nav}}>\n                <FontAwesomeIcon icon={faTimes} size={\"4x\"}/>\n            </div>\n\n            {rend.load && <FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color: props.loadColor}}/>}\n            {rend.error && <FontAwesomeIcon icon={faExclamationCircle} style={{color: \"red\"}} size={\"6x\"}/>}\n\n            {rend.crd &&\n            <Card name={card.name} bod={false} imagesrc={card.imagesrc} code={card.code} loadColor={\"white\"}/>}\n            {code && <CardInfo crd={card} code={code}/>}\n\n        </Link>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style,\n        cards: state.cards\n    }\n};\n\nexport default connect(mapStateToProps)(CardPage);"]},"metadata":{},"sourceType":"module"}