{"ast":null,"code":"import _slicedToArray from\"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Link}from\"react-router-dom\";import Card from'./Card';import CardInfo from'./CardInfo';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faSpinner,faExclamationCircle}from'@fortawesome/free-solid-svg-icons';function CardPage(props){var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),card=_React$useState2[0],setCard=_React$useState2[1];var _React$useState3=React.useState({crd:false,load:true,error:false}),_React$useState4=_slicedToArray(_React$useState3,2),rend=_React$useState4[0],rendElement=_React$useState4[1];React.useEffect(function(){var abortController=new AbortController();var signal=abortController.signal;function handleStatusChange(status){rendElement({crd:true,load:false,error:false});setCard(status);}var unsubscribe=function unsubscribe(){fetch(\"https://swdestinydb.com/api/public/cards/\",{signal:signal}).then(function(response){return response.json();}).then(function(data){var cardMain=data.filter(function(crd){return props.match.params.id===crd.code;});handleStatusChange(cardMain[0]);}).catch(function(){return rendElement({crd:false,load:false,error:true});});};unsubscribe();return function cleanup(){unsubscribe();abortController.abort();};},[props.match.params.id]);var code=card.code;return React.createElement(Link,{className:props.match.params.id?\"cardPageWrapper\":undefined,to:\"/\"},rend.load&&React.createElement(FontAwesomeIcon,{icon:faSpinner,spin:true,size:\"lg\",style:{color:props.loadColor}}),rend.error&&React.createElement(FontAwesomeIcon,{icon:faExclamationCircle,style:{color:\"red\"},size:\"6x\"}),rend.crd&&React.createElement(Card,{name:card.name,bod:false,imagesrc:card.imagesrc,code:card.code,loadColor:\"white\"}),code&&React.createElement(CardInfo,{crd:card,code:code}));}export default CardPage;","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/card/CardPage.js"],"names":["React","Link","Card","CardInfo","FontAwesomeIcon","faSpinner","faExclamationCircle","CardPage","props","useState","card","setCard","crd","load","error","rend","rendElement","useEffect","abortController","AbortController","signal","handleStatusChange","status","unsubscribe","fetch","then","response","json","data","cardMain","filter","match","params","id","code","catch","cleanup","abort","undefined","color","loadColor","name","imagesrc"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Link\n} from \"react-router-dom\";\nimport Card from './Card';\nimport CardInfo from './CardInfo';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\n\n\nfunction CardPage(props){\n\n    const [card,setCard] = React.useState(\"\");\n\n    const [rend, rendElement] = React.useState({\n        crd:false,\n        load:true,\n        error:false\n    });\n\n\n\n\n    React.useEffect(()=>{\n\n        const abortController = new AbortController();\n        const signal  =abortController.signal;\n\n\n        function handleStatusChange(status) {\n            rendElement({\n                crd:true,\n                load:false,\n                error:false\n            });\n            setCard(status)\n        }\n\n        const unsubscribe = ()=>{\n\n\n            fetch(\"https://swdestinydb.com/api/public/cards/\", {signal:signal})\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n\n                    let cardMain = data.filter(crd=>{\n                        return props.match.params.id===crd.code;\n                    });\n\n                    handleStatusChange(cardMain[0]);\n                }).catch(()=> rendElement({\n                crd:false,\n                load:false,\n                error:true\n            }))\n        };\n\n        unsubscribe();\n\n\n        return function cleanup(){\n            unsubscribe();\n            abortController.abort();\n        };\n\n    },[props.match.params.id]);\n\n    const code = card.code;\n\n\n    return (\n        <Link className={props.match.params.id ? \"cardPageWrapper\" : undefined} to={\"/\"}>\n\n            {rend.load&&<FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color:props.loadColor}}/>}\n            {rend.error&&<FontAwesomeIcon icon={faExclamationCircle} style={{color:\"red\"}} size={\"6x\"}/>}\n\n            {rend.crd&&<Card  name={card.name} bod={false} imagesrc={card.imagesrc} code={card.code} loadColor={\"white\"}/>}\n            {code&&<CardInfo crd={card} code={code}/>}\n\n        </Link>\n    )\n}\n\nexport default CardPage;"]},"metadata":{},"sourceType":"module"}