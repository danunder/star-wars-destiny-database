{"ast":null,"code":"import _slicedToArray from\"/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{setStyles as _setStyles}from\"../../redux/actions/setActions\";import{connect}from\"react-redux\";function StyleOption(props){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),hover=_React$useState2[0],setHover=_React$useState2[1];var hoverChange=function hoverChange(){setHover(!hover);};var active;if(hover){if(props.style.navText===undefined){active={backgroundColor:'#343740',color:'white'};}else{active={backgroundColor:props.style.bodyText,color:props.style.navText};}}else{if(props.opt.name===props.style.name){active={backgroundColor:props.style.navText,color:props.style.nav};}else{active={backgroundColor:props.style.nav,color:props.style.navText};}}return React.createElement(\"div\",{className:\"item\",onMouseEnter:hoverChange,onMouseLeave:hoverChange,style:active,onClick:function onClick(){return props.setStyles(props.opt);}},props.opt.name);}var mapStateToProps=function mapStateToProps(state){return{style:state.style};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setStyles:function setStyles(style){dispatch(_setStyles(style));}};};export default connect(mapStateToProps,mapDispatchToProps)(StyleOption);","map":{"version":3,"sources":["/Users/LMJ62894/WebstormProjects/star-wars-destiny-database/src/components/nav/StyleOption.js"],"names":["React","setStyles","connect","StyleOption","props","useState","hover","setHover","hoverChange","active","style","navText","undefined","backgroundColor","color","bodyText","opt","name","nav","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,SAAS,GAATA,CAAAA,UAAR,KAAwB,gCAAxB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CAEA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,qBAEEJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAFF,oDAEjBC,KAFiB,qBAEVC,QAFU,qBAIxB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAI,CACpBD,QAAQ,CAAC,CAACD,KAAF,CAAR,CACH,CAFD,CAIA,GAAIG,CAAAA,MAAJ,CAEA,GAAGH,KAAH,CAAS,CACL,GAAGF,KAAK,CAACM,KAAN,CAAYC,OAAZ,GAAsBC,SAAzB,CAAmC,CAC/BH,MAAM,CAAG,CACLI,eAAe,CAAE,SADZ,CAELC,KAAK,CAAC,OAFD,CAAT,CAIH,CALD,IAKK,CACDL,MAAM,CAAG,CACLI,eAAe,CAAET,KAAK,CAACM,KAAN,CAAYK,QADxB,CAELD,KAAK,CAACV,KAAK,CAACM,KAAN,CAAYC,OAFb,CAAT,CAIH,CACJ,CAZD,IAYK,CACD,GAAGP,KAAK,CAACY,GAAN,CAAUC,IAAV,GAAiBb,KAAK,CAACM,KAAN,CAAYO,IAAhC,CAAqC,CACjCR,MAAM,CAAC,CACHI,eAAe,CAACT,KAAK,CAACM,KAAN,CAAYC,OADzB,CAEHG,KAAK,CAACV,KAAK,CAACM,KAAN,CAAYQ,GAFf,CAAP,CAIH,CALD,IAKK,CACDT,MAAM,CAAC,CACHI,eAAe,CAACT,KAAK,CAACM,KAAN,CAAYQ,GADzB,CAEHJ,KAAK,CAACV,KAAK,CAACM,KAAN,CAAYC,OAFf,CAAP,CAIH,CACJ,CAMD,MAEI,4BAAK,SAAS,CAAE,MAAhB,CAAwB,YAAY,CAAEH,WAAtC,CAAmD,YAAY,CAAEA,WAAjE,CAA8E,KAAK,CAAEC,MAArF,CAA6F,OAAO,CAAE,yBAAML,CAAAA,KAAK,CAACH,SAAN,CAAgBG,KAAK,CAACY,GAAtB,CAAN,EAAtG,EAAyIZ,KAAK,CAACY,GAAN,CAAUC,IAAnJ,CAFJ,CAKH,CAED,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHV,KAAK,CAAEU,KAAK,CAACV,KADV,CAAP,CAGH,CAJD,CAMA,GAAMW,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACrC,MAAO,CACHrB,SAAS,CAAE,mBAACS,KAAD,CAAW,CAClBY,QAAQ,CAACrB,UAAS,CAACS,KAAD,CAAV,CAAR,CACH,CAHE,CAAP,CAKH,CAND,CAQA,cAAeR,CAAAA,OAAO,CAACiB,eAAD,CAAkBE,kBAAlB,CAAP,CAA6ClB,WAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {setStyles} from \"../../redux/actions/setActions\";\nimport {connect} from \"react-redux\";\n\nfunction StyleOption(props) {\n\n    const [hover, setHover] = React.useState(false)\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n    let active;\n\n    if(hover){\n        if(props.style.navText===undefined){\n            active = {\n                backgroundColor: '#343740',\n                color:'white'\n            }\n        }else{\n            active = {\n                backgroundColor: props.style.bodyText,\n                color:props.style.navText\n            }\n        }\n    }else{\n        if(props.opt.name===props.style.name){\n            active={\n                backgroundColor:props.style.navText,\n                color:props.style.nav\n            }\n        }else{\n            active={\n                backgroundColor:props.style.nav,\n                color:props.style.navText\n            }\n        }\n    }\n\n\n\n\n\n    return (\n\n        <div className={\"item\"} onMouseEnter={hoverChange} onMouseLeave={hoverChange} style={active} onClick={() => props.setStyles(props.opt)}>{props.opt.name}</div>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setStyles: (style) => {\n            dispatch(setStyles(style))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StyleOption);"]},"metadata":{},"sourceType":"module"}