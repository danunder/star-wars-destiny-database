{"version":3,"sources":["assets/logo.png","components/card/Card.js","components/input/Button.js","components/main/List.js","redux/actions/setActions.js","components/card/Side.js","components/card/CardInfo.js","components/card/CardPage.js","components/input/Search.js","components/nav/Navigation.js","components/nav/OptionItem.js","components/nav/Option.js","data/Sort.js","components/nav/options.js","App.js","serviceWorker.js","redux/reducers/index.js","index.js"],"names":["module","exports","Card","props","React","useState","load","updateLoading","img","error","rend","rendElement","seconds","setSeconds","useEffect","interval","setInterval","imagesrc","clearInterval","className","name","alt","onLoad","onError","src","icon","faSpinner","spin","size","style","color","loadColor","faExclamationCircle","Button","onClick","handleClick","bind","this","text","connect","state","displayedSet","itemLimit","setLimit","sorted","dispatch","changeLimit","type","cardEle","cards","setCards","setLoad","setError","sortObject","sortedList","p","toggle","points","filter","crd","split","includes","val","toLowerCase","toUpperCase","fetch","then","response","json","data","catch","length","slice","map","idx","to","code","key","button","Side","finished","setVal","sd","setClass","isNaN","dangerouslySetInnerHTML","__html","CardInfo","format","restricted","balance","legal","rst","setRst","abortController","AbortController","signal","formats","fm","sets","set_code","push","abort","is_unique","health","faHeart","cost","type_name","undefined","subtypes","sb","sides","has_errata","replace","flavor","affiliation_name","rarity_name","backgroundColor","faction_code","set_name","position","CardPage","card","setCard","unsubscribe","status","cardMain","match","params","id","ex","console","log","setName","setText","placeholder","onChange","event","target","value","options","toggleOptions","clearOptions","Logo","faSearch","faTimes","setSort","prop","shower","handleSort","toggleReturn","charAt","substring","Option","drop","toggleDrop","opt","values","op","faChevronDown","faChevronUp","Sort","itm","returnSets","show","srt","App","path","component","List","Boolean","window","location","hostname","initState","affiliation_code","type_code","rootReducer","action","store","createStore","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.310905b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.faa1ee06.png\";","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\nfunction Card(props) {\n\n    const [load, updateLoading] = React.useState(\"loading\");\n    const [rend, rendElement] = React.useState({\n        img:false,\n        load:true,\n        error:false\n    });\n    const [seconds, setSeconds] = React.useState(0);\n\n\n    React.useEffect(() => {\n        let interval = null;\n\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds + 1);\n                if (load) {\n                    if(props.imagesrc===null){\n                        rendElement({\n                            img:false,\n                            load:false,\n                            error:true\n                        });\n                    }else{\n                        rendElement({\n                            img:true,\n                            load:false,\n                            error:false\n                        });\n                    }\n\n                } else {\n                    if(seconds>3){\n                        rendElement({\n                            img:false,\n                            load:false,\n                            error:true\n                        });\n                    }else{\n                        rendElement({\n                            img:false,\n                            load:true,\n                            error:false\n                        });\n                    }\n                }\n            }, 1000);\n\n        return () => clearInterval(interval);\n    }, [seconds, load, props.imagesrc]);\n\n    const handleImageLoad = () => {\n        updateLoading(true)\n    };\n\n    const handleImageError = () => {\n        updateLoading(false)\n    };\n\n    return (\n        <div className={\"card\"} >\n            <h1>{props.name}</h1>\n            <div className={\"cardWrapper\"}>\n                {rend.img && <img alt={props.name} onLoad={handleImageLoad} onError={handleImageError} src={props.imagesrc}/>}\n                <div>\n                    {rend.load&&<FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color:props.loadColor}}/>}\n                    {rend.error&&<FontAwesomeIcon icon={faExclamationCircle} style={{color:\"red\"}} size={\"6x\"}/>}\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\n\nfunction Button(props){\n\n    return (\n        <div className={\"button\"} onClick={props.handleClick.bind(this)}>\n            {props.text}\n        </div>\n    )\n}\n\nexport default Button;","import React from 'react';\nimport {changeLimit} from \"../../redux/actions/setActions\";\nimport Card from '../card/Card';\nimport {connect} from 'react-redux';\nimport Button from '../input/Button';\nimport {Link} from 'react-router-dom';\n\nfunction List(props) {\n\n    const [cards, setCards] = React.useState([]);\n    const [load, setLoad] = React.useState(true);\n    const [error, setError] = React.useState(false);\n\n    React.useEffect(() => {\n\n        function handleStatusChange(status) {\n            setCards(status)\n        }\n\n        fetch(\"https://swdestinydb.com/api/public/cards/\")\n            .then(response => {\n                return response.json();\n            })\n            .then((data) => {\n                setLoad(false);\n                handleStatusChange(data);\n            }).catch(function () {\n            setError(true);\n        })\n\n    }, [cards, load]);\n\n\n    function sortObject() {\n\n        let sortedList = cards;\n\n        for (let p in props.sorted) {\n            if (props.sorted[p].toggle) {\n\n                if (props.sorted.points.toggle) {\n                    sortedList = sortedList.filter(crd => {\n\n                            return (crd.points !== null) ?  crd.points.split(\"/\").includes(props.sorted[p].val):null\n                    });\n\n                } else {\n                    sortedList = sortedList.filter(crd => {\n\n                        return crd[p] === props.sorted[p].val\n\n                    });\n                }\n\n\n            }\n        }\n\n\n        if (props.name !== '') {\n            sortedList = sortedList.filter(crd => {\n                if (crd.name.includes(props.name)) {\n                    return true\n                } else if (crd.name.toLowerCase().includes(props.name)) {\n                    return true\n                } else if (crd.name.toUpperCase().includes(props.name)) {\n                    return true\n                } else {\n                    return false\n                }\n            });\n        }\n\n\n        return sortedList\n    }\n\n    let cardEle;\n\n    if (sortObject().length !== 0) {\n        cardEle = sortObject().slice(0, props.itemLimit).map((crd, idx) =>\n\n\n            <Link to={\"/\" + crd.code} key={idx}><Card name={crd.name} imagesrc={crd.imagesrc} code={crd.code}\n                                                      loadColor={\"#343740\"}/></Link>\n        );\n    } else if (!load && !error) {\n        cardEle = <h1>No cards in search</h1>;\n    } else if (load && !error) {\n        cardEle = <h1>Fetching Cards...</h1>;\n    } else if (load && error) {\n        cardEle = <h1>Loading Cards failed. Refresh page...</h1>;\n    }\n\n\n    const button = () => {\n        if (props.itemLimit < sortObject().length && sortObject().length > 10) {\n            return <Button handleClick={() => props.changeLimit()} text={\"Load More\"}/>\n        }\n    };\n\n\n    return (\n\n        <div className={\"list\"}>\n            <div className={\"wrapper\"}>\n                {cardEle}\n            </div>\n            {button()}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        displayedSet: state.displayedSet,\n        itemLimit: state.itemLimit,\n        setLimit: state.setLimit,\n        sorted: state.sorted,\n        name: state.name\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeLimit: () => {\n            dispatch(changeLimit())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","export const changeLimit = () => {\n    return {\n        type: 'INCREASE_LIMIT'\n    }\n};\n\nexport const setName = (name) => {\n    return {\n        type: 'SET_NAME',\n        name:name\n    }\n};\n\nexport const setSort = (prop, toggle, val) => {\n    return {\n        type: 'SET_SORT',\n        prop: prop,\n        toggle: toggle,\n        val: val\n    }\n};\n\nexport const toggleOptions = () => {\n    return {\n        type: 'TOGGLE_OPTIONS'\n    }\n};\n\nexport const clearOptions = () =>{\n    return {\n        type: 'CLEAR_OPTIONS'\n    }\n};","import React from 'react';\n\nfunction Side(props){\n\n    let finished;\n\n    function setVal (){\n        if(props.sd.includes(\"+\")){\n            return \"+ \"+props.sd[1];\n        }else if(props.sd.includes(\"Sp\")){\n            return \"\";\n        }else{\n            return props.sd[0];\n        }\n    }\n\n    function setClass(){\n        if(props.sd.includes(\"+\")){\n            return true\n        }else{\n            return false\n        }\n    }\n\n\n    if(props.sd.includes(\"RD\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-ranged '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-ranged '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Sh\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-shield '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-shield '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"MD\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-melee '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-melee '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"ID\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-indirect '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-indirect '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Dc\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-discard '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-discard '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Dr\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-disrupt '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-disrupt '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"F\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-focus '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-focus '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Sp\")){\n        finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-special '></span></span>\";\n    }else if(props.sd.includes(\"R\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-resource '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-resource '></span></span>\";\n        }\n\n    }else{\n        finished = \"<span class='blank'>-</span>\"\n    }\n\n\n\n    if(!isNaN(props.sd[props.sd.length-1])&&props.sd[props.sd.length-1]!==\"-\"){\n        if(setClass()){\n            finished = finished+\"<span class='res modify'> <span>\"+props.sd[props.sd.length-1]+\"</span> <span\" +\n                \" class='icon\" +\n                \" icon-resource'></span></span>\"\n        }else{\n            finished = finished+\"<span class='res'> <span>\"+props.sd[props.sd.length-1]+\"</span> <span\" +\n                \" class='icon\" +\n                \" icon-resource'></span></span>\"\n        }\n\n    }\n\n\n\n\n    return(\n        <div className={\"side\"} dangerouslySetInnerHTML={{ __html: finished }}></div>\n    )\n}\n\nexport default Side","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle, faHeart} from '@fortawesome/free-solid-svg-icons';\nimport Side from './Side';\n\n\nfunction CardInfo(props) {\n\n    const [rst, setRst] = React.useState([\n\n        {\n            format: \"trilogy\",\n            restricted: false,\n            balance: \"--\",\n            legal: false\n        },\n        {\n            format: \"standard\",\n            restricted: false,\n            balance: \"--\",\n            legal: false\n        },\n        {\n            format: \"infinite\",\n            restricted: false,\n            balance: \"--\",\n            legal: true\n        }\n    ]);\n\n    const [rend, rendElement] = React.useState({\n        rst: false,\n        load: true,\n        error: false\n    });\n\n\n    React.useEffect(() => {\n\n        const abortController = new AbortController();\n        const signal = abortController.signal;\n\n\n        function handleStatusChange(status) {\n            setRst(status);\n        }\n\n        const unsubscribe = () => {\n\n            fetch(\"https://swdestinydb.com/api/public/formats/\", {signal: signal})\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    let formats = [];\n\n                    data.map((fm) => {\n\n                        let format = {\n                            name: fm.name,\n                            restricted: false,\n                            balance: \"--\",\n                            legal: false\n                        };\n\n                        if (props.code in fm.data.balance) {\n                            format.balance = fm.data.balance[props.code];\n                        }\n\n                        if (fm.data.restricted.includes(props.code)) {\n                            format.restricted = true;\n                        }\n\n                        if (fm.data.sets.includes(props.crd.set_code)) {\n                            format.legal = true;\n                        }\n\n                        rendElement({rst: true, load: false, error: false});\n\n\n                        return formats.push(format);\n\n                    });\n\n                    handleStatusChange(formats);\n                }).catch(() => rendElement({rst: false, load: false, error: true}))\n        };\n\n        unsubscribe();\n\n\n        return function cleanup() {\n            abortController.abort();\n        };\n    }, [props.code, props.crd.set_code]);\n\n    let formats = rst.map((fm, idx) =>\n        <div key={idx} className={\"format\"}>\n            <h3>{fm.name}</h3>\n            <h3>{fm.restricted ? \"Restricted\" : null}</h3>\n            <h3>{fm.balance}</h3>\n            <h6>Legal: {fm.legal ? \"Playable\" : \"Unplayable\"}</h6>\n        </div>\n    );\n\n\n    return (\n        <div className={\"cardInfo\"}>\n            <h1>{props.crd.is_unique && \"◆ \"}{props.crd.name}</h1>\n            {props.crd.health && <h2><FontAwesomeIcon icon={faHeart} size={\"lg\"} style={{color: \"red\"}} /> {props.crd.health}</h2>}\n            {props.crd.cost && <h2 className={\"cost\"}> <span className='icon icon-resource '></span> {props.crd.cost} </h2>}\n            <h2>{props.crd.points && \"Points:\"}{props.crd.points}</h2>\n            <h2>{props.crd.type_name}</h2>\n            <div className={\"subtypes\"}>{props.crd.subtypes !== undefined && props.crd.subtypes.map((sb, idx) =>\n                <h3 key={idx}>{sb.name}{idx !== (props.crd.subtypes.length - 1) && \"-\"}</h3>\n            )}</div>\n            <div className={\"sides\"}>{props.crd.sides !== undefined && props.crd.sides.map((sd, idx) =>\n                <Side key={idx} sd={sd}/>\n            )}</div>\n            <h3>{props.crd.has_errata && \"This card has an errata\"}</h3>\n            <div className={\"formats\"}>\n                {rend.rst && formats}\n            </div>\n            <div>\n                {rend.load && <FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color: props.loadColor}}/>}\n                {rend.error && <FontAwesomeIcon icon={faExclamationCircle} style={{color: \"red\"}} size={\"6x\"}/>}\n            </div>\n            <div className={\"text\"}>\n                {props.crd.text!==null&&<p dangerouslySetInnerHTML={{__html: props.crd.text.replace(\"[special]\", \"<span class='icon\" +\n                        \" icon-special '></span>\").replace(\"([special])\", \"(<span class='icon\" +\n                        \" icon-special '></span>)\").replace(\"([indirect])\", \"(<span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"([melee])\", \"(<span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>)\").replace(\"([discard])\", \"(<span class='icon\" +\n                        \" icon-discard '></span>)\").replace(\"([focus])\", \"(<span class='icon\" +\n                        \" icon-focus '></span>)\").replace(\"([disrupt])\", \"(<span class='icon\" +\n                        \" icon-disrupt '></span>)\").replace(\"([shield])\", \"(<span class='icon\" +\n                        \" icon-shield '></span>)\").replace(\"([resource])\", \"(<span class='icon\" +\n                        \" icon-resource '></span>)\").replace(\"([blank])\", \"(<span class='icon\" +\n                        \" icon-blank '></span>)\").replace(\"([ranged] or [melee])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([melee] or [ranged])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged] or [melee])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged], [melee] or [indirect])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>, <span class='icon\" +\n                        \" icon-melee '></span> or <span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"([ranged], [melee], or [indirect])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>, <span class='icon\" +\n                        \" icon-melee '></span> or <span class='icon\" +\n                        \" icon-indirect '></span>)\")}} className={\"effects\"}></p>}\n\n                <i>{props.crd.flavor!==null&& props.crd.flavor.replace(\"<cite>\", \"-\").replace(\"</cite>\", \"\")}</i>\n\n                <div className={\"bottom\"}>\n                    <div className={\"affl \"+props.crd.affiliation_name}>{props.crd.affiliation_name}</div>\n\n                    <div className={\"rr \"+props.crd.rarity_name}>{props.crd.rarity_name}</div>\n\n                    <div className={\"color\" } style={{\n                        backgroundColor:props.crd.faction_code,\n                        color: \"black\"\n                    }}>\n                        {props.crd.faction_code.toUpperCase()}\n                    </div>\n                    <div>{props.crd.set_name}: {props.crd.position}</div>\n                </div>\n\n\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default CardInfo","import React from 'react';\nimport {\n     Link\n} from \"react-router-dom\";\nimport Card from './Card';\nimport CardInfo from './CardInfo';\n\n\nfunction CardPage(props){\n\n    const [card,setCard] = React.useState(\"\");\n\n\n\n\n    React.useEffect(()=>{\n\n        const abortController = new AbortController();\n        const signal  =abortController.signal;\n\n\n        function handleStatusChange(status) {\n            setCard(status)\n        }\n\n        const unsubscribe = ()=>{\n\n\n            fetch(\"https://swdestinydb.com/api/public/cards/\", {signal:signal})\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n\n                    let cardMain = data.filter(crd=>{\n                        return props.match.params.id===crd.code;\n                    });\n\n                    handleStatusChange(cardMain[0]);\n                }).catch(ex=> console.log())\n        };\n\n        unsubscribe();\n\n\n        return function cleanup(){\n            unsubscribe();\n            abortController.abort();\n        };\n\n    },[props.match.params.id]);\n\n    const code = card.code;\n\n\n    return (\n        <Link className={props.match.params.id ? \"cardPageWrapper\" : undefined} to={\"/\"}>\n            {/*<div className={\"mw\"}>*/}\n            <Card  name={card.name} imagesrc={card.imagesrc} code={card.code} loadColor={\"white\"}/>\n            {code&&<CardInfo crd={card} code={code}/>}\n            {/*</div>*/}\n        </Link>\n    )\n}\n\nexport default CardPage;","import React from 'react';\nimport {setName} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\n\nfunction Search(props) {\n\n    const [text, setText] = React.useState(\"\");\n\n\n    const handleChange = event => {\n        setText(event.target.value);\n        props.setName(text);\n    };\n\n\n\n\n    return (\n        <input placeholder={\"Search for a Card by Name...\"} onChange={handleChange} className={\"search\"}/>\n\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        displayedSet: state.displayedSet,\n        itemLimit: state.itemLimit,\n        setLimit: state.setLimit,\n        sorted:state.sorted\n    }\n};\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        setName: (name) => {\n            dispatch(setName(name))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport {toggleOptions, clearOptions} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\n\nimport Search from '../input/Search';\nimport Logo from '../../assets/logo.png';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSearch, faTimes} from '@fortawesome/free-solid-svg-icons';\n\nfunction Nav(props) {\n\n    return (\n\n\n        <nav>\n            <div className={\"logo\"} onClick={()=>props.clearOptions()}><img alt={\"logo\"} src={Logo}/></div>\n            <Search/>\n            <div className={\"ham\"} onClick={() => props.toggleOptions()}>\n\n                {!props.options && <FontAwesomeIcon icon={faSearch} size=\"2x\"/>}\n                {props.options && <FontAwesomeIcon icon={faTimes} size=\"2x\"/>}\n            </div>\n\n        </nav>\n\n\n    );\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        options: state.options\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleOptions: () => {\n            dispatch(toggleOptions())\n        },\n        clearOptions:()=>{\n            dispatch(clearOptions())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","import React from 'react';\nimport {setSort} from \"../../redux/actions/setActions\";\nimport {connect} from \"react-redux\";\n\nfunction OptionItem(props) {\n\n    let shower;\n\n    const toggleReturn = (prop, val) => {\n        return !(props.sorted[prop].toggle && props.sorted[prop].val === val);\n    };\n\n    const handleSort = (prop, val) => {\n        props.setSort(prop, toggleReturn(prop, val), val)\n    };\n\n    if (props.sorted[props.type].val === props.value && props.sorted[props.type].toggle) {\n        shower = {\n            \"backgroundColor\": \"#343740\"\n        }\n    }\n\n    const numberCheck = () => {\n        if (isNaN(props.value)) {\n            return props.value.charAt(0).toUpperCase() + props.value.substring(1)\n        } else {\n            return props.value\n        }\n    };\n\n\n    return (\n        <div className={\"item\"} style={shower} onClick={() => handleSort(props.type, props.value)}>{numberCheck()}</div>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSort: (prop, toggle, val) => {\n            dispatch(setSort(prop, toggle, val))\n        }\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionItem);","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faChevronUp, faChevronDown} from '@fortawesome/free-solid-svg-icons';\nimport OptionItem from './OptionItem';\n\nfunction Option (props){\n    const [drop, toggleDrop] = React.useState(false);\n\n    let shower;\n\n    if(drop){\n        shower={\n            \"minHeight\":\"\"+(25*props.opt.values.length)+\"px\",\n            \"maxHeight\":\"\"+(25*props.opt.values.length)+\"px\"\n        }\n    }else{\n        shower={\n            \"minHeight\":\"0px\",\n            \"maxHeight\":\"0px\"\n        }\n    }\n\n    let values = props.opt.values.map((op, idx)=>\n        <OptionItem key={idx} type={props.opt.type} value={op}/>\n    );\n\n    return(\n        <div className={\"option\"}>\n            <h3 className={\"optHead\"} onClick={()=>toggleDrop(!drop)}>\n                {props.opt.name}\n                {!drop && <FontAwesomeIcon icon={faChevronDown} />}\n                {drop && <FontAwesomeIcon icon={faChevronUp} />}\n            </h3>\n            <div className={\"listOpt\"} style={shower}>\n                {values}\n            </div>\n        </div>\n    );\n\n}\n\nexport default Option;","function returnSets(){\n    let sets=[];\n\n    fetch(\"https://swdestinydb.com/api/public/sets/\")\n        .then(response => {\n            return response.json();\n        })\n        .then((data) => {\n            data.map((itm)=>{\n                return sets.push(itm.name);\n            });\n            return sets;\n\n        }).catch(function () {\n        console.log(\"error loading sets\");\n    });\n\n    return sets;\n}\n\nexport const Sort = [\n\n    {\n      name: \"Affiliations\",\n      type: \"affiliation_code\",\n        values:[\"hero\", \"villain\", \"neutral\"]\n    },\n    {\n        name: \"Colors\",\n        type: \"faction_code\",\n        values:[\"red\", \"blue\", \"yellow\", \"gray\"]\n    },\n    {\n        name: \"Rarity\",\n        type: \"rarity_name\",\n        values:[\"Starter\", \"Common\", \"Uncommon\", \"Rare\", \"Legendary\"]\n    },\n    {\n        name:\"Health\",\n        type:\"health\",\n        values:[4,5,6,7,8,9,10,11,12,13,14,15]\n    },\n    {\n        name:\"Cost\",\n        type:\"cost\",\n        values:[0,1,2,3,4,5,6]\n    },\n    {\n        name:\"Set\",\n        type:\"set_name\",\n        values:returnSets()},\n    {\n        name:\"Points\",\n        type:\"points\",\n        values:[\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\"]\n    },\n    {\n        name:\"Type\",\n        type:\"type_code\",\n        values:[\"character\", \"upgrade\", \"support\", \"event\", \"downgrade\", \"plot\"]\n    }\n\n];","import React from 'react';\nimport {clearOptions} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\nimport Option from './Option';\nimport {Sort} from \"../../data/Sort\";\nimport Button from '../input/Button';\n\nfunction Options(props){\n\n    let show;\n\n    if(props.options){\n        show={\n            \"right\":\"0\"\n        }\n    }else{\n        show={\n            \"right\":\"-100%\"\n        }\n    }\n\n    let options = Sort.map((srt, idx)=>\n        <Option key={idx} opt={srt}/>\n    );\n\n\n    return (\n        <div className={\"options\"} style={show}>\n            <h1>Sort Cards</h1>\n            <div className={\"wrapper\"}>\n                {options}\n            </div>\n            <Button handleClick={() => props.clearOptions()} text={\"Clear Search Query\"}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        options:state.options\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n        clearOptions:()=>{\n            dispatch(clearOptions())\n        }\n    }\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options);\n","import React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage'\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n\n    return (\n\n        <div className=\"App\">\n            <Nav/>\n            <Options/>\n            <div className={\"mainWrapper\"}>\n                <Switch>\n                    <Route path=\"/\" component={List}/>\n                </Switch>\n            </div>\n            <Route path={\"/:id\"} component={CardPage}/>\n        </div>\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n\nconst initState = {\n    itemLimit: 10,\n    sorted:{\n        rarity_name: {toggle: false, val: \"Starter\"},\n        affiliation_code: {toggle: false, val: \"villain\"},\n        type_code: {toggle: false, val: \"character\"},\n        faction_code: {toggle: false, val: \"red\"},\n        set_name:{toggle:false,val:\"Way of the Force\"},\n        health: {toggle: false, val: 10},\n        cost: {toggle: false, val: 0},\n        points: {toggle: false, val: \"7\"}\n    },\n    name: \"\",\n    options:false\n\n\n};\n\nconst rootReducer = (state = initState, action) => {\n\n    if (action.type === 'INCREASE_LIMIT') {\n\n        let val = state.itemLimit;\n\n        val = val + 10;\n\n\n        return {\n            ...state,\n            itemLimit: val\n        }\n    }\n\n    if (action.type === 'SET_SORT') {\n        return {\n            ...state,\n            itemLimit:10,\n            sorted:{\n                ...state.sorted,\n                [action.prop]: {\n                    toggle: action.toggle,\n                    val: action.val\n                }\n            }\n\n        }\n\n    }\n\n    if(action.type === 'SET_NAME'){\n        return{\n            ...state,\n            name:action.name\n        }\n    }\n\n    if(action.type === 'TOGGLE_OPTIONS'){\n\n        return{\n            ...state,\n            options:!state.options\n        }\n    }\n\n    if(action.type === 'CLEAR_OPTIONS'){\n\n        return{\n            ...state,\n            itemLimit: 10,\n            sorted:{\n                rarity_name: {toggle: false, val: \"Starter\"},\n                affiliation_code: {toggle: false, val: \"villain\"},\n                type_code: {toggle: false, val: \"character\"},\n                faction_code: {toggle: false, val: \"red\"},\n                set_name:{toggle:false,val:\"Way of the Force\"},\n                health: {toggle: false, val: 10},\n                cost: {toggle: false, val: 0},\n                points: {toggle: false, val: \"7\"}\n            },\n            name: \"\",\n            options:false\n        }\n    }\n\n\n    return state;\n};\n\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {createStore} from 'redux';\nimport {Provider} from \"react-redux\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from \"./redux/reducers\";\nimport {HashRouter as Router} from \"react-router-dom\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n            <App/>\n        </Router>\n    </Provider>,\n\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}