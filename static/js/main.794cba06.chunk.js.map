{"version":3,"sources":["assets/convergencelogo.svg","assets sync /^/.//.*logo/.svg$","assets/awakeningslogo.svg","assets/legacieslogo.svg","components/card/Card.js","components/input/Button.js","components/main/List.js","redux/actions/setActions.js","components/card/Side.js","components/card/CardInfo.js","components/card/CardPage.js","components/input/Search.js","components/nav/Navigation.js","components/nav/OptionItem.js","components/nav/Option.js","data/Sort.js","components/nav/options.js","components/nav/StyleOption.js","data/Style.js","components/nav/StyleOptions.js","App.js","serviceWorker.js","redux/reducers/index.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","connect","state","style","props","React","useState","load","updateLoading","img","error","rend","rendElement","seconds","setSeconds","useEffect","interval","setInterval","imagesrc","clearInterval","className","bod","color","bodyText","name","alt","onLoad","onError","src","icon","faSpinner","spin","size","loadColor","faExclamationCircle","navText","backgroundColor","nav","onClick","handleClick","bind","this","text","displayedSet","itemLimit","setLimit","sorted","dispatch","changeLimit","type","cardEle","cards","setCards","sort","setSort","setLoad","setError","sortObject","sortedList","p","toggle","i","filter","crd","points","split","includes","val","length","ret","hasOwnProperty","v","sides","toLowerCase","toUpperCase","fetch","then","response","json","data","catch","slice","idx","to","key","button","Side","finished","setVal","sd","setClass","isNaN","dangerouslySetInnerHTML","__html","CardInfo","format","restricted","balance","legal","rst","setRst","abortController","AbortController","signal","formats","fm","sets","set_code","push","abort","is_unique","health","faHeart","cost","type_name","undefined","subtypes","sb","has_errata","replace","flavor","affiliation_name","rarity_name","faction_code","set_name","position","CardPage","card","setCard","unsubscribe","status","cardMain","match","params","setName","placeholder","onChange","event","target","value","options","styles","toggleOptions","clearOptions","toggleStyles","require","faPalette","faTimes","faSearch","prop","shower","handleSort","toggleReturn","charAt","substring","drop","toggleDrop","opt","values","op","faChevronDown","faChevronUp","Sort","itm","console","log","returnSets","show","srt","setStyles","active","Styles","body","JSON","parse","localStorage","getItem","setValue","setItem","stringify","document","documentElement","path","component","List","Boolean","window","location","hostname","initState","affiliation_code","type_code","rootReducer","action","orgArray","ind","indexOf","splice","togg","store","createStore","ReactDOM","render","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,6C,iGCA3C,IAAIC,EAAM,CACT,uBAAwB,GACxB,wBAAyB,GACzB,qBAAsB,IAIvB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,I,mBCxBpBL,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,gIC+E3C,IAMec,eANS,SAACC,GACrB,MAAO,CACHC,MAAMD,EAAMC,SAILF,EAjFf,SAAcG,GAAQ,IAAD,EAEaC,IAAMC,SAAS,WAF5B,mBAEVC,EAFU,KAEJC,EAFI,OAGWH,IAAMC,SAAS,CACvCG,KAAI,EACJF,MAAK,EACLG,OAAM,IANO,mBAGVC,EAHU,KAGJC,EAHI,OAQaP,IAAMC,SAAS,GAR5B,mBAQVO,EARU,KAQDC,EARC,KA2DjB,OAhDAT,IAAMU,WAAU,WACZ,IAAIC,EAoCJ,OAlCIA,EAAWC,aAAY,WACnBH,GAAW,SAAAD,GAAO,OAAIA,EAAU,KAC5BN,EACoB,OAAjBH,EAAMc,SACLN,EAAY,CACRH,KAAI,EACJF,MAAK,EACLG,OAAM,IAGVE,EAAY,CACRH,KAAI,EACJF,MAAK,EACLG,OAAM,IAMVE,EADDC,EAAQ,EACK,CACRJ,KAAI,EACJF,MAAK,EACLG,OAAM,GAGE,CACRD,KAAI,EACJF,MAAK,EACLG,OAAM,MAInB,KAEA,kBAAMS,cAAcH,MAC5B,CAACH,EAASN,EAAMH,EAAMc,WAWrB,yBAAKE,UAAW,QACXhB,EAAMiB,KAAK,wBAAIlB,MAAO,CAACmB,MAAMlB,EAAMD,MAAMoB,WAAYnB,EAAMoB,MAC5D,yBAAKJ,UAAW,eACXT,EAAKF,KAAO,yBAAKgB,IAAKrB,EAAMoB,KAAME,OAZvB,WACpBlB,GAAc,IAWsDmB,QAR/C,WACrBnB,GAAc,IAOiFoB,IAAKxB,EAAMc,WAClG,6BACKP,EAAKJ,MAAM,kBAAC,IAAD,CAAiBsB,KAAMC,IAAWC,MAAI,EAACC,KAAM,KAAM7B,MAAO,CAACmB,MAAMlB,EAAM6B,aAClFtB,EAAKD,OAAO,kBAAC,IAAD,CAAiBmB,KAAMK,IAAqB/B,MAAO,CAACmB,MAAM,OAAQU,KAAM,aCrDzG,IAMe/B,eANS,SAACC,GACrB,MAAO,CACHC,MAAMD,EAAMC,SAILF,EApBf,SAAgBG,GAEZ,IAAID,EAAQ,CACRmB,MAAMlB,EAAMD,MAAMgC,QAClBC,gBAAgBhC,EAAMD,MAAMkC,KAGhC,OACI,yBAAKjB,UAAW,SAAUjB,MAAOA,EAAOmC,QAASlC,EAAMmC,YAAYC,KAAKC,OACnErC,EAAMsC,S,QCsInB,IAmBezC,eAnBS,SAACC,GACrB,MAAO,CACHyC,aAAczC,EAAMyC,aACpBC,UAAW1C,EAAM0C,UACjBC,SAAU3C,EAAM2C,SAChBC,OAAQ5C,EAAM4C,OACdtB,KAAMtB,EAAMsB,KACZrB,MAAOD,EAAMC,UAIM,SAAC4C,GACxB,MAAO,CACHC,YAAa,WACTD,EC/JD,CACHE,KAAM,uBDmKChD,EA9Jf,SAAcG,GAAQ,IAoGd8C,EApGa,EAES7C,IAAMC,SAAS,IAFxB,mBAEV6C,EAFU,KAEHC,EAFG,OAGO/C,IAAMC,SAAS,IAHtB,mBAGV+C,EAHU,KAGJC,EAHI,OAIOjD,IAAMC,UAAS,GAJtB,mBAIVC,EAJU,KAIJgD,EAJI,OAKSlD,IAAMC,UAAS,GALxB,mBAKVI,EALU,KAKH8C,EALG,KAgIjB,OAvHAnD,IAAMU,WAAU,WAmBZ,SAAS0C,IAEL,IAAIC,EAAaP,EAFC,WAITQ,GAGL,GAAIvD,EAAM0C,OAAOa,GAAGC,OAEhB,GAAU,WAAND,EAEA,IAFiB,IAAD,WAEPE,GACLH,EAAaA,EAAWI,QAAO,SAAAC,GAE3B,OAAuB,OAAfA,EAAIC,QAAmBD,EAAIC,OAAOC,MAAM,KAAKC,SAAS,GAAK9D,EAAM0C,OAAOkB,OAAOG,IAAIN,IAAYE,EAAM,SAH5GF,EAAI,EAAGA,EAAIzD,EAAM0C,OAAOkB,OAAOG,IAAIC,OAAQP,IAAM,EAAjDA,QAQN,GAAU,UAANF,EAEP,IAFuB,IAAD,WAEbE,GAELH,EAAaA,EAAWI,QAAO,SAAAC,GAC3B,IAAIM,GAAK,EACT,GAAIN,EAAIO,eAAe,SACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAIS,MAAMJ,OAAQG,IAC/BR,EAAIS,MAAMD,GAAGL,SAAS9D,EAAM0C,OAAO0B,MAAML,IAAIN,MAC7CQ,GAAI,GAIf,OAAQA,EAAMN,EAAM,SAXnBF,EAAI,EAAGA,EAAIzD,EAAM0C,OAAO0B,MAAML,IAAIC,OAAQP,IAAM,EAAhDA,QAkBTH,EAAaA,EAAWI,QAAO,SAAAC,GAE3B,OAAO3D,EAAM0C,OAAOa,GAAGQ,IAAID,SAASH,EAAIJ,QArCxD,IAAK,IAAIA,KAAKvD,EAAM0C,OAAS,EAApBa,GA6CU,KAAfvD,EAAMoB,OACNkC,EAAaA,EAAWI,QAAO,SAAAC,GAC3B,QAAIA,EAAIvC,KAAK0C,SAAS9D,EAAMoB,UAEjBuC,EAAIvC,KAAKiD,cAAcP,SAAS9D,EAAMoB,OAEnCuC,EAAIvC,KAAKkD,cAAcR,SAAS9D,EAAMoB,WAK5D8B,EAAQI,GAKZ,OA9EInD,GACAoE,MAAM,6CACDC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GACHxB,GAAQ,GAThBH,EAU2B2B,MACpBC,OAAM,WACTxB,GAAS,MAmEjBC,IAEO,WACHA,OAGL,CAACN,EAAO5C,EAAMH,EAAMoB,KAAMpB,EAAM0C,SAKf,IAAhBO,EAAKe,OACLlB,EAAUG,EAAK4B,MAAM,EAAG7E,EAAMwC,WAAWxD,KAAI,SAAC2E,EAAKmB,GAAN,OAGzC,kBAAC,IAAD,CAAMC,GAAI,IAAMpB,EAAIlE,KAAMuF,IAAKF,GAE3B,kBAAC,EAAD,CAAM1D,KAAMuC,EAAIvC,KAAMH,KAAK,EAAMH,SAAU6C,EAAI7C,SAAUrB,KAAMkE,EAAIlE,KAC7DoC,UAAW,gBAGjB1B,GAASG,EAEVH,IAASG,EAChBwC,EAAU,iDACH3C,GAAQG,IACfwC,EAAU,sEAJVA,EAAU,kDAiBV,yBAAK9B,UAAW,QACZ,yBAAKA,UAAW,WACX8B,GAXE,WACX,GAAI9C,EAAMwC,UAAYS,EAAKe,QAAUf,EAAKe,OAAS,GAC/C,OAAO,kBAAC,EAAD,CAAQ7B,YAAa,kBAAMnC,EAAM4C,eAAeN,KAAM,cAW5D2C,OE/BEC,MA5Gf,SAAclF,GAEV,IAAImF,EAEJ,SAASC,IACL,OAAGpF,EAAMqF,GAAGvB,SAAS,KACV,KAAK9D,EAAMqF,GAAG,GAChBrF,EAAMqF,GAAGvB,SAAS,MAChB,GAEA9D,EAAMqF,GAAG,GAIxB,SAASC,IACL,QAAGtF,EAAMqF,GAAGvB,SAAS,KAwFzB,OA9EQqB,EAFLnF,EAAMqF,GAAGvB,SAAS,MACdwB,IACY,2BAA2BF,IAAU,kDAErC,oBAAoBA,IAAU,kDAGxCpF,EAAMqF,GAAGvB,SAAS,MACpBwB,IACY,2BAA2BF,IAAU,kDAErC,oBAAoBA,IAAU,kDAGxCpF,EAAMqF,GAAGvB,SAAS,MACpBwB,IACY,2BAA2BF,IAAU,iDAErC,oBAAoBA,IAAU,iDAGxCpF,EAAMqF,GAAGvB,SAAS,MACpBwB,IACY,2BAA2BF,IAAU,oDAErC,oBAAoBA,IAAU,oDAGxCpF,EAAMqF,GAAGvB,SAAS,MACpBwB,IACY,2BAA2BF,IAAU,mDAErC,oBAAoBA,IAAU,mDAGxCpF,EAAMqF,GAAGvB,SAAS,MACpBwB,IACY,2BAA2BF,IAAU,mDAErC,oBAAoBA,IAAU,mDAGxCpF,EAAMqF,GAAGvB,SAAS,KACpBwB,IACY,2BAA2BF,IAAU,iDAErC,oBAAoBA,IAAU,iDAGxCpF,EAAMqF,GAAGvB,SAAS,MACZ,oBAAoBsB,IAAU,mDACpCpF,EAAMqF,GAAGvB,SAAS,KACpBwB,IACY,2BAA2BF,IAAU,oDAErC,oBAAoBA,IAAU,oDAIlC,+BAKXG,MAAMvF,EAAMqF,GAAGrF,EAAMqF,GAAGrB,OAAO,KAAmC,MAA9BhE,EAAMqF,GAAGrF,EAAMqF,GAAGrB,OAAO,KAEzDmB,EADDG,IACYH,EAAS,mCAAmCnF,EAAMqF,GAAGrF,EAAMqF,GAAGrB,OAAO,GAAG,0DAIxEmB,EAAS,4BAA4BnF,EAAMqF,GAAGrF,EAAMqF,GAAGrB,OAAO,GAAG,2DAWhF,yBAAKhD,UAAW,OAAQwE,wBAAyB,CAAEC,OAAQN,MCiFpDO,MArLf,SAAkB1F,GAAQ,IAAD,EAECC,IAAMC,SAAS,CAEjC,CACIyF,OAAQ,UACRC,YAAY,EACZC,QAAS,KACTC,OAAO,GAEX,CACIH,OAAQ,WACRC,YAAY,EACZC,QAAS,KACTC,OAAO,GAEX,CACIH,OAAQ,WACRC,YAAY,EACZC,QAAS,KACTC,OAAO,KApBM,mBAEdC,EAFc,KAETC,EAFS,OAwBO/F,IAAMC,SAAS,CACvC6F,KAAK,EACL5F,MAAM,EACNG,OAAO,IA3BU,mBAwBdC,EAxBc,KAwBRC,EAxBQ,KA+BrBP,IAAMU,WAAU,WAEZ,IAAMsF,EAAkB,IAAIC,gBACtBC,EAASF,EAAgBE,OAmD/B,OA1CI5B,MAAM,8CAA+C,CAAC4B,OAAQA,IACzD3B,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GACH,IAAIyB,EAAU,GAEdzB,EAAK3F,KAAI,SAACqH,GAEN,IAAIV,EAAS,CACTvE,KAAMiF,EAAGjF,KACTwE,YAAY,EACZC,QAAS,KACTC,OAAO,GAkBX,OAfI9F,EAAMP,QAAQ4G,EAAG1B,KAAKkB,UACtBF,EAAOE,QAAUQ,EAAG1B,KAAKkB,QAAQ7F,EAAMP,OAGvC4G,EAAG1B,KAAKiB,WAAW9B,SAAS9D,EAAMP,QAClCkG,EAAOC,YAAa,GAGpBS,EAAG1B,KAAK2B,KAAKxC,SAAS9D,EAAM2D,IAAI4C,YAChCZ,EAAOG,OAAQ,GAGnBtF,EAAY,CAACuF,KAAK,EAAM5F,MAAM,EAAOG,OAAO,IAGrC8F,EAAQI,KAAKb,MApChCK,EAwC2BI,MACpBxB,OAAM,kBAAMpE,EAAY,CAACuF,KAAK,EAAO5F,MAAM,EAAOG,OAAO,OAM7D,WACH2F,EAAgBQ,WAErB,CAACzG,EAAMP,KAAMO,EAAM2D,IAAI4C,WAE1B,IAAIH,EAAUL,EAAI/G,KAAI,SAACqH,EAAIvB,GAAL,OAClB,yBAAKE,IAAKF,EAAK9D,UAAW,UACtB,4BAAKqF,EAAGjF,MACR,wBAAIJ,UAAW,YAAaqF,EAAGT,WAAa,aAAe,MAC3D,4BAAKS,EAAGR,SACR,sCAAYQ,EAAGP,MAAQ,WAAa,kBAK5C,OACI,yBAAK9E,UAAW,YACZ,4BAAKhB,EAAM2D,IAAI+C,WAAa,UAAM1G,EAAM2D,IAAIvC,MAC3CpB,EAAM2D,IAAIgD,QAAU,4BAAI,kBAAC,IAAD,CAAiBlF,KAAMmF,IAAShF,KAAM,KAAM7B,MAAO,CAACmB,MAAO,SAA/D,IAA2ElB,EAAM2D,IAAIgD,QACzG3G,EAAM2D,IAAIkD,MAAQ,wBAAI7F,UAAW,QAAf,IAAwB,0BAAMA,UAAU,wBAAxC,IAAuEhB,EAAM2D,IAAIkD,KAAjF,KACnB,4BAAK7G,EAAM2D,IAAIC,QAAU,UAAW5D,EAAM2D,IAAIC,QAC9C,4BAAK5D,EAAM2D,IAAImD,WACf,yBAAK9F,UAAW,iBAAoC+F,IAAvB/G,EAAM2D,IAAIqD,UAA0BhH,EAAM2D,IAAIqD,SAAShI,KAAI,SAACiI,EAAInC,GAAL,OACpF,wBAAIE,IAAKF,GAAMmC,EAAG7F,KAAM0D,IAAS9E,EAAM2D,IAAIqD,SAAShD,OAAS,GAAM,SAEvE,yBAAKhD,UAAW,cAA8B+F,IAApB/G,EAAM2D,IAAIS,OAAuBpE,EAAM2D,IAAIS,MAAMpF,KAAI,SAACqG,EAAIP,GAAL,OAC3E,kBAAC,EAAD,CAAME,IAAKF,EAAKO,GAAIA,QAExB,yBAAKrE,UAAW,WACXT,EAAKwF,KAAOK,GAEjB,6BACK7F,EAAKJ,MAAQ,kBAAC,IAAD,CAAiBsB,KAAMC,IAAWC,MAAI,EAACC,KAAM,KAAM7B,MAAO,CAACmB,MAAOlB,EAAM6B,aACrFtB,EAAKD,OAAS,kBAAC,IAAD,CAAiBmB,KAAMK,IAAqB/B,MAAO,CAACmB,MAAO,OAAQU,KAAM,QAE5F,yBAAKZ,UAAW,QACZ,wBAAIA,UAAW,UAAWhB,EAAM2D,IAAIuD,YAAc,2BAChC,OAAjBlH,EAAM2D,IAAIrB,MAAa,uBAAGkD,wBAAyB,CAACC,OAAQzF,EAAM2D,IAAIrB,KAAK6E,QAAQ,YAAa,4CAC9DA,QAAQ,cAAe,8CACtBA,QAAQ,eAAgB,+CACvBA,QAAQ,YAAa,4CACxBA,QAAQ,aAAc,6CACrBA,QAAQ,cAAe,8CACtBA,QAAQ,YAAa,4CACvBA,QAAQ,cAAe,8CACrBA,QAAQ,aAAc,6CACvBA,QAAQ,eAAgB,+CACtBA,QAAQ,YAAa,4CACxBA,QAAQ,wBAAyB,uFAEjCA,QAAQ,wBAAyB,uFAEjCA,QAAQ,wBAAyB,uFAEjCA,QAAQ,oCAAqC,kIAG1CA,QAAQ,qCAAsC,kIAG9CA,QAAQ,OAAQ,0CACpBA,QAAQ,SAAU,4CAChBA,QAAQ,QAAS,2CAClBA,QAAQ,QAAS,2CACjBA,QAAQ,QAAS,2CACjBA,QAAQ,QAAS,2CACjBA,QAAQ,QAAS,2CACjBA,QAAQ,SAAU,4CACjBA,QAAQ,QAAS,2CAClBA,QAAQ,QAAS,4CACfnG,UAAW,YAE/C,2BAAuB,OAAnBhB,EAAM2D,IAAIyD,QAAgBpH,EAAM2D,IAAIyD,OAAOD,QAAQ,SAAU,KAAKA,QAAQ,UAAW,KAEzF,yBAAKnG,UAAW,UACZ,yBAAKA,UAAW,QAAQhB,EAAM2D,IAAI0D,kBAAmBrH,EAAM2D,IAAI0D,kBAE/D,yBAAKrG,UAAW,MAAMhB,EAAM2D,IAAI2D,aAActH,EAAM2D,IAAI2D,aAExD,yBAAKtG,UAAW,QAAUjB,MAAO,CAC7BiC,gBAAgBhC,EAAM2D,IAAI4D,aAC1BrG,MAAO,UAENlB,EAAM2D,IAAI4D,aAAajD,eAE5B,yBAAKtD,UAAW,YAAY,0BAAMA,UAAW,iBAAiBhB,EAAM2D,IAAI4C,WAAkBvG,EAAM2D,IAAI6D,SAApG,KAAgHxH,EAAM2D,IAAI8D,cC3F/HC,MA3Ef,SAAkB1H,GAAO,IAAD,EAEGC,IAAMC,SAAS,IAFlB,mBAEbyH,EAFa,KAERC,EAFQ,OAIQ3H,IAAMC,SAAS,CACvCyD,KAAI,EACJxD,MAAK,EACLG,OAAM,IAPU,mBAIbC,EAJa,KAIPC,EAJO,KAapBP,IAAMU,WAAU,WAEZ,IAAMsF,EAAkB,IAAIC,gBACtBC,EAASF,EAAgBE,OAY/B,IAAM0B,EAAc,WAGhBtD,MAAM,4CAA6C,CAAC4B,OAAOA,IACtD3B,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GAEH,IAlBgBmD,EAkBZC,EAAWpD,EAAKjB,QAAO,SAAAC,GACvB,OAAO3D,EAAMgI,MAAMC,OAAO9I,KAAKwE,EAAIlE,QAnBvBqI,EAsBGC,EAAS,GArBpCvH,EAAY,CACRmD,KAAI,EACJxD,MAAK,EACLG,OAAM,IAEVsH,EAAQE,MAiBDlD,OAAM,kBAAKpE,EAAY,CAC1BmD,KAAI,EACJxD,MAAK,EACLG,OAAM,QAOd,OAHAuH,IAGO,WACHA,IACA5B,EAAgBQ,WAGtB,CAACzG,EAAMgI,MAAMC,OAAO9I,KAEtB,IAAMM,EAAOkI,EAAKlI,KAGlB,OACI,kBAAC,IAAD,CAAMuB,UAAWhB,EAAMgI,MAAMC,OAAO9I,GAAK,uBAAoB4H,EAAWhC,GAAI,KAEvExE,EAAKJ,MAAM,kBAAC,IAAD,CAAiBsB,KAAMC,IAAWC,MAAI,EAACC,KAAM,KAAM7B,MAAO,CAACmB,MAAMlB,EAAM6B,aAClFtB,EAAKD,OAAO,kBAAC,IAAD,CAAiBmB,KAAMK,IAAqB/B,MAAO,CAACmB,MAAM,OAAQU,KAAM,OAEpFrB,EAAKoD,KAAK,kBAAC,EAAD,CAAOvC,KAAMuG,EAAKvG,KAAMH,KAAK,EAAOH,SAAU6G,EAAK7G,SAAUrB,KAAMkI,EAAKlI,KAAMoC,UAAW,UACnGpC,GAAM,kBAAC,EAAD,CAAUkE,IAAKgE,EAAMlI,KAAMA,MC9D9C,IAiBeI,eAjBS,SAACC,GACrB,MAAO,CACHyC,aAAczC,EAAMyC,aACpBC,UAAW1C,EAAM0C,UACjBC,SAAU3C,EAAM2C,SAChBC,OAAO5C,EAAM4C,WAIM,SAACC,GACxB,MAAO,CACHuF,QAAS,SAAC9G,GACNuB,EJvBW,SAACvB,GACpB,MAAO,CACHyB,KAAM,WACNzB,KAAKA,GIoBQ8G,CAAQ9G,QAKdvB,EA9Bf,SAAgBG,GAOZ,OACI,2BAAOmI,YAAa,+BAAgCC,SANnC,SAAAC,GACjBrI,EAAMkI,QAAQG,EAAMC,OAAOC,QAKiDvH,UAAW,cC2B/F,IAsBenB,eAtBS,SAACC,GACrB,MAAO,CACH0I,QAAS1I,EAAM0I,QACfC,OAAO3I,EAAM2I,OACb1I,MAAMD,EAAMC,UAIO,SAAC4C,GACxB,MAAO,CACH+F,cAAe,WACX/F,EL3BD,CACHE,KAAM,oBK4BN8F,aAAa,WACThG,ELVD,CACHE,KAAM,mBKWN+F,aAAc,WACVjG,EL3BD,CACHE,KAAM,sBK+BChD,EAtDf,SAAaG,GAET,IAAID,EAAO,CACPmB,MAAMlB,EAAMD,MAAMgC,QAClBC,gBAAgBhC,EAAMD,MAAMkC,KAGhC,OAGI,yBAAKlC,MAAOA,GACR,yBAAKiB,UAAW,aACS+F,IAAnB/G,EAAMD,MAAMqB,KAAkB,yBAAKC,IAAK,OAAQG,IAAKqH,MAAQ,KAAkB7I,EAAMD,MAAMqB,KAAKiD,cAAc,YAAanC,QAAS,kBAAIlC,EAAM2I,kBAAkB,yBAAKtH,IAAK,OAAQG,IAAKqH,EAAQ,IAAuC3G,QAAS,kBAAIlC,EAAM2I,mBAE/P,kBAAC,EAAD,MACA,yBAAK3H,UAAW,QAEVhB,EAAMyI,QAAU,kBAAC,IAAD,CAAiBhH,KAAMqH,IAAWlH,KAAK,KAAKM,QAAS,kBAAMlC,EAAM4I,kBAClF5I,EAAMyI,QAAU,kBAAC,IAAD,CAAiBhH,KAAMsH,IAASnH,KAAK,KAAKM,QAAS,kBAAMlC,EAAM4I,mBAE9E5I,EAAMwI,SAAW,kBAAC,IAAD,CAAiB/G,KAAMuH,IAAUpH,KAAK,KAAKM,QAAS,kBAAMlC,EAAM0I,mBAClF1I,EAAMwI,SAAW,kBAAC,IAAD,CAAiB/G,KAAMsH,IAASnH,KAAK,KAAKM,QAAS,kBAAMlC,EAAM0I,wBCiCjG,IAgBe7I,eAhBS,SAACC,GACrB,MAAO,CACH4C,OAAQ5C,EAAM4C,OACd3C,MAAMD,EAAMC,UAIO,SAAC4C,GACxB,MAAO,CACHO,QAAS,SAAC+F,EAAMzF,EAAQO,GACpBpB,EN1DW,SAACsG,EAAMzF,EAAQO,GAClC,MAAO,CACHlB,KAAM,WACNoG,KAAMA,EACNzF,OAAQA,EACRO,IAAKA,GMqDQb,CAAQ+F,EAAMzF,EAAQO,QAM5BlE,EAzEf,SAAoBG,GAEhB,IAAIkJ,EAMEC,EAAa,SAACF,EAAMlF,GACtB/D,EAAMkD,QAAQ+F,EALG,SAACA,EAAMlF,GACxB,QAAS/D,EAAM0C,OAAOuG,GAAMzF,QAAUxD,EAAM0C,OAAOuG,GAAMlF,MAAQA,GAI7CqF,CAAaH,EAAMlF,GAAMA,IA0CjD,OAtCImF,EADAlJ,EAAM0C,OAAO1C,EAAM6C,MAAMkB,IAAID,SAAS9D,EAAMuI,QAAUvI,EAAM0C,OAAO1C,EAAM6C,MAAMW,OACtE,CACLxB,gBAAiBhC,EAAMD,MAAMgC,QAC7Bb,MAAMlB,EAAMD,MAAMkC,KAGb,CACLD,gBAAiBhC,EAAMD,MAAMkC,IAC7Bf,MAAMlB,EAAMD,MAAMgC,SAgCtB,yBAAKf,UAAW,OAAQjB,MAAOmJ,EAAQhH,QAAS,kBAAMiH,EAAWnJ,EAAM6C,KAAM7C,EAAMuI,SA3BlE,OAAdvI,EAAMuI,MACE,0BAAMvH,UAAU,qBACJ,OAAdhB,EAAMuI,MACJ,0BAAMvH,UAAU,qBACJ,OAAdhB,EAAMuI,MACJ,0BAAMvH,UAAU,oBACJ,OAAdhB,EAAMuI,MACJ,0BAAMvH,UAAU,uBACJ,OAAdhB,EAAMuI,MACJ,0BAAMvH,UAAU,sBACJ,OAAdhB,EAAMuI,MACJ,0BAAMvH,UAAU,sBACJ,MAAdhB,EAAMuI,MACJ,0BAAMvH,UAAU,oBACJ,OAAdhB,EAAMuI,MACJ,0BAAMvH,UAAU,sBACJ,MAAdhB,EAAMuI,MACJ,0BAAMvH,UAAU,oBACjBuE,MAAMvF,EAAMuI,OACXvI,EAAMuI,MAAMc,OAAO,GAAG/E,cAAgBtE,EAAMuI,MAAMe,UAAU,GAE5DtJ,EAAMuI,UCRzB,IAMe1I,eANS,SAACC,GACrB,MAAO,CACHC,MAAMD,EAAMC,SAILF,EA1Cf,SAAiBG,GAAO,IAGhBkJ,EAHe,EACQjJ,IAAMC,UAAS,GADvB,mBACZqJ,EADY,KACNC,EADM,KAMfN,EADDK,EACQ,CACH,UAAgB,GAAGvJ,EAAMyJ,IAAIC,OAAO1F,OAAQ,KAC5C,UAAgB,GAAGhE,EAAMyJ,IAAIC,OAAO1F,OAAQ,MAGzC,CACH,UAAY,MACZ,UAAY,OAIpB,IAAI0F,EAAS1J,EAAMyJ,IAAIC,OAAO1K,KAAI,SAAC2K,EAAI7E,GACnC,OAAO,kBAAC,EAAD,CAAYE,IAAKF,EAAKjC,KAAM7C,EAAMyJ,IAAI5G,KAAM0F,MAAOoB,OAG9D,OACI,yBAAK3I,UAAW,UACZ,wBAAIA,UAAW,UAAWjB,MAAO,CAACmB,MAAMlB,EAAMD,MAAMkC,KAAMC,QAAS,kBAAIsH,GAAYD,KAC9EvJ,EAAMyJ,IAAIrI,MACTmI,GAAQ,kBAAC,IAAD,CAAiB9H,KAAMmI,MAChCL,GAAQ,kBAAC,IAAD,CAAiB9H,KAAMoI,OAEpC,yBAAK7I,UAAW,UAAWjB,MAAOmJ,GAC7BQ,OCfV,IAAMI,EAAO,CAEhB,CACE1I,KAAM,eACNyB,KAAM,mBACJ6G,OAAO,CAAC,OAAQ,UAAW,YAE/B,CACItI,KAAM,SACNyB,KAAM,eACN6G,OAAO,CAAC,MAAO,OAAQ,SAAU,SAErC,CACItI,KAAM,SACNyB,KAAM,cACN6G,OAAO,CAAC,UAAW,SAAU,WAAY,OAAQ,cAErD,CACItI,KAAK,SACLyB,KAAK,SACL6G,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,KAEvC,CACItI,KAAK,OACLyB,KAAK,OACL6G,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAExB,CACItI,KAAK,MACLyB,KAAK,WACL6G,OAlDR,WACI,IAAIpD,EAAK,GAgBT,OAdA/B,MAAM,4CACDC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GAIH,OAHAA,EAAK3F,KAAI,SAAC+K,GACN,OAAOzD,EAAKE,KAAKuD,EAAI3I,SAElBkF,KAER1B,OAAM,WACToF,QAAQC,IAAI,yBAGT3D,EAiCI4D,IACX,CACI9I,KAAK,SACLyB,KAAK,SACL6G,OAAO,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAEhJ,CACItI,KAAK,OACLyB,KAAK,YACL6G,OAAO,CAAC,YAAa,UAAW,UAAW,QAAS,YAAa,SAErE,CACItI,KAAK,aACLyB,KAAK,QACL6G,OAAO,CAAC,KAAM,KAAK,KAAM,KAAM,KAAK,KAAM,IAAK,KAAK,OCvB5D,IAkBe7J,eAlBS,SAACC,GACrB,MAAO,CACH0I,QAAQ1I,EAAM0I,QACdzI,MAAMD,EAAMC,UAIO,SAAC4C,GACxB,MAAO,CAEHgG,aAAa,WACThG,ETTD,CACHE,KAAM,sBSeChD,EApDf,SAAiBG,GAEb,IAAImK,EAGAA,EADDnK,EAAMwI,QACA,CACD,MAAQ,IACRxG,gBAAgBhC,EAAMD,MAAMgC,QAC5Bb,MAAMlB,EAAMD,MAAMkC,KAGjB,CACD,MAAQ,QACRD,gBAAgBhC,EAAMD,MAAMgC,QAC5Bb,MAAMlB,EAAMD,MAAMkC,KAI1B,IAAIuG,EAAUsB,EAAK9K,KAAI,SAACoL,EAAKtF,GAAN,OACnB,kBAAC,EAAD,CAAQE,IAAKF,EAAK2E,IAAKW,OAI3B,OACI,yBAAKpJ,UAAW,UAAWjB,MAAOoK,GAC9B,yBAAKnJ,UAAW,OAAO,wBAAIjB,MAAO,CAACmB,MAAMlB,EAAMD,MAAMkC,MAA9B,eAAoD,kBAAC,EAAD,CAAQE,YAAa,kBAAMnC,EAAM2I,gBAAgBrG,KAAM,wBAClI,yBAAKtB,UAAW,WACXwH,OCLjB,IAce3I,eAdS,SAACC,GACrB,MAAO,CACHC,MAAOD,EAAMC,UAIM,SAAC4C,GACxB,MAAO,CACH0H,UAAW,SAACtK,GACR4C,EVJa,SAAC5C,GACtB,MAAO,CACH8C,KAAM,YACN9C,MAAMA,GUCOsK,CAAUtK,QAKhBF,EAvCf,SAAqBG,GAEjB,IAAIsK,EAgBJ,OAbIA,EADDtK,EAAMyJ,IAAIrI,OAAOpB,EAAMD,MAAMqB,KACrB,CACHY,gBAAgBhC,EAAMD,MAAMkC,IAC5Bf,MAAMlB,EAAMD,MAAMgC,SAGf,CACHC,gBAAgBhC,EAAMD,MAAMgC,QAC5Bb,MAAMlB,EAAMD,MAAMkC,KAQtB,yBAAKjB,UAAW,OAAQjB,MAAOuK,EAAQpI,QAAS,kBAAMlC,EAAMqK,UAAUrK,EAAMyJ,OAAOzJ,EAAMyJ,IAAIrI,SCxBxFmJ,EAAS,CAClB,CACInJ,KAAK,aACLa,IAAI,QACJuI,KAAK,QACLzI,QAAQ,QACRZ,SAAS,SAEb,CACIC,KAAK,WACLa,IAAI,MACJuI,KAAK,QACLzI,QAAQ,QACRZ,SAAS,OAEb,CACIC,KAAK,cACLa,IAAI,UACJuI,KAAK,UACLzI,QAAQ,QACRZ,SAAS,YCkBjB,IASetB,eATS,SAACC,GACrB,MAAO,CACH2I,OAAQ3I,EAAM2I,OACd1I,MAAOD,EAAMC,SAMNF,EA1Cf,SAAsBG,GAElB,IAAImK,EAGAA,EADAnK,EAAMyI,OACD,CACD,MAAQ,IACRzG,gBAAgBhC,EAAMD,MAAMkC,IAC5Bf,MAAMlB,EAAMD,MAAMgC,SAGjB,CACD,MAAQ,QACRC,gBAAgBhC,EAAMD,MAAMkC,IAC5Bf,MAAMlB,EAAMD,MAAMgC,SAI1B,IAAI0G,EAAS8B,EAAOvL,KAAI,SAACoL,EAAKtF,GAAN,OACpB,kBAAC,EAAD,CAAaE,IAAKF,EAAK2E,IAAKW,OAIhC,OACI,yBAAKpJ,UAAW,aAAcjB,MAAOoK,GACjC,yBAAKnJ,UAAW,OAAO,wBAAIjB,MAAO,CAACmB,MAAMlB,EAAMD,MAAMgC,UAA9B,iBACvB,yBAAKf,UAAW,WACXyH,O,QCejB,IAOe5I,eAPS,SAACC,GACrB,MAAO,CACHC,MAAMD,EAAMC,SAKLF,EAtCf,SAAaG,GAAQ,IAAD,EAEUC,IAAMC,SAC5BuK,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,IAHtC,mBAET7K,EAFS,KAEF8K,EAFE,KAehB,OATA5K,IAAMU,WAAU,WACZgK,aAAaG,QAAQ,aAAcL,KAAKM,UAAU/K,EAAMD,QACxD8K,EAAS7K,EAAMD,SAChB,CAACC,EAAMD,MAAOA,IAIjBiL,SAASC,gBAAgBlL,MAAMiC,gBAAgBhC,EAAMD,MAAMyK,KAIvD,yBAAKxJ,UAAU,MAAMjB,MAAO,CAACiC,gBAAiBjC,EAAMyK,OAChD,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKxJ,UAAW,cAAejB,MAAO,CAACmB,MAAMnB,EAAMoB,SAAUa,gBAAiBhC,EAAMD,MAAMyK,OACtF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOU,KAAK,IAAIC,UAAWC,MAGnC,kBAAC,IAAD,CAAOF,KAAM,OAAQC,UAAWzD,QC9BxB2D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxD,MACvB,2D,qkBChBN,IAAMyD,EAAY,CACdjJ,UAAW,GACXE,OAAO,CACH4E,YAAa,CAAC9D,QAAQ,EAAOO,IAAK,IAClC2H,iBAAkB,CAAClI,QAAQ,EAAOO,IAAK,IACvC4H,UAAW,CAACnI,QAAQ,EAAOO,IAAK,IAChCwD,aAAc,CAAC/D,QAAQ,EAAOO,IAAK,IACnCyD,SAAS,CAAChE,QAAO,EAAMO,IAAI,IAC3B4C,OAAQ,CAACnD,QAAQ,EAAOO,IAAK,IAC7B8C,KAAM,CAACrD,QAAQ,EAAOO,IAAK,IAC3BH,OAAQ,CAACJ,QAAQ,EAAOO,IAAK,IAC7BK,MAAM,CAACZ,QAAQ,EAAOO,IAAI,KAE9BhE,MAAM0K,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,GACxDxJ,KAAM,GACNoH,SAAQ,EACRC,QAAO,GAgHImD,EA1GK,WAAgC,IAA/B9L,EAA8B,uDAAtB2L,EAAWI,EAAW,uCAE/C,GAAoB,mBAAhBA,EAAOhJ,KAA2B,CAElC,IAAIkB,EAAMjE,EAAM0C,UAKhB,OAAO,EAAP,GACO1C,EADP,CAEI0C,UALJuB,GAAY,KAShB,GAAoB,aAAhB8H,EAAOhJ,KAAqB,CAE5B,IAAIiJ,EAAWhM,EAAM4C,OAAOmJ,EAAO5C,MAAMlF,IAEzC,GAAG+H,EAAShI,SAAS+H,EAAO9H,KAAK,CAC7B,IAAIgI,EAAMD,EAASE,QAAQH,EAAO9H,KAClC+H,EAASG,OAAOF,EAAI,QAGpBD,EAAStF,KAAKqF,EAAO9H,KAGzB,IAAImI,EAAOJ,EAAS9H,OAAS,EAE7B,OAAO,EAAP,GACOlE,EADP,CAEI0C,UAAU,GACVE,OAAO,EAAD,GACC5C,EAAM4C,OADP,eAEDmJ,EAAO5C,KAAO,CACXzF,OAAQ0I,EACRnI,IAAK+H,OAQrB,MAAmB,aAAhBD,EAAOhJ,KACN,KACO/C,EADP,CAEIsB,KAAKyK,EAAOzK,OAID,cAAhByK,EAAOhJ,MAENmI,SAASC,gBAAgBlL,MAAMiC,gBAAgB6J,EAAO9L,MAAMyK,KAE5D,KACO1K,EADP,CAEIC,MAAM8L,EAAO9L,SAIF,mBAAhB8L,EAAOhJ,KAEN,KACO/C,EADP,CAEI0I,SAAS1I,EAAM0I,QACfC,QAAO,IAII,kBAAhBoD,EAAOhJ,KAGN,KACO/C,EADP,CAEI2I,QAAQ3I,EAAM2I,OACdD,SAAQ,IAIG,kBAAhBqD,EAAOhJ,KAEN,KACO/C,EADP,CAEI0C,UAAW,GACXE,OAAO,CACH4E,YAAa,CAAC9D,QAAQ,EAAOO,IAAK,IAClC2H,iBAAkB,CAAClI,QAAQ,EAAOO,IAAK,IACvC4H,UAAW,CAACnI,QAAQ,EAAOO,IAAK,IAChCwD,aAAc,CAAC/D,QAAQ,EAAOO,IAAK,IACnCyD,SAAS,CAAChE,QAAO,EAAMO,IAAI,IAC3B4C,OAAQ,CAACnD,QAAQ,EAAOO,IAAK,IAC7B8C,KAAM,CAACrD,QAAQ,EAAOO,IAAK,IAC3BH,OAAQ,CAACJ,QAAQ,EAAOO,IAAK,IAC7BK,MAAM,CAACZ,QAAQ,EAAOO,IAAI,KAE9B3C,KAAM,GACNoH,SAAQ,IAKT1I,GCpHLqM,EAAQC,YAAYR,GAE1BS,IAASC,OAEL,kBAAC,IAAD,CAAUH,MAAOA,GACb,kBAAC,IAAD,CAAQI,SAAUC,+BACd,kBAAC,EAAD,QAIRxB,SAASyB,eAAe,SF6GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpI,MAAK,SAAAqI,GACjCA,EAAaC,kB","file":"static/js/main.794cba06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/convergencelogo.f7ca2921.svg\";","var map = {\n\t\"./awakeningslogo.svg\": 45,\n\t\"./convergencelogo.svg\": 26,\n\t\"./legacieslogo.svg\": 46\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 44;","module.exports = __webpack_public_path__ + \"static/media/awakeningslogo.519004a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/legacieslogo.f7ca2921.svg\";","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\nimport {connect} from \"react-redux\";\nfunction Card(props) {\n\n    const [load, updateLoading] = React.useState(\"loading\");\n    const [rend, rendElement] = React.useState({\n        img:false,\n        load:true,\n        error:false\n    });\n    const [seconds, setSeconds] = React.useState(0);\n\n\n    React.useEffect(() => {\n        let interval = null;\n\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds + 1);\n                if (load) {\n                    if(props.imagesrc===null){\n                        rendElement({\n                            img:false,\n                            load:false,\n                            error:true\n                        });\n                    }else{\n                        rendElement({\n                            img:true,\n                            load:false,\n                            error:false\n                        });\n                    }\n\n                } else {\n                    if(seconds>3){\n                        rendElement({\n                            img:false,\n                            load:false,\n                            error:true\n                        });\n                    }else{\n                        rendElement({\n                            img:false,\n                            load:true,\n                            error:false\n                        });\n                    }\n                }\n            }, 1000);\n\n        return () => clearInterval(interval);\n    }, [seconds, load, props.imagesrc]);\n\n    const handleImageLoad = () => {\n        updateLoading(true)\n    };\n\n    const handleImageError = () => {\n        updateLoading(false)\n    };\n\n    return (\n        <div className={\"card\"}>\n            {props.bod&&<h1 style={{color:props.style.bodyText}}>{props.name}</h1>}\n            <div className={\"cardWrapper\"}>\n                {rend.img && <img alt={props.name} onLoad={handleImageLoad} onError={handleImageError} src={props.imagesrc}/>}\n                <div>\n                    {rend.load&&<FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color:props.loadColor}}/>}\n                    {rend.error&&<FontAwesomeIcon icon={faExclamationCircle} style={{color:\"red\"}} size={\"6x\"}/>}\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style:state.style\n    }\n};\n\nexport default connect(mapStateToProps)(Card);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction Button(props){\n\n    let style = {\n        color:props.style.navText,\n        backgroundColor:props.style.nav\n    };\n\n    return (\n        <div className={\"button\"} style={style} onClick={props.handleClick.bind(this)} >\n            {props.text}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style:state.style\n    }\n};\n\nexport default connect(mapStateToProps)(Button);","import React from 'react';\nimport {changeLimit} from \"../../redux/actions/setActions\";\nimport Card from '../card/Card';\nimport {connect} from 'react-redux';\nimport Button from '../input/Button';\nimport {Link} from 'react-router-dom';\n\nfunction List(props) {\n\n    const [cards, setCards] = React.useState([]);\n    const [sort, setSort] = React.useState([]);\n    const [load, setLoad] = React.useState(true);\n    const [error, setError] = React.useState(false);\n\n\n\n    React.useEffect(() => {\n\n        function handleStatusChange(status) {\n            setCards(status)\n        }\n\n        if (load) {\n            fetch(\"https://swdestinydb.com/api/public/cards/\")\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    setLoad(false);\n                    handleStatusChange(data);\n                }).catch(function () {\n                setError(true);\n            });\n        }\n\n        function sortObject() {\n\n            let sortedList = cards;\n\n            for (let p in props.sorted) {\n\n\n                if (props.sorted[p].toggle) {\n\n                    if (p === \"points\") {\n\n                        for (let i = 0; i < props.sorted.points.val.length; i++) {\n                            sortedList = sortedList.filter(crd => {\n\n                                return (crd.points !== null && crd.points.split(\"/\").includes(\"\" + props.sorted.points.val[i] + \"\")) ? crd : null\n                            });\n                        }\n\n\n                    } else if (p === \"sides\") {\n\n                        for (let i = 0; i < props.sorted.sides.val.length; i++) {\n\n                            sortedList = sortedList.filter(crd => {\n                                let ret =false;\n                                if (crd.hasOwnProperty('sides')) {\n                                    for (let v = 0; v < crd.sides.length; v++) {\n                                        if(crd.sides[v].includes(props.sorted.sides.val[i])){\n                                           ret=true\n                                        }\n                                    }\n                                }\n                                return (ret ? crd : null)\n\n                            });\n                        }\n\n\n                    } else {\n                        sortedList = sortedList.filter(crd => {\n\n                            return props.sorted[p].val.includes(crd[p])\n\n                        });\n                    }\n                }\n            }\n\n\n            if (props.name !== '') {\n                sortedList = sortedList.filter(crd => {\n                    if (crd.name.includes(props.name)) {\n                        return true\n                    } else if (crd.name.toLowerCase().includes(props.name)) {\n                        return true\n                    } else return crd.name.toUpperCase().includes(props.name);\n                });\n            }\n\n\n            setSort(sortedList)\n        }\n\n        sortObject();\n\n        return ()=>{\n            sortObject();\n        }\n\n    }, [cards, load, props.name, props.sorted]);\n\n\n    let cardEle;\n\n    if (sort.length !== 0) {\n        cardEle = sort.slice(0, props.itemLimit).map((crd, idx) =>\n\n\n            <Link to={\"/\" + crd.code} key={idx}>\n\n                <Card name={crd.name} bod={true} imagesrc={crd.imagesrc} code={crd.code}\n                      loadColor={\"#343740\"}/>\n            </Link>\n        );\n    } else if (!load && !error) {\n        cardEle = <h1>No cards in search</h1>;\n    } else if (load && !error) {\n        cardEle = <h1>Fetching Cards...</h1>;\n    } else if (load && error) {\n        cardEle = <h1>Loading Cards failed. Refresh page...</h1>;\n    }\n\n\n    const button = () => {\n        if (props.itemLimit < sort.length && sort.length > 10) {\n            return <Button handleClick={() => props.changeLimit()} text={\"Load More\"}/>\n        }\n    };\n\n\n    return (\n\n        <div className={\"list\"}>\n            <div className={\"wrapper\"}>\n                {cardEle}\n            </div>\n            {button()}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        displayedSet: state.displayedSet,\n        itemLimit: state.itemLimit,\n        setLimit: state.setLimit,\n        sorted: state.sorted,\n        name: state.name,\n        style: state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeLimit: () => {\n            dispatch(changeLimit())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","export const changeLimit = () => {\n    return {\n        type: 'INCREASE_LIMIT'\n    }\n};\n\nexport const setName = (name) => {\n    return {\n        type: 'SET_NAME',\n        name:name\n    }\n};\n\nexport const setSort = (prop, toggle, val) => {\n    return {\n        type: 'SET_SORT',\n        prop: prop,\n        toggle: toggle,\n        val: val\n    }\n};\n\nexport const toggleOptions = () => {\n    return {\n        type: 'TOGGLE_OPTIONS'\n    }\n};\n\nexport const toggleStyles = () => {\n    return {\n        type: 'TOGGLE_STYLES'\n    }\n};\n\nexport const setStyles = (style) => {\n    return {\n        type: 'SET_STYLE',\n        style:style\n\n    }\n};\n\nexport const clearOptions = () =>{\n    return {\n        type: 'CLEAR_OPTIONS'\n    }\n};","import React from 'react';\n\nfunction Side(props){\n\n    let finished;\n\n    function setVal (){\n        if(props.sd.includes(\"+\")){\n            return \"+ \"+props.sd[1];\n        }else if(props.sd.includes(\"Sp\")){\n            return \"\";\n        }else{\n            return props.sd[0];\n        }\n    }\n\n    function setClass(){\n        if(props.sd.includes(\"+\")){\n            return true\n        }else{\n            return false\n        }\n    }\n\n\n    if(props.sd.includes(\"RD\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-ranged '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-ranged '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Sh\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-shield '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-shield '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"MD\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-melee '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-melee '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"ID\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-indirect '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-indirect '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Dc\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-discard '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-discard '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Dr\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-disrupt '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-disrupt '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"F\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-focus '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-focus '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Sp\")){\n        finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-special '></span></span>\";\n    }else if(props.sd.includes(\"R\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-resource '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-resource '></span></span>\";\n        }\n\n    }else{\n        finished = \"<span class='blank'>-</span>\"\n    }\n\n\n\n    if(!isNaN(props.sd[props.sd.length-1])&&props.sd[props.sd.length-1]!==\"-\"){\n        if(setClass()){\n            finished = finished+\"<span class='res modify'> <span>\"+props.sd[props.sd.length-1]+\"</span> <span\" +\n                \" class='icon\" +\n                \" icon-resource'></span></span>\"\n        }else{\n            finished = finished+\"<span class='res'> <span>\"+props.sd[props.sd.length-1]+\"</span> <span\" +\n                \" class='icon\" +\n                \" icon-resource'></span></span>\"\n        }\n\n    }\n\n\n\n\n    return(\n        <div className={\"side\"} dangerouslySetInnerHTML={{ __html: finished }}></div>\n    )\n}\n\nexport default Side","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle, faHeart} from '@fortawesome/free-solid-svg-icons';\nimport Side from './Side';\n\n\nfunction CardInfo(props) {\n\n    const [rst, setRst] = React.useState([\n\n        {\n            format: \"trilogy\",\n            restricted: false,\n            balance: \"--\",\n            legal: false\n        },\n        {\n            format: \"standard\",\n            restricted: false,\n            balance: \"--\",\n            legal: false\n        },\n        {\n            format: \"infinite\",\n            restricted: false,\n            balance: \"--\",\n            legal: true\n        }\n    ]);\n\n    const [rend, rendElement] = React.useState({\n        rst: false,\n        load: true,\n        error: false\n    });\n\n\n    React.useEffect(() => {\n\n        const abortController = new AbortController();\n        const signal = abortController.signal;\n\n\n        function handleStatusChange(status) {\n            setRst(status);\n        }\n\n        const unsubscribe = () => {\n\n            fetch(\"https://swdestinydb.com/api/public/formats/\", {signal: signal})\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    let formats = [];\n\n                    data.map((fm) => {\n\n                        let format = {\n                            name: fm.name,\n                            restricted: false,\n                            balance: \"--\",\n                            legal: false\n                        };\n\n                        if (props.code in fm.data.balance) {\n                            format.balance = fm.data.balance[props.code];\n                        }\n\n                        if (fm.data.restricted.includes(props.code)) {\n                            format.restricted = true;\n                        }\n\n                        if (fm.data.sets.includes(props.crd.set_code)) {\n                            format.legal = true;\n                        }\n\n                        rendElement({rst: true, load: false, error: false});\n\n\n                        return formats.push(format);\n\n                    });\n\n                    handleStatusChange(formats);\n                }).catch(() => rendElement({rst: false, load: false, error: true}))\n        };\n\n        unsubscribe();\n\n\n        return function cleanup() {\n            abortController.abort();\n        };\n    }, [props.code, props.crd.set_code]);\n\n    let formats = rst.map((fm, idx) =>\n        <div key={idx} className={\"format\"}>\n            <h3>{fm.name}</h3>\n            <h5 className={\"restrict\"}>{fm.restricted ? \"Restricted\" : null}</h5>\n            <h3>{fm.balance}</h3>\n            <h6>Legal: {fm.legal ? \"Playable\" : \"Unplayable\"}</h6>\n        </div>\n    );\n\n\n    return (\n        <div className={\"cardInfo\"}>\n            <h1>{props.crd.is_unique && \"◆ \"}{props.crd.name}</h1>\n            {props.crd.health && <h2><FontAwesomeIcon icon={faHeart} size={\"lg\"} style={{color: \"red\"}} /> {props.crd.health}</h2>}\n            {props.crd.cost && <h2 className={\"cost\"}> <span className='icon icon-resource '></span> {props.crd.cost} </h2>}\n            <h2>{props.crd.points && \"Points:\"}{props.crd.points}</h2>\n            <h2>{props.crd.type_name}</h2>\n            <div className={\"subtypes\"}>{props.crd.subtypes !== undefined && props.crd.subtypes.map((sb, idx) =>\n                <h3 key={idx}>{sb.name}{idx !== (props.crd.subtypes.length - 1) && \"-\"}</h3>\n            )}</div>\n            <div className={\"sides\"}>{props.crd.sides !== undefined && props.crd.sides.map((sd, idx) =>\n                <Side key={idx} sd={sd}/>\n            )}</div>\n            <div className={\"formats\"}>\n                {rend.rst && formats}\n            </div>\n            <div>\n                {rend.load && <FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color: props.loadColor}}/>}\n                {rend.error && <FontAwesomeIcon icon={faExclamationCircle} style={{color: \"red\"}} size={\"6x\"}/>}\n            </div>\n            <div className={\"text\"}>\n                <h3 className={\"errata\"}>{props.crd.has_errata && \"This card has an errata\"}</h3>\n                {props.crd.text!==null&&<p dangerouslySetInnerHTML={{__html: props.crd.text.replace(\"[special]\", \"<span class='icon\" +\n                        \" icon-special '></span>\").replace(\"([special])\", \"(<span class='icon\" +\n                        \" icon-special '></span>)\").replace(\"([indirect])\", \"(<span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"([melee])\", \"(<span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>)\").replace(\"([discard])\", \"(<span class='icon\" +\n                        \" icon-discard '></span>)\").replace(\"([focus])\", \"(<span class='icon\" +\n                        \" icon-focus '></span>)\").replace(\"([disrupt])\", \"(<span class='icon\" +\n                        \" icon-disrupt '></span>)\").replace(\"([shield])\", \"(<span class='icon\" +\n                        \" icon-shield '></span>)\").replace(\"([resource])\", \"(<span class='icon\" +\n                        \" icon-resource '></span>)\").replace(\"([blank])\", \"(<span class='icon\" +\n                        \" icon-blank '></span>)\").replace(\"([ranged] or [melee])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([melee] or [ranged])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged] or [melee])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged], [melee] or [indirect])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>, <span class='icon\" +\n                        \" icon-melee '></span> or <span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"([ranged], [melee], or [indirect])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>, <span class='icon\" +\n                        \" icon-melee '></span> or <span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"[AW]\", \"<span class='icon\" +\n                        \" icon-set-AW'></span>\").replace(\"[WotF]\", \"<span class='icon\" +\n                        \" icon-set-WotF'></span>\").replace(\"[RIV]\", \"<span class='icon\" +\n                        \" icon-set-RIV'></span>\").replace(\"[SoR]\", \"<span class='icon\" +\n                        \" icon-set-SoR'></span>\").replace(\"[LEG]\", \"<span class='icon\" +\n                        \" icon-set-LEG'></span>\").replace(\"[EaW]\", \"<span class='icon\" +\n                        \" icon-set-EaW'></span>\").replace(\"[AtG]\", \"<span class='icon\" +\n                        \" icon-set-AtG'></span>\").replace(\"[CONV]\", \"<span class='icon\" +\n                        \" icon-set-CONV'></span>\").replace(\"[AoN]\", \"<span class='icon\" +\n                        \" icon-set-AoN'></span>\").replace(\"[SoH]\", \"<span class='icon\" +\n                        \" icon-set-SoH'></span>\")}} className={\"effects\"}></p>}\n\n                <i>{props.crd.flavor!==null&& props.crd.flavor.replace(\"<cite>\", \"-\").replace(\"</cite>\", \"\")}</i>\n\n                <div className={\"bottom\"}>\n                    <div className={\"affl \"+props.crd.affiliation_name}>{props.crd.affiliation_name}</div>\n\n                    <div className={\"rr \"+props.crd.rarity_name}>{props.crd.rarity_name}</div>\n\n                    <div className={\"color\" } style={{\n                        backgroundColor:props.crd.faction_code,\n                        color: \"black\"\n                    }}>\n                        {props.crd.faction_code.toUpperCase()}\n                    </div>\n                    <div className={\"setStuff\"}><span className={\"icon icon-set-\"+props.crd.set_code}></span>{props.crd.set_name}: {props.crd.position}</div>\n                </div>\n\n\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default CardInfo","import React from 'react';\nimport {\n    Link\n} from \"react-router-dom\";\nimport Card from './Card';\nimport CardInfo from './CardInfo';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\n\n\nfunction CardPage(props){\n\n    const [card,setCard] = React.useState(\"\");\n\n    const [rend, rendElement] = React.useState({\n        crd:false,\n        load:true,\n        error:false\n    });\n\n\n\n\n    React.useEffect(()=>{\n\n        const abortController = new AbortController();\n        const signal  =abortController.signal;\n\n\n        function handleStatusChange(status) {\n            rendElement({\n                crd:true,\n                load:false,\n                error:false\n            });\n            setCard(status)\n        }\n\n        const unsubscribe = ()=>{\n\n\n            fetch(\"https://swdestinydb.com/api/public/cards/\", {signal:signal})\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n\n                    let cardMain = data.filter(crd=>{\n                        return props.match.params.id===crd.code;\n                    });\n\n                    handleStatusChange(cardMain[0]);\n                }).catch(()=> rendElement({\n                crd:false,\n                load:false,\n                error:true\n            }))\n        };\n\n        unsubscribe();\n\n\n        return function cleanup(){\n            unsubscribe();\n            abortController.abort();\n        };\n\n    },[props.match.params.id]);\n\n    const code = card.code;\n\n\n    return (\n        <Link className={props.match.params.id ? \"cardPageWrapper\" : undefined} to={\"/\"}>\n\n            {rend.load&&<FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color:props.loadColor}}/>}\n            {rend.error&&<FontAwesomeIcon icon={faExclamationCircle} style={{color:\"red\"}} size={\"6x\"}/>}\n\n            {rend.crd&&<Card  name={card.name} bod={false} imagesrc={card.imagesrc} code={card.code} loadColor={\"white\"}/>}\n            {code&&<CardInfo crd={card} code={code}/>}\n\n        </Link>\n    )\n}\n\nexport default CardPage;","import React from 'react';\nimport {setName} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\n\nfunction Search(props) {\n\n    const handleChange = event => {\n        props.setName(event.target.value);\n\n    };\n\n    return (\n        <input placeholder={\"Search for a Card by Name...\"} onChange={handleChange} className={\"search\"}/>\n\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        displayedSet: state.displayedSet,\n        itemLimit: state.itemLimit,\n        setLimit: state.setLimit,\n        sorted:state.sorted\n    }\n};\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        setName: (name) => {\n            dispatch(setName(name))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport {toggleOptions, clearOptions, toggleStyles} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\nimport Search from '../input/Search';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSearch, faTimes, faPalette} from '@fortawesome/free-solid-svg-icons';\n\nfunction Nav(props) {\n\n    let style= {\n        color:props.style.navText,\n        backgroundColor:props.style.nav\n    };\n\n    return (\n\n\n        <nav style={style}>\n            <div className={\"logo\"} >\n                {(props.style.name!==undefined)?<img alt={\"logo\"} src={require(\"./../../assets/\"+props.style.name.toLowerCase()+\"logo.svg\")} onClick={()=>props.clearOptions()}/>:<img alt={\"logo\"} src={require(\"./../../assets/convergencelogo.svg\")} onClick={()=>props.clearOptions()}/>}\n            </div>\n            <Search/>\n            <div className={\"ham\"} >\n\n                {!props.styles && <FontAwesomeIcon icon={faPalette} size=\"2x\" onClick={() => props.toggleStyles()}/>}\n                {props.styles && <FontAwesomeIcon icon={faTimes} size=\"2x\" onClick={() => props.toggleStyles()}/>}\n\n                {!props.options && <FontAwesomeIcon icon={faSearch} size=\"2x\" onClick={() => props.toggleOptions()}/>}\n                {props.options && <FontAwesomeIcon icon={faTimes} size=\"2x\" onClick={() => props.toggleOptions()}/>}\n\n            </div>\n\n        </nav>\n\n\n    );\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        options: state.options,\n        styles:state.styles,\n        style:state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleOptions: () => {\n            dispatch(toggleOptions())\n        },\n        clearOptions:()=>{\n            dispatch(clearOptions())\n        },\n        toggleStyles: ()=>{\n            dispatch(toggleStyles())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","import React from 'react';\nimport {setSort} from \"../../redux/actions/setActions\";\nimport {connect} from \"react-redux\";\n\nfunction OptionItem(props) {\n\n    let shower;\n\n    const toggleReturn = (prop, val) => {\n        return !(props.sorted[prop].toggle && props.sorted[prop].val === val);\n    };\n\n    const handleSort = (prop, val) => {\n        props.setSort(prop, toggleReturn(prop, val), val)\n    };\n\n    if (props.sorted[props.type].val.includes(props.value) && props.sorted[props.type].toggle) {\n        shower = {\n            backgroundColor: props.style.navText,\n            color:props.style.nav\n        }\n    }else{\n        shower = {\n            backgroundColor: props.style.nav,\n            color:props.style.navText\n        }\n    }\n\n    const numberCheck = () => {\n        if(props.value===\"RD\"){\n            return <span className='icon icon-ranged'></span>\n        }else if(props.value===\"Sh\"){\n            return <span className='icon icon-shield'></span>\n        }else if(props.value===\"MD\"){\n            return <span className='icon icon-melee'></span>\n        }else if(props.value===\"ID\"){\n            return <span className='icon icon-indirect'></span>\n        }else if(props.value===\"Dc\"){\n            return <span className='icon icon-discard'></span>\n        }else if(props.value===\"Dr\"){\n            return <span className='icon icon-disrupt'></span>\n        }else if(props.value===\"F\"){\n            return <span className='icon icon-focus'></span>\n        }else if(props.value===\"Sp\"){\n            return <span className='icon icon-special'></span>\n        }else if(props.value===\"-\"){\n            return <span className='icon icon-blank'></span>\n        }else if (isNaN(props.value)) {\n            return props.value.charAt(0).toUpperCase() + props.value.substring(1)\n        } else {\n            return props.value\n        }\n    };\n\n\n    return (\n        <div className={\"item\"} style={shower} onClick={() => handleSort(props.type, props.value)}>{numberCheck()}</div>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted,\n        style:state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSort: (prop, toggle, val) => {\n            dispatch(setSort(prop, toggle, val))\n        }\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionItem);","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faChevronUp, faChevronDown} from '@fortawesome/free-solid-svg-icons';\nimport OptionItem from './OptionItem';\nimport {connect} from 'react-redux';\n\nfunction Option (props){\n    const [drop, toggleDrop] = React.useState(false);\n\n    let shower;\n\n    if(drop){\n        shower={\n            \"minHeight\":\"\"+(25*props.opt.values.length)+\"px\",\n            \"maxHeight\":\"\"+(25*props.opt.values.length)+\"px\"\n        }\n    }else{\n        shower={\n            \"minHeight\":\"0px\",\n            \"maxHeight\":\"0px\"\n        }\n    }\n\n    let values = props.opt.values.map((op, idx)=> {\n        return <OptionItem key={idx} type={props.opt.type} value={op}/>\n    });\n\n    return(\n        <div className={\"option\"}>\n            <h3 className={\"optHead\"} style={{color:props.style.nav}} onClick={()=>toggleDrop(!drop)}>\n                {props.opt.name}\n                {!drop && <FontAwesomeIcon icon={faChevronDown} />}\n                {drop && <FontAwesomeIcon icon={faChevronUp} />}\n            </h3>\n            <div className={\"listOpt\"} style={shower}>\n                {values}\n            </div>\n        </div>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style:state.style\n    }\n};\n\nexport default connect(mapStateToProps)(Option);","function returnSets(){\n    let sets=[];\n\n    fetch(\"https://swdestinydb.com/api/public/sets/\")\n        .then(response => {\n            return response.json();\n        })\n        .then((data) => {\n            data.map((itm)=>{\n                return sets.push(itm.name);\n            });\n            return sets;\n\n        }).catch(function () {\n        console.log(\"error loading sets\");\n    });\n\n    return sets;\n}\n\nexport const Sort = [\n\n    {\n      name: \"Affiliations\",\n      type: \"affiliation_code\",\n        values:[\"hero\", \"villain\", \"neutral\"]\n    },\n    {\n        name: \"Colors\",\n        type: \"faction_code\",\n        values:[\"red\", \"blue\", \"yellow\", \"gray\"]\n    },\n    {\n        name: \"Rarity\",\n        type: \"rarity_name\",\n        values:[\"Starter\", \"Common\", \"Uncommon\", \"Rare\", \"Legendary\"]\n    },\n    {\n        name:\"Health\",\n        type:\"health\",\n        values:[4,5,6,7,8,9,10,11,12,13,14,15]\n    },\n    {\n        name:\"Cost\",\n        type:\"cost\",\n        values:[0,1,2,3,4,5,6]\n    },\n    {\n        name:\"Set\",\n        type:\"set_name\",\n        values:returnSets()},\n    {\n        name:\"Points\",\n        type:\"points\",\n        values:[\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\"]\n    },\n    {\n        name:\"Type\",\n        type:\"type_code\",\n        values:[\"character\", \"upgrade\", \"support\", \"event\", \"downgrade\", \"plot\"]\n    },\n    {\n        name:\"Dice Sides\",\n        type:\"sides\",\n        values:[\"RD\", \"Sh\",\"MD\", \"ID\", \"Dc\",\"Dr\", \"F\", \"Sp\",\"-\"]\n\n    }\n\n];","import React from 'react';\nimport {clearOptions} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\nimport Option from './Option';\nimport {Sort} from \"../../data/Sort\";\nimport Button from '../input/Button';\n\nfunction Options(props){\n\n    let show;\n\n    if(props.options){\n        show={\n            \"right\":\"0\",\n            backgroundColor:props.style.navText,\n            color:props.style.nav\n        }\n    }else{\n        show={\n            \"right\":\"-100%\",\n            backgroundColor:props.style.navText,\n            color:props.style.nav\n        }\n    }\n\n    let options = Sort.map((srt, idx)=>\n        <Option key={idx} opt={srt}/>\n    );\n\n\n    return (\n        <div className={\"options\"} style={show}>\n            <div className={\"top\"}><h1 style={{color:props.style.nav}}>Sort Cards </h1><Button handleClick={() => props.clearOptions()} text={\"Clear Search Query\"}/></div>\n            <div className={\"wrapper\"}>\n                {options}\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        options:state.options,\n        style:state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n        clearOptions:()=>{\n            dispatch(clearOptions())\n        }\n    }\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options);\n","import React from 'react';\nimport {setStyles} from \"../../redux/actions/setActions\";\nimport {connect} from \"react-redux\";\n\nfunction StyleOption(props) {\n\n    let active;\n\n    if(props.opt.name===props.style.name){\n        active={\n            backgroundColor:props.style.nav,\n            color:props.style.navText\n        }\n    }else{\n        active={\n            backgroundColor:props.style.navText,\n            color:props.style.nav\n        }\n    }\n\n\n\n    return (\n\n        <div className={\"item\"} style={active} onClick={() => props.setStyles(props.opt)}>{props.opt.name}</div>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setStyles: (style) => {\n            dispatch(setStyles(style))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StyleOption);","export const Styles = [\n    {\n        name:\"Awakenings\",\n        nav:\"white\",\n        body:\"black\",\n        navText:\"black\",\n        bodyText:\"white\"\n    },\n    {\n        name:\"Legacies\",\n        nav:\"red\",\n        body:\"white\",\n        navText:\"white\",\n        bodyText:\"red\"\n    },\n    {\n        name:\"Convergence\",\n        nav:\"#343740\",\n        body:\"#ededed\",\n        navText:\"white\",\n        bodyText:\"#343740\"\n    }\n];","import React from 'react';\nimport StyleOption from './StyleOption';\nimport {connect} from \"react-redux\";\nimport {Styles} from './../../data/Style';\n\nfunction StyleOptions(props) {\n\n    let show;\n\n    if (props.styles) {\n        show={\n            \"right\":\"0\",\n            backgroundColor:props.style.nav,\n            color:props.style.navText\n        }\n    }else{\n        show={\n            \"right\":\"-100%\",\n            backgroundColor:props.style.nav,\n            color:props.style.navText\n        }\n    }\n\n    let styles = Styles.map((srt, idx) =>\n        <StyleOption key={idx} opt={srt}/>\n    );\n\n\n    return (\n        <div className={\"navOptions\"} style={show}>\n            <div className={\"top\"}><h1 style={{color:props.style.navText}}>Change Style</h1></div>\n            <div className={\"wrapper\"}>\n                {styles}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        styles: state.styles,\n        style: state.style\n    }\n};\n\n\n\nexport default connect(mapStateToProps)(StyleOptions);\n\n","import React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage'\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport StyleOptions from './components/nav/StyleOptions';\nimport {connect} from 'react-redux';\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\n\nfunction App(props) {\n\n    const [style, setValue] = React.useState(\n        JSON.parse(localStorage.getItem('localStyle')) || ''\n    );\n\n    React.useEffect(() => {\n        localStorage.setItem('localStyle', JSON.stringify(props.style));\n        setValue(props.style);\n    }, [props.style, style]);\n\n\n\n    document.documentElement.style.backgroundColor=props.style.body;\n\n    return (\n\n        <div className=\"App\" style={{backgroundColor: style.body}}>\n            <Nav/>\n            <Options/>\n            <StyleOptions/>\n            <div className={\"mainWrapper\"} style={{color:style.bodyText, backgroundColor: props.style.body}}>\n                <Switch>\n                    <Route path=\"/\" component={List}/>\n                </Switch>\n            </div>\n            <Route path={\"/:id\"} component={CardPage}/>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style:state.style\n    }\n};\n\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\n\nconst initState = {\n    itemLimit: 10,\n    sorted:{\n        rarity_name: {toggle: false, val: []},\n        affiliation_code: {toggle: false, val: []},\n        type_code: {toggle: false, val: []},\n        faction_code: {toggle: false, val: []},\n        set_name:{toggle:false,val:[]},\n        health: {toggle: false, val: []},\n        cost: {toggle: false, val: []},\n        points: {toggle: false, val: []},\n        sides:{toggle: false, val:[]}\n    },\n    style:JSON.parse(localStorage.getItem('localStyle')) || '',\n    name: \"\",\n    options:false,\n    styles:false\n\n\n};\n\n\nconst rootReducer = (state = initState, action) => {\n\n    if (action.type === 'INCREASE_LIMIT') {\n\n        let val = state.itemLimit;\n\n        val = val + 10;\n\n\n        return {\n            ...state,\n            itemLimit: val\n        }\n    }\n\n    if (action.type === 'SET_SORT') {\n\n        let orgArray = state.sorted[action.prop].val;\n\n        if(orgArray.includes(action.val)){\n            let ind = orgArray.indexOf(action.val);\n            orgArray.splice(ind,1);\n\n        }else{\n            orgArray.push(action.val)\n        }\n\n        let togg = orgArray.length > 0;\n\n        return {\n            ...state,\n            itemLimit:10,\n            sorted:{\n                ...state.sorted,\n                [action.prop]: {\n                    toggle: togg,\n                    val: orgArray\n                }\n            }\n\n        }\n\n    }\n\n    if(action.type === 'SET_NAME'){\n        return{\n            ...state,\n            name:action.name\n        }\n    }\n\n    if(action.type === 'SET_STYLE'){\n\n        document.documentElement.style.backgroundColor=action.style.body;\n\n        return{\n            ...state,\n            style:action.style\n        }\n    }\n\n    if(action.type === 'TOGGLE_OPTIONS'){\n\n        return{\n            ...state,\n            options:!state.options,\n            styles:false\n        }\n    }\n\n    if(action.type === 'TOGGLE_STYLES'){\n\n\n        return{\n            ...state,\n            styles:!state.styles,\n            options:false\n        }\n    }\n\n    if(action.type === 'CLEAR_OPTIONS'){\n\n        return{\n            ...state,\n            itemLimit: 10,\n            sorted:{\n                rarity_name: {toggle: false, val: []},\n                affiliation_code: {toggle: false, val: []},\n                type_code: {toggle: false, val: []},\n                faction_code: {toggle: false, val: []},\n                set_name:{toggle:false,val:[]},\n                health: {toggle: false, val: []},\n                cost: {toggle: false, val: []},\n                points: {toggle: false, val: []},\n                sides:{toggle: false, val:[]}\n            },\n            name: \"\",\n            options:false\n        }\n    }\n\n\n    return state;\n};\n\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {createStore} from 'redux';\nimport {Provider} from \"react-redux\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from \"./redux/reducers\";\nimport {HashRouter as Router} from \"react-router-dom\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n            <App/>\n        </Router>\n    </Provider>,\n\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}