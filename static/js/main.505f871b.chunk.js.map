{"version":3,"sources":["assets/convergencelogo.svg","assets sync /^/.//.*logo/.svg$","assets/awakeningslogo.svg","assets/legacieslogo.svg","redux/actions/setActions.js","components/card/Card.js","components/input/Button.js","data/Formats.js","components/main/List.js","components/card/Side.js","components/card/CardInfo.js","components/card/CardPage.js","components/input/Search.js","components/nav/Navigation.js","components/nav/OptionItem.js","components/nav/Option.js","data/Sort.js","components/nav/options.js","components/nav/SortTag.js","components/nav/SortNav.js","components/nav/StyleOption.js","data/Style.js","components/nav/StyleOptions.js","App.js","serviceWorker.js","redux/reducers/index.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","setSort","prop","val","type","connect","state","style","props","React","useState","load","updateLoading","img","error","rend","rendElement","seconds","setSeconds","useEffect","interval","setInterval","imagesrc","clearInterval","className","bod","color","bodyText","name","alt","onLoad","onError","src","icon","faSpinner","spin","size","loadColor","faExclamationCircle","hover","setHover","nav","backgroundColor","navText","hoverChange","onClick","handleClick","bind","this","onMouseEnter","onMouseLeave","text","formats","fetch","then","response","json","data","itm","push","catch","console","log","returnFormats","displayedSet","itemLimit","setLimit","sorted","cards","dispatch","changeLimit","cardEle","setCards","sort","setLoad","setError","sortObject","sortedList","p","toggle","filter","crd","ret","points","arrayPoints","split","i","length","v","hasOwnProperty","sides","includes","q","sets","set_code","y","restricted","balance","balanced","keywords","toLowerCase","toUpperCase","slice","idx","to","key","button","Side","finished","setVal","sd","setClass","isNaN","dangerouslySetInnerHTML","__html","CardInfo","format","legal","rst","setRst","abortController","AbortController","signal","formatSet","fm","abort","is_unique","health","faHeart","cost","type_name","undefined","subtypes","sb","has_errata","replace","flavor","affiliation_name","rarity_name","faction_code","set_name","position","card","setCard","status","cardMain","match","params","faTimes","setName","sty","sg","placeholder","value","onChange","event","target","options","styles","toggleOptions","clearOptions","toggleStyles","require","faPalette","faSearch","shower","faCheckSquare","faSquare","charAt","substring","drop","toggleDrop","opt","values","op","faChevronDown","faChevronUp","Sort","returnSets","show","srt","body","vl","prp","Number","faCircle","updateShow","tags","updateTags","check","tagArray","x","obj","top","tagEles","st","setStyles","active","Styles","crds","setFormats","fmts","setSets","sts","pad","setPad","localStorage","setItem","JSON","stringify","document","querySelector","getBoundingClientRect","height","documentElement","appStyle","wrapStyle","paddingTop","path","component","List","CardPage","Boolean","window","location","hostname","initState","affiliation_code","type_code","parse","getItem","rootReducer","action","orgArray","ind","indexOf","splice","togg","store","createStore","ReactDOM","render","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.505f871b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/convergencelogo.f7ca2921.svg\";","var map = {\n\t\"./awakeningslogo.svg\": 45,\n\t\"./convergencelogo.svg\": 26,\n\t\"./legacieslogo.svg\": 46\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 44;","module.exports = __webpack_public_path__ + \"static/media/awakeningslogo.519004a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/legacieslogo.f7ca2921.svg\";","export const changeLimit = () => {\n    return {\n        type: 'INCREASE_LIMIT'\n    }\n};\n\nexport const setName = (name) => {\n    return {\n        type: 'SET_NAME',\n        name:name\n    }\n};\n\nexport const setSort = (prop, val) => {\n    return {\n        type: 'SET_SORT',\n        prop: prop,\n        val: val\n    }\n};\n\nexport const toggleOptions = () => {\n    return {\n        type: 'TOGGLE_OPTIONS'\n    }\n};\n\nexport const toggleStyles = () => {\n    return {\n        type: 'TOGGLE_STYLES'\n    }\n};\n\nexport const setStyles = (style) => {\n    return {\n        type: 'SET_STYLE',\n        style:style\n\n    }\n};\n\nexport const clearOptions = () =>{\n    return {\n        type: 'CLEAR_OPTIONS'\n    }\n};\n\nexport const setCards = (cards) =>{\n    return {\n        type: 'SET_CARDS',\n        cards:cards\n    }\n};\n\nexport const setFormats = (fmts) =>{\n    return {\n        type: 'SET_FORMATS',\n        fmts:fmts\n    }\n};\n\nexport const setSets = (sts) =>{\n    return {\n        type: 'SET_SETS',\n        sts:sts\n    }\n};","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\nimport {connect} from \"react-redux\";\nfunction Card(props) {\n\n    const [load, updateLoading] = React.useState(\"loading\");\n    const [rend, rendElement] = React.useState({\n        img:false,\n        load:true,\n        error:false\n    });\n    const [seconds, setSeconds] = React.useState(0);\n\n\n    React.useEffect(() => {\n        let interval = null;\n\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds + 1);\n                if (load) {\n                    if(props.imagesrc===null){\n                        rendElement({\n                            img:false,\n                            load:false,\n                            error:true\n                        });\n                    }else{\n                        rendElement({\n                            img:true,\n                            load:false,\n                            error:false\n                        });\n                    }\n\n                } else {\n                    if(seconds>3){\n                        rendElement({\n                            img:false,\n                            load:false,\n                            error:true\n                        });\n                    }else{\n                        rendElement({\n                            img:false,\n                            load:true,\n                            error:false\n                        });\n                    }\n                }\n            }, 1000);\n\n        return () => clearInterval(interval);\n    }, [seconds, load, props.imagesrc]);\n\n    const handleImageLoad = () => {\n        updateLoading(true)\n    };\n\n    const handleImageError = () => {\n        updateLoading(false)\n    };\n\n    return (\n        <div className={\"card\"}>\n            {props.bod&&<h1 style={{color:props.style.bodyText}}>{props.name}</h1>}\n            <div className={\"cardWrapper\"}>\n                {rend.img && <img alt={props.name} onLoad={handleImageLoad} onError={handleImageError} src={props.imagesrc}/>}\n                <div>\n                    {rend.load&&<FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color:props.loadColor}}/>}\n                    {rend.error&&<FontAwesomeIcon icon={faExclamationCircle} style={{color:\"red\"}} size={\"6x\"}/>}\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style:state.style\n    }\n};\n\nexport default connect(mapStateToProps)(Card);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction Button(props){\n\n    const [hover, setHover] = React.useState(false)\n\n    let style;\n\n    if(hover){\n        style = {\n            color:props.style.nav,\n            backgroundColor:props.style.navText\n        };\n    }else{\n        style = {\n            color:props.style.navText,\n            backgroundColor:props.style.nav\n        };\n    }\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n\n    return (\n        <div className={\"button\"} style={style} onClick={props.handleClick.bind(this)} onMouseEnter={hoverChange}\n             onMouseLeave={hoverChange} >\n            {props.text}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style:state.style\n    }\n};\n\nexport default connect(mapStateToProps)(Button);","function returnFormats(){\n    let formats=[];\n\n    fetch(\"https://swdestinydb.com/api/public/formats/\")\n        .then(response => {\n            return response.json();\n        })\n        .then((data) => {\n            data.map((itm)=>{\n                return formats.push(itm);\n            });\n            return formats;\n\n        }).catch(function () {\n        console.log(\"error loading sets\");\n    });\n\n    return formats;\n}\n\nexport const formats =  returnFormats();","import React from 'react';\nimport {changeLimit} from \"../../redux/actions/setActions\";\nimport Card from '../card/Card';\nimport {connect} from 'react-redux';\nimport Button from '../input/Button';\nimport {Link} from 'react-router-dom';\nimport {formats} from '../../data/Formats';\n\nfunction List(props) {\n\n    const [cards, setCards] = React.useState([]);\n    const [sort, setSort] = React.useState([]);\n    const [load, setLoad] = React.useState(true);\n    const [error, setError] = React.useState(false);\n\n\n    React.useEffect(() => {\n\n        function handleStatusChange(status) {\n            setCards(status)\n        }\n\n        if (load) {\n            fetch(\"https://swdestinydb.com/api/public/cards/\")\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    setLoad(false);\n                    handleStatusChange(data);\n                }).catch(function () {\n                setError(true);\n            });\n        }\n\n        function sortObject() {\n\n            let sortedList = cards;\n\n            for (let p in props.sorted) {\n\n\n                if (props.sorted[p].toggle) {\n\n                    if (p === \"points\") {\n\n\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            if (crd.points !== null) {\n                                let arrayPoints = crd.points.split(\"/\");\n                                for (let i = 0; i < props.sorted.points.val.length; i++) {\n                                    for (let v = 0; v < arrayPoints.length; v++) {\n                                        if (arrayPoints[v] === props.sorted.points.val[i]) {\n\n                                            ret = true;\n                                        }\n                                    }\n                                }\n                            }\n                            return (ret ? crd : null)\n\n                        });\n\n\n                    } else if (p === \"sides\") {\n\n                        for (let i = 0; i < props.sorted.sides.val.length; i++) {\n\n                            sortedList = sortedList.filter(crd => {\n                                let ret = false;\n                                if (crd.hasOwnProperty('sides')) {\n                                    for (let v = 0; v < crd.sides.length; v++) {\n                                        if (crd.sides[v].includes(props.sorted.sides.val[i])) {\n                                            ret = true\n                                        }\n                                    }\n                                }\n                                return (ret ? crd : null)\n\n                            });\n                        }\n\n\n                    } else if (p === 'formats') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for (let i = 0; i < formats.length; i++) {\n                                for (let q = 0; q < props.sorted.formats.val.length; q++) {\n                                    if (formats[i].name === props.sorted.formats.val[q] && formats[i].data.sets.includes(crd.set_code)) {\n                                        ret = true;\n                                    }\n                                }\n                            }\n                            return (ret ? crd : null);\n                        });\n                    }else if (p === 'restricted') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for(let y=0; y<formats.length; y++){\n                                for (let i = 0; i < formats[y].data.restricted.length; i++) {\n                                    if(formats[y].data.restricted[i]===crd.code&&props.sorted.restricted.val.includes(\"restricted\")){\n                                        ret=true\n                                    }\n                                }\n                            }\n\n                            return (ret ? crd : null);\n                        });\n                    }else if (p === 'balanced') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for(let y=0; y<formats.length; y++){\n                                for (let i in formats[y].data.balance) {\n                                    if(i===crd.code&&props.sorted.balanced.val.includes(\"balanced\")){\n                                        ret=true\n                                    }\n                                }\n                            }\n\n                            return (ret ? crd : null);\n                        });\n                    }else if (p === 'keywords') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for(let i=0; i<props.sorted.keywords.val.length; i++){\n                                if(crd.text!==null&&crd.text.includes(props.sorted.keywords.val[i])){\n                                    ret=true;\n                                }\n                            }\n                            return (ret ? crd : null);\n                        });\n                    } else {\n                        sortedList = sortedList.filter(crd => {\n\n                            return props.sorted[p].val.includes(crd[p])\n\n                        });\n                    }\n                }\n            }\n\n\n            if (props.name !== '') {\n                sortedList = sortedList.filter(crd => {\n                    if (crd.name.includes(props.name)) {\n                        return true\n                    } else if (crd.name.toLowerCase().includes(props.name)) {\n                        return true\n                    } else return crd.name.toUpperCase().includes(props.name);\n                });\n            }\n\n\n            setSort(sortedList)\n        }\n\n        sortObject();\n\n        return () => {\n            sortObject();\n        }\n\n    }, [cards, load, props.name, props.sorted]);\n\n\n    let cardEle;\n\n    if (sort.length !== 0) {\n        cardEle = sort.slice(0, props.itemLimit).map((crd, idx) =>\n\n\n            <Link to={\"/\" + crd.code} key={idx} className={\"cardFlop\"}>\n\n                <Card name={crd.name} bod={true} imagesrc={crd.imagesrc} code={crd.code}\n                      loadColor={\"#343740\"}/>\n            </Link>\n        );\n    } else if (!load && !error) {\n        cardEle = <h1>No cards in search</h1>;\n    } else if (load && !error) {\n        cardEle = <h1>Fetching Cards...</h1>;\n    } else if (load && error) {\n        cardEle = <h1>Loading Cards failed. Refresh page...</h1>;\n    }\n\n\n    const button = () => {\n        if (props.itemLimit < sort.length && sort.length > 10) {\n            return <Button handleClick={() => props.changeLimit()} text={\"Load More\"}/>\n        }\n    };\n\n\n    return (\n\n        <div className={\"list\"}>\n            <div className={\"wrapper\"}>\n                {cardEle}\n            </div>\n            {button()}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        displayedSet: state.displayedSet,\n        itemLimit: state.itemLimit,\n        setLimit: state.setLimit,\n        sorted: state.sorted,\n        name: state.name,\n        style: state.style,\n        cards:state.cards\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeLimit: () => {\n            dispatch(changeLimit())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","import React from 'react';\n\nfunction Side(props){\n\n    let finished;\n\n    function setVal (){\n        if(props.sd.includes(\"+\")){\n            return \"+ \"+props.sd[1];\n        }else if(props.sd.includes(\"Sp\")){\n            return \"\";\n        }else{\n            return props.sd[0];\n        }\n    }\n\n    function setClass(){\n        if(props.sd.includes(\"+\")){\n            return true\n        }else{\n            return false\n        }\n    }\n\n\n    if(props.sd.includes(\"RD\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-ranged '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-ranged '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Sh\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-shield '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-shield '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"MD\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-melee '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-melee '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"ID\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-indirect '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-indirect '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Dc\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-discard '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-discard '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Dr\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-disrupt '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-disrupt '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"F\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-focus '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-focus '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Sp\")){\n        finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-special '></span></span>\";\n    }else if(props.sd.includes(\"R\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-resource '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-resource '></span></span>\";\n        }\n\n    }else{\n        finished = \"<span class='blank'>-</span>\"\n    }\n\n\n\n    if(!isNaN(props.sd[props.sd.length-1])&&props.sd[props.sd.length-1]!==\"-\"){\n        if(setClass()){\n            finished = finished+\"<span class='res modify'> <span>\"+props.sd[props.sd.length-1]+\"</span> <span\" +\n                \" class='icon\" +\n                \" icon-resource'></span></span>\"\n        }else{\n            finished = finished+\"<span class='res'> <span>\"+props.sd[props.sd.length-1]+\"</span> <span\" +\n                \" class='icon\" +\n                \" icon-resource'></span></span>\"\n        }\n\n    }\n\n\n\n\n    return(\n        <div className={\"side\"} dangerouslySetInnerHTML={{ __html: finished }}></div>\n    )\n}\n\nexport default Side","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle, faHeart} from '@fortawesome/free-solid-svg-icons';\nimport Side from './Side';\n\n\nfunction CardInfo(props) {\n\n    const [rst, setRst] = React.useState([\n\n        {\n            format: \"trilogy\",\n            restricted: false,\n            balance: \"--\",\n            legal: false\n        },\n        {\n            format: \"standard\",\n            restricted: false,\n            balance: \"--\",\n            legal: false\n        },\n        {\n            format: \"infinite\",\n            restricted: false,\n            balance: \"--\",\n            legal: true\n        }\n    ]);\n\n    const [rend, rendElement] = React.useState({\n        rst: false,\n        load: true,\n        error: false\n    });\n\n\n    React.useEffect(() => {\n\n        const abortController = new AbortController();\n        const signal = abortController.signal;\n\n\n        function handleStatusChange(status) {\n            setRst(status);\n        }\n\n\n        fetch(\"https://swdestinydb.com/api/public/formats/\", {signal: signal})\n            .then(response => {\n                return response.json();\n            })\n            .then((data) => {\n                let formatSet = [];\n\n                data.map((fm) => {\n\n                    let format = {\n                        name: fm.name,\n                        restricted: false,\n                        balance: \"--\",\n                        legal: false\n                    };\n\n                    if (props.code in fm.data.balance) {\n                        format.balance = fm.data.balance[props.code];\n                    }\n\n                    if (fm.data.restricted.includes(props.code)) {\n                        format.restricted = true;\n                    }\n\n                    if (fm.data.sets.includes(props.crd.set_code)) {\n                        format.legal = true;\n                    }\n\n                    rendElement({rst: true, load: false, error: false});\n\n\n                    return formatSet.push(format);\n\n                });\n\n                handleStatusChange(formatSet);\n            }).catch(() => rendElement({rst: false, load: false, error: true}))\n\n\n        return function cleanup() {\n            abortController.abort();\n        };\n    }, [props.code, props.crd.set_code]);\n\n    let formats = rst.map((fm, idx) =>\n        <div key={idx} className={\"format\"}>\n            <h3>{fm.name}</h3>\n            <h5 className={\"restrict\"}>{fm.restricted ? \"Restricted\" : null}</h5>\n            <h3>{fm.balance}</h3>\n            <h6 className={!fm.legal ? \"restrict\" : null}>{fm.legal ? \"Playable\" : \"Unplayable\"}</h6>\n        </div>\n    );\n\n\n    return (\n        <div className={\"cardInfo\"}>\n            <h1>{props.crd.is_unique && \"◆ \"}{props.crd.name}</h1>\n            {props.crd.health &&\n            <h2><FontAwesomeIcon icon={faHeart} size={\"lg\"} style={{color: \"red\"}}/> {props.crd.health}</h2>}\n            {props.crd.cost!==null &&\n            <h2 className={\"cost\"}><span className='icon icon-resource '></span> {props.crd.cost} </h2>}\n            <h2>{props.crd.points && \"Points:\"}{props.crd.points}</h2>\n            <h2>{props.crd.type_name}</h2>\n            <div className={\"subtypes\"}>{props.crd.subtypes !== undefined && props.crd.subtypes.map((sb, idx) =>\n                <h3 key={idx}>{sb.name}{idx !== (props.crd.subtypes.length - 1) && \"-\"}</h3>\n            )}</div>\n            <div className={\"sides\"}>{props.crd.sides !== undefined && props.crd.sides.map((sd, idx) =>\n                <Side key={idx} sd={sd}/>\n            )}</div>\n            <div className={\"formats\"}>\n                {rend.rst && formats}\n            </div>\n            <div>\n                {rend.load && <FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color: props.loadColor}}/>}\n                {rend.error && <FontAwesomeIcon icon={faExclamationCircle} style={{color: \"red\"}} size={\"6x\"}/>}\n            </div>\n            <div className={\"text\"}>\n                <h3 className={\"errata\"}>{props.crd.has_errata && \"This card has an errata\"}</h3>\n                {props.crd.text !== null && <p dangerouslySetInnerHTML={{\n                    __html: props.crd.text.replace(\"[special]\", \"<span class='icon\" +\n                        \" icon-special '></span>\").replace(\"([special])\", \"(<span class='icon\" +\n                        \" icon-special '></span>)\").replace(\"([indirect])\", \"(<span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"([melee])\", \"(<span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>)\").replace(\"([discard])\", \"(<span class='icon\" +\n                        \" icon-discard '></span>)\").replace(\"([focus])\", \"(<span class='icon\" +\n                        \" icon-focus '></span>)\").replace(\"([disrupt])\", \"(<span class='icon\" +\n                        \" icon-disrupt '></span>)\").replace(\"([shield])\", \"(<span class='icon\" +\n                        \" icon-shield '></span>)\").replace(\"([resource])\", \"(<span class='icon\" +\n                        \" icon-resource '></span>)\").replace(\"([blank])\", \"(<span class='icon\" +\n                        \" icon-blank '></span>)\").replace(\"([ranged] or [melee])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([melee] or [ranged])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged] or [melee])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged], [melee] or [indirect])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>, <span class='icon\" +\n                        \" icon-melee '></span> or <span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"([ranged], [melee], or [indirect])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>, <span class='icon\" +\n                        \" icon-melee '></span> or <span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"[AW]\", \"<span class='icon\" +\n                        \" icon-set-AW'></span>\").replace(\"[WotF]\", \"<span class='icon\" +\n                        \" icon-set-WotF'></span>\").replace(\"[RIV]\", \"<span class='icon\" +\n                        \" icon-set-RIV'></span>\").replace(\"[SoR]\", \"<span class='icon\" +\n                        \" icon-set-SoR'></span>\").replace(\"[LEG]\", \"<span class='icon\" +\n                        \" icon-set-LEG'></span>\").replace(\"[EaW]\", \"<span class='icon\" +\n                        \" icon-set-EaW'></span>\").replace(\"[AtG]\", \"<span class='icon\" +\n                        \" icon-set-AtG'></span>\").replace(\"[CONV]\", \"<span class='icon\" +\n                        \" icon-set-CONV'></span>\").replace(\"[AoN]\", \"<span class='icon\" +\n                        \" icon-set-AoN'></span>\").replace(\"[SoH]\", \"<span class='icon\" +\n                        \" icon-set-SoH'></span>\")\n                }} className={\"effects\"}></p>}\n\n                <i>{props.crd.flavor !== null && props.crd.flavor.replace(\"<cite>\", \"-\").replace(\"</cite>\", \"\")}</i>\n\n                <div className={\"bottom\"}>\n                    <div className={\"affl \" + props.crd.affiliation_name}>{props.crd.affiliation_name}</div>\n\n                    <div className={\"rr \" + props.crd.rarity_name}>{props.crd.rarity_name}</div>\n\n                    <div className={\"color\"} style={{\n                        backgroundColor: props.crd.faction_code,\n                        color: (props.crd.faction_code==='blue'?'white':'black')\n                    }}>\n                        {props.crd.faction_code.toUpperCase()}\n                    </div>\n                    <div className={\"setStuff\"}><span\n                        className={\"icon icon-set-\" + props.crd.set_code}></span>{props.crd.set_name}: {props.crd.position}\n                    </div>\n                </div>\n\n\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default CardInfo","import React from 'react';\nimport {\n    Link\n} from \"react-router-dom\";\nimport Card from './Card';\nimport {connect} from 'react-redux';\nimport CardInfo from './CardInfo';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle, faTimes} from '@fortawesome/free-solid-svg-icons';\n\n\nfunction CardPage(props) {\n\n    const [card, setCard] = React.useState(\"\");\n\n    const [rend, rendElement] = React.useState({\n        crd: false,\n        load: true,\n        error: false\n    });\n\n\n    React.useEffect(() => {\n\n            const abortController = new AbortController();\n            const signal = abortController.signal;\n\n            function handleStatusChange(status) {\n                rendElement({\n                    crd: true,\n                    load: false,\n                    error: false\n                });\n                setCard(status)\n            }\n\n\n            fetch(\"https://swdestinydb.com/api/public/cards/\", {signal: signal})\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n\n                    let cardMain = data.filter(crd => {\n                        return props.match.params.id === crd.code;\n                    });\n\n                    handleStatusChange(cardMain[0]);\n                }).catch(() => rendElement({\n                crd: false,\n                load: false,\n                error: true\n            }));\n\n\n            return function cleanup() {\n                abortController.abort();\n            };\n\n        }\n\n        ,\n        [props.match.params.id]\n    )\n    ;\n\n    const code = card.code;\n\n\n    return (\n        <Link className={props.match.params.id ? \"cardPageWrapper\" : undefined} to={\"/\"}>\n\n            <div className={\"close\"} style={{backgroundColor: props.style.navText, color: props.style.nav}}>\n                <FontAwesomeIcon icon={faTimes} size={\"4x\"}/>\n            </div>\n\n            {rend.load && <FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color: props.loadColor}}/>}\n            {rend.error && <FontAwesomeIcon icon={faExclamationCircle} style={{color: \"red\"}} size={\"6x\"}/>}\n\n            {rend.crd &&\n            <Card name={card.name} bod={false} imagesrc={card.imagesrc} code={card.code} loadColor={\"white\"}/>}\n            {code && <CardInfo crd={card} code={code}/>}\n\n        </Link>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style,\n        cards:state.cards\n    }\n};\n\nexport default connect(mapStateToProps)(CardPage);","import React from 'react';\nimport {setName} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\n\nfunction Search(props) {\n\n    const handleChange = event => {\n        props.setName(event.target.value);\n\n    };\n\n    let sty = {\n        backgroundColor: props.style.navText,\n        color: props.style.nav\n    };\n\n    let sg  ={\n        color: props.style.nav\n    };\n\n    return (\n        <div className={\"searchContainer\"}>\n            <input style={sty} placeholder={\"Search Card by Name...\"} value={props.name} onChange={handleChange}\n               className={\"search\"}/>\n               <FontAwesomeIcon style={sg} icon={faTimes} onClick={()=> props.setName(\"\")}/>\n        </div>\n\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        name: state.name,\n        style: state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setName: (name) => {\n            dispatch(setName(name))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport {toggleOptions, clearOptions, toggleStyles} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\nimport Search from '../input/Search';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSearch, faTimes, faPalette} from '@fortawesome/free-solid-svg-icons';\n\nfunction Nav(props) {\n\n    let style= {\n        color:props.style.navText,\n        backgroundColor:props.style.nav\n    };\n\n    return (\n\n\n        <nav style={style}>\n            <div className={\"logo\"} >\n                {(props.style.name!==undefined)?<img alt={\"logo\"} src={require(\"./../../assets/\"+props.style.name.toLowerCase()+\"logo.svg\")} onClick={()=>props.clearOptions()}/>:<img alt={\"logo\"} src={require(\"./../../assets/convergencelogo.svg\")} onClick={()=>props.clearOptions()}/>}\n            </div>\n            <Search/>\n            <div className={\"ham\"} >\n\n                {!props.styles && <FontAwesomeIcon icon={faPalette} size=\"2x\" onClick={() => props.toggleStyles()}/>}\n                {props.styles && <FontAwesomeIcon icon={faTimes} size=\"2x\" onClick={() => props.toggleStyles()}/>}\n\n                {!props.options && <FontAwesomeIcon icon={faSearch} size=\"2x\" onClick={() => props.toggleOptions()}/>}\n                {props.options && <FontAwesomeIcon icon={faTimes} size=\"2x\" onClick={() => props.toggleOptions()}/>}\n\n            </div>\n\n        </nav>\n\n\n    );\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        options: state.options,\n        styles:state.styles,\n        style:state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleOptions: () => {\n            dispatch(toggleOptions())\n        },\n        clearOptions:()=>{\n            dispatch(clearOptions())\n        },\n        toggleStyles: ()=>{\n            dispatch(toggleStyles())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","import React from 'react';\nimport {setSort} from \"../../redux/actions/setActions\";\nimport {connect} from \"react-redux\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCheckSquare, faSquare} from '@fortawesome/free-solid-svg-icons';\n\n\nfunction OptionItem(props) {\n\n    const [hover, setHover] = React.useState(false)\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n\n\n    let shower;\n\n    const handleSort = (prop, val) => {\n        props.setSort(prop,  val)\n    };\n\n    if(hover){\n        if(props.style.navText===undefined){\n            shower = {\n                backgroundColor: '#343740',\n                color:'white'\n            }\n        }else{\n            shower = {\n                backgroundColor: props.style.bodyText,\n                color:props.style.navText\n            }\n        }\n    }else{\n        if (props.sorted[props.type].val.includes(props.value) && props.sorted[props.type].toggle) {\n            if(props.style.navText===undefined){\n                shower = {\n                    backgroundColor: 'black',\n                    color:'white'\n                }\n            }else{\n                shower = {\n                    backgroundColor: props.style.navText,\n                    color:props.style.nav\n                }\n            }\n\n        }else{\n            if(props.style.navText===undefined){\n                shower = {\n                    backgroundColor: 'white',\n                    color:'black'\n                }\n            }else{\n                shower = {\n                    backgroundColor: props.style.nav,\n                    color:props.style.navText\n                }\n            }\n        }\n    }\n\n\n\n    const numberCheck = () => {\n        if(props.value===\"RD\"){\n            return <span><span className='icon icon-ranged'></span> Ranged</span>\n        }else if(props.value===\"Sh\"){\n            return <span><span className='icon icon-shield'></span> Shield</span>\n        }else if(props.value===\"MD\"){\n            return <span><span className='icon icon-melee'></span> Melee</span>\n        }else if(props.value===\"ID\"){\n            return <span><span className='icon icon-indirect'></span> Indirect</span>\n        }else if(props.value===\"Dc\"){\n            return <span><span className='icon icon-discard'></span> Discard</span>\n        }else if(props.value===\"Dr\"){\n            return <span><span className='icon icon-disrupt'></span> Disrupt</span>\n        }else if(props.value===\"F\"){\n            return <span><span className='icon icon-focus'></span> Focus</span>\n        }else if(props.value===\"Sp\"){\n            return <span><span className='icon icon-special'></span> Special</span>\n        }else if(props.value===\"R\"){\n            return <span><span className='icon icon-resource'></span> Resource</span>\n        }else if(props.value===\"-\"){\n            return <span><span className='icon icon-blank'></span> Blank</span>\n        }else if(props.value===\"+\"){\n            return <span>Modified</span>\n        }else if (isNaN(props.value)) {\n            return props.value.charAt(0).toUpperCase() + props.value.substring(1)\n        } else {\n            return props.value\n        }\n    };\n\n\n    return (\n        <div className={\"item\"} onMouseEnter={hoverChange}\n             onMouseLeave={hoverChange} style={shower} onClick={() => handleSort(props.type, props.value)}>{props.sorted[props.type].val.includes(props.value) && props.sorted[props.type].toggle ? <FontAwesomeIcon icon={faCheckSquare}/> :<FontAwesomeIcon icon={faSquare}/>} {numberCheck()}</div>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted,\n        style:state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSort: (prop, val) => {\n            dispatch(setSort(prop, val))\n        }\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionItem);","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faChevronUp, faChevronDown} from '@fortawesome/free-solid-svg-icons';\nimport OptionItem from './OptionItem';\nimport {connect} from 'react-redux';\n\nfunction Option (props){\n    const [drop, toggleDrop] = React.useState(false);\n\n    let shower;\n\n    if(drop){\n        shower={\n            \"minHeight\":\"\"+(25*props.opt.values.length)+\"px\",\n            \"maxHeight\":\"\"+(25*props.opt.values.length)+\"px\"\n        }\n    }else{\n        shower={\n            \"minHeight\":\"0px\",\n            \"maxHeight\":\"0px\"\n        }\n    }\n\n    let values = props.opt.values.map((op, idx)=> {\n        return <OptionItem key={idx} type={props.opt.type} value={op}/>\n    });\n\n    return(\n        <div className={\"option\"}>\n            <h3 className={\"optHead\"} style={{color:props.style.nav}} onClick={()=>toggleDrop(!drop)}>\n                {props.opt.name}\n                {!drop && <FontAwesomeIcon icon={faChevronDown} />}\n                {drop && <FontAwesomeIcon icon={faChevronUp} />}\n            </h3>\n            <div className={\"listOpt\"} style={shower}>\n                {values}\n            </div>\n        </div>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style:state.style\n    }\n};\n\nexport default connect(mapStateToProps)(Option);","function returnSets(){\n    let sets=[];\n\n    fetch(\"https://swdestinydb.com/api/public/sets/\")\n        .then(response => {\n            return response.json();\n        })\n        .then((data) => {\n            data.map((itm)=>{\n                return sets.push(itm.name);\n            });\n            return sets;\n\n        }).catch(function () {\n        console.log(\"error loading sets\");\n    });\n\n    return sets;\n}\n\nexport const Sort = [\n\n    {\n      name: \"Affiliations\",\n      type: \"affiliation_code\",\n        values:[\"hero\", \"villain\", \"neutral\"]\n    },\n    {\n        name: \"Colors\",\n        type: \"faction_code\",\n        values:[\"red\", \"blue\", \"yellow\", \"gray\"]\n    },\n    {\n        name: \"Rarity\",\n        type: \"rarity_name\",\n        values:[\"Starter\", \"Common\", \"Uncommon\", \"Rare\", \"Legendary\"]\n    },\n    {\n        name:\"Health\",\n        type:\"health\",\n        values:[4,5,6,7,8,9,10,11,12,13,14,15]\n    },\n    {\n        name:\"Cost\",\n        type:\"cost\",\n        values:[0,1,2,3,4,5,6]\n    },\n    {\n        name:\"Set\",\n        type:\"set_name\",\n        values:returnSets()},\n    {\n        name:\"Points\",\n        type:\"points\",\n        values:[\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\"]\n    },\n    {\n        name:\"Type\",\n        type:\"type_code\",\n        values:[\"character\", \"upgrade\", \"support\", \"event\", \"downgrade\", \"plot\"]\n    },\n    {\n        name:\"Dice Sides\",\n        type:\"sides\",\n        values:[\"RD\", \"Sh\",\"MD\", \"ID\", \"Dc\",\"Dr\", \"F\", \"R\", \"Sp\",\"-\",\"+\"]\n\n    },\n    {\n        name:\"Formats\",\n        type:\"formats\",\n        values:[\"Standard\", \"Trilogy\", \"Infinite\"]\n    },\n    {\n        name: \"Restricted\",\n        type:\"restricted\",\n        values:[\"restricted\"]\n    },\n    {\n        name: \"Balanced\",\n        type:\"balanced\",\n        values:[\"balanced\"]\n    },\n    {\n        name: \"Keywords\",\n        type:\"keywords\",\n        values:[\"Guardian\", \"Ambush\", \"Redeploy\"]\n    }\n\n];","import React from 'react';\nimport {clearOptions} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\nimport Option from './Option';\nimport {Sort} from \"../../data/Sort\";\nimport Button from '../input/Button';\n\nfunction Options(props){\n\n    let show;\n\n    if(props.options){\n        show={\n            \"right\":\"0\",\n            backgroundColor:props.style.navText,\n            color:props.style.nav\n        }\n    }else{\n        show={\n            \"right\":\"-100%\",\n            backgroundColor:props.style.navText,\n            color:props.style.nav\n        }\n    }\n\n    let options = Sort.map((srt, idx)=>\n        <Option key={idx} opt={srt}/>\n    );\n\n\n    return (\n        <div className={\"options\"} style={show}>\n            <div className={\"top\"}><h1 style={{color:props.style.nav}}>Sort Cards </h1><Button handleClick={() => props.clearOptions()} text={\"Clear Search Query\"}/></div>\n            <div className={\"wrapper\"}>\n                {options}\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        options:state.options,\n        style:state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n        clearOptions:()=>{\n            dispatch(clearOptions())\n        }\n    }\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options);\n","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faHeart, faCircle, faTimes} from '@fortawesome/free-solid-svg-icons';\n\nimport {connect} from 'react-redux';\nimport {setSort} from \"../../redux/actions/setActions\";\n\nfunction SortTag(props){\n    const [hover, setHover] = React.useState(false);\n\n\n    const handleSort = (prop, val) => {\n        props.setSort(prop, val)\n    };\n\n    let style;\n\n    if(hover){\n        style = {\n            color:props.style.body,\n            backgroundColor:props.style.nav\n        };\n    }else{\n        style = {\n            color:props.style.nav,\n            backgroundColor:props.style.body\n        };\n    }\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n    const numberCheck = (vl) => {\n        if(vl===\"RD\"){\n            return <span><span className='icon icon-ranged'></span> Ranged</span>\n        }else if(vl===\"Sh\"){\n            return <span><span className='icon icon-shield'></span> Shield</span>\n        }else if(vl===\"MD\"){\n            return <span><span className='icon icon-melee'></span> Melee</span>\n        }else if(vl===\"ID\"){\n            return <span><span className='icon icon-indirect'></span> Indirect</span>\n        }else if(vl===\"Dc\"){\n            return <span><span className='icon icon-discard'></span> Discard</span>\n        }else if(vl===\"Dr\"){\n            return <span><span className='icon icon-disrupt'></span> Disrupt</span>\n        }else if(vl===\"F\"){\n            return <span><span className='icon icon-focus'></span> Focus</span>\n        }else if(vl===\"Sp\"){\n            return <span><span className='icon icon-special'></span> Special</span>\n        }else if(vl===\"R\"){\n            return <span><span className='icon icon-resource'></span> Special</span>\n        }else if(vl===\"-\"){\n            return <span><span className='icon icon-blank'></span> Blank</span>\n        }else if(vl===\"+\"){\n            return <span>Modified</span>\n        }else if(vl.includes(\"H\")){\n            return <span><FontAwesomeIcon icon={faHeart}/> {vl.substring(0, vl.length - 1)}</span>\n        }else if(vl.includes(\"P\")){\n            return <span><FontAwesomeIcon icon={faCircle}/> {vl.substring(0, vl.length - 1)}</span>\n        }else if(vl.includes(\"C\")){\n            return <span><span className='icon icon-resource '></span> {vl.substring(0, vl.length - 1)}</span>\n        }else if (isNaN(vl)) {\n            return vl.charAt(0).toUpperCase() + vl.substring(1)\n        } else {\n            return vl\n        }\n    };\n\n    let text = (vl)=>{\n\n        if(vl.includes(\"H\")){\n            return Number(vl.substring(0, vl.length - 1));\n        }else if(vl.includes(\"P\")){\n            return vl.substring(0, vl.length - 1)\n        }else if(vl.includes(\"C\")){\n            return Number(vl.substring(0, vl.length - 1));\n        }else{\n            return vl\n        }\n    };\n\n    return (\n        <div className={\"itm\"} onClick={()=>handleSort(props.prp,(props.prp===\"set_name\"?props.val:text(props.val)))}\n            style={style} onMouseEnter={hoverChange}\n             onMouseLeave={hoverChange}>{(props.prp===\"set_name\"?props.val:numberCheck(props.val))} <FontAwesomeIcon icon={faTimes}/></div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted,\n        style: state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSort: (prop, val) => {\n            dispatch(setSort(prop,  val))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortTag);","import React from 'react';\nimport SortTag from './SortTag';\nimport {connect} from 'react-redux';\n\nfunction SortNav(props) {\n\n    const [show, updateShow] = React.useState(false);\n    const [tags, updateTags] = React.useState([]);\n\n\n    React.useEffect(() => {\n        let check = false;\n        let tagArray = [];\n\n\n        for (let p in props.sorted) {\n\n            if (props.sorted[p].toggle) {\n                check = true;\n                for(let x=0; x<props.sorted[p].val.length; x++){\n                    let obj = {\n                        prop:p,\n                        val:\"\"\n                    };\n                    if(p==='health'){\n                        obj.val=props.sorted[p].val[x]+\"H\";\n                    }else if(p==='points'){\n                        obj.val=props.sorted[p].val[x]+\"P\";\n                    }else if(p==='cost'){\n                        obj.val=props.sorted[p].val[x]+\"C\";\n                    }else{\n                        obj.val=props.sorted[p].val[x];\n                    }\n                    tagArray.push(obj)\n                }\n            }\n\n\n\n        }\n\n        updateShow(check);\n        updateTags(tagArray);\n    },\n[props.sorted]);\n\nlet shower;\n\nif (show) {\n    shower = {\n        top: '80px',\n        backgroundColor: props.style.bodyText\n    }\n} else {\n    shower = {\n        top: '-80px',\n        backgroundColor: props.style.bodyText\n    }\n}\n\n\nlet tagEles = tags.map((st, idx) =>\n    <SortTag key={idx} val={st.val} prp={st.prop}/>\n);\n\nreturn (\n    <div className={\"sortNav\"} style={shower}>\n        {tagEles}\n    </div>\n)\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted,\n        style: state.style\n    }\n};\n\nexport default connect(mapStateToProps)(SortNav);","import React from 'react';\nimport {setStyles} from \"../../redux/actions/setActions\";\nimport {connect} from \"react-redux\";\n\nfunction StyleOption(props) {\n\n    const [hover, setHover] = React.useState(false)\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n    let active;\n\n    if(hover){\n        if(props.style.navText===undefined){\n            active = {\n                backgroundColor: '#343740',\n                color:'white'\n            }\n        }else{\n            active = {\n                backgroundColor: props.style.bodyText,\n                color:props.style.navText\n            }\n        }\n    }else{\n        if(props.opt.name===props.style.name){\n            active={\n                backgroundColor:props.style.navText,\n                color:props.style.nav\n            }\n        }else{\n            active={\n                backgroundColor:props.style.nav,\n                color:props.style.navText\n            }\n        }\n    }\n\n\n\n\n\n    return (\n\n        <div className={\"item\"} onMouseEnter={hoverChange} onMouseLeave={hoverChange} style={active} onClick={() => props.setStyles(props.opt)}>{props.opt.name}</div>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setStyles: (style) => {\n            dispatch(setStyles(style))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StyleOption);","export const Styles = [\n    {\n        name:\"Awakenings\",\n        nav:\"white\",\n        body:\"black\",\n        navText:\"black\",\n        bodyText:\"#c4c4c4\"\n    },\n    {\n        name:\"Legacies\",\n        nav:\"red\",\n        body:\"white\",\n        navText:\"white\",\n        bodyText:\"#640f18\"\n    },\n    {\n        name:\"Convergence\",\n        nav:\"#343740\",\n        body:\"#ededed\",\n        navText:\"white\",\n        bodyText:\"#666a77\"\n    }\n];","import React from 'react';\nimport StyleOption from './StyleOption';\nimport {connect} from \"react-redux\";\nimport {Styles} from './../../data/Style';\n\nfunction StyleOptions(props) {\n\n    let show;\n\n    if (props.styles) {\n        show={\n            \"right\":\"0\",\n            backgroundColor:props.style.navText,\n            color:props.style.nav\n        }\n    }else{\n        show={\n            \"right\":\"-100%\",\n            backgroundColor:props.style.navText,\n            color:props.style.nav\n        }\n    }\n\n    let styles = Styles.map((srt, idx) =>\n        <StyleOption key={idx} opt={srt}/>\n    );\n\n\n    return (\n        <div className={\"navOptions\"} style={show}>\n            <div className={\"top\"}><h1 style={{color:props.style.nav}}>Change Style</h1></div>\n            <div className={\"wrapper\"}>\n                {styles}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        styles: state.styles,\n        style: state.style\n    }\n};\n\n\n\nexport default connect(mapStateToProps)(StyleOptions);\n\n","import React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage'\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport SortNav from './components/nav/SortNav'\nimport StyleOptions from './components/nav/StyleOptions';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\n\nimport {connect} from 'react-redux';\nimport {setCards, setFormats, setSets} from \"./redux/actions/setActions\";\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\n\nfunction App(props) {\n\n    const [show, updateShow] = React.useState(false);\n    const [seconds, setSeconds] = React.useState(0);\n    const [pad, setPad] = React.useState(60);\n    // const [load, setLoad] =React.useState(\"load\");\n\n\n    React.useEffect(() => {\n        localStorage.setItem('localStyle', JSON.stringify(props.style));\n        // let loadCards=\"load\";\n        // let loadFormats=\"load\";\n        // let loadSets=\"load\";\n        //\n        // fetch(\"https://swdestinydb.com/api/public/cards/\")\n        //     .then(response => {\n        //         return response.json();\n        //     })\n        //     .then((data) => {\n        //         loadCards=\"loaded\";\n        //         props.setCards(data);\n        //     }).catch(function () {\n        //     loadCards=\"error\";\n        // });\n        //\n        // fetch(\"https://swdestinydb.com/api/public/formats/\")\n        //     .then(response => {\n        //         return response.json();\n        //     })\n        //     .then((data) => {\n        //         loadFormats=\"loaded\";\n        //         props.setFormats(data);\n        //     }).catch(function () {\n        //     loadCards=\"error\";\n        // });\n        //\n        // fetch(\"https://swdestinydb.com/api/public/sets/\")\n        //     .then(response => {\n        //         return response.json();\n        //     })\n        //     .then((data) => {\n        //         loadSets=\"loaded\";\n        //         props.setSets(data);\n        //     }).catch(function () {\n        //     loadCards=\"error\";\n        // });\n        //\n        // if(loadCards===\"loaded\"&&loadFormats===\"loaded\"&&loadSets===\"loaded\"){\n        //     setLoad(\"loaded\")\n        // }else if(loadCards===\"error\"||loadFormats===\"error\"||loadSets===\"error\"){\n        //     setLoad(\"error\");\n        // }\n\n        let check = false;\n\n        for (let p in props.sorted) {\n            if (props.sorted[p].toggle) {\n                check = true;\n            }\n        }\n\n        updateShow(check);\n\n        let interval = null;\n\n        interval = setInterval(() => {\n            setSeconds(seconds => seconds + 1);\n        }, 500);\n\n        // if(load===\"loaded\"){\n            setPad(document.querySelector(\".sortNav\").getBoundingClientRect().height);\n\n            document.documentElement.style.backgroundColor = props.style.body;\n        // }\n\n\n        return () => clearInterval(interval);\n\n    }, [props.style, props.sorted, seconds]);\n\n    let appStyle = {\n        backgroundColor: props.style.body\n    };\n\n    let wrapStyle = {\n        color: props.style.bodyText,\n        backgroundColor: props.style.body,\n        paddingTop: (show ? \"\" + pad + \"px\" : \"0\")\n    };\n\n    return (\n\n        <div className=\"App\" style={appStyle}>\n            {/*{load===\"loaded\"&&<span><Nav/> <SortNav/> <Options/> <StyleOptions/> <div className={\"mainWrapper\"} style={wrapStyle}><Switch><Route path=\"/\" component={List}/></Switch></div><Route path={\"/:id\"} component={CardPage}/></span>}*/}\n            {/*{load===\"load\"&&<div style={{height:\"100%\"}}><FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color:props.style.bodyText}}/></div>}*/}\n            <Nav/>\n            <SortNav/>\n            <Options/>\n            <StyleOptions/>\n            <div className={\"mainWrapper\"} style={wrapStyle}>\n                <Switch>\n                    <Route path=\"/\" component={List}/>\n                </Switch>\n            </div>\n            <Route path={\"/:id\"} component={CardPage}/>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style,\n        sorted: state.sorted\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setCards: (crds) => {\n            dispatch(setCards(crds))\n        },\n        setFormats: (fmts) => {\n            dispatch(setFormats(fmts))\n        },\n        setSets: (sts) => {\n            dispatch(setSets(sts))\n        },\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    cards:[],\n    formats:[],\n    sets:[],\n    itemLimit: 10,\n    sorted:{\n        rarity_name: {toggle: false, val: []},\n        affiliation_code: {toggle: false, val: []},\n        type_code: {toggle: false, val: []},\n        faction_code: {toggle: false, val: []},\n        set_name:{toggle:false,val:[]},\n        health: {toggle: false, val: []},\n        cost: {toggle: false, val: []},\n        points: {toggle: false, val: []},\n        sides:{toggle: false, val:[]},\n        formats:{toggle:false, val:[]},\n        restricted:{toggle:false,val:[]},\n        balanced:{toggle:false,val:[]},\n        keywords:{toggle:false,val:[]}\n    },\n    style:JSON.parse(localStorage.getItem('localStyle')) || '',\n    name: \"\",\n    options:false,\n    styles:false\n\n\n};\n\n\nconst rootReducer = (state = initState, action) => {\n\n    if (action.type === 'INCREASE_LIMIT') {\n\n        let val = state.itemLimit;\n\n        val = val + 10;\n\n\n        return {\n            ...state,\n            itemLimit: val\n        }\n    }\n\n    if (action.type === 'SET_SORT') {\n\n        let orgArray = state.sorted[action.prop].val;\n\n        if(orgArray.includes(action.val)){\n            let ind = orgArray.indexOf(action.val);\n            orgArray.splice(ind,1);\n\n        }else{\n            orgArray.push(action.val)\n        }\n\n        let togg = orgArray.length > 0;\n\n        return {\n            ...state,\n            itemLimit:10,\n            sorted:{\n                ...state.sorted,\n                [action.prop]: {\n                    toggle: togg,\n                    val: orgArray\n                }\n            }\n\n        }\n\n    }\n\n    if(action.type === 'SET_NAME'){\n        return{\n            ...state,\n            name:action.name\n        }\n    }\n\n    if(action.type === 'SET_STYLE'){\n\n        document.documentElement.style.backgroundColor=action.style.body;\n\n        return{\n            ...state,\n            style:action.style\n        }\n    }\n\n    if(action.type === 'TOGGLE_OPTIONS'){\n\n        return{\n            ...state,\n            options:!state.options,\n            styles:false\n        }\n    }\n\n    if(action.type === 'TOGGLE_STYLES'){\n\n\n        return{\n            ...state,\n            styles:!state.styles,\n            options:false\n        }\n    }\n\n    if(action.type === 'CLEAR_OPTIONS'){\n\n        return{\n            ...state,\n            itemLimit: 10,\n            sorted:{\n                rarity_name: {toggle: false, val: []},\n                affiliation_code: {toggle: false, val: []},\n                type_code: {toggle: false, val: []},\n                faction_code: {toggle: false, val: []},\n                set_name:{toggle:false,val:[]},\n                health: {toggle: false, val: []},\n                cost: {toggle: false, val: []},\n                points: {toggle: false, val: []},\n                sides:{toggle: false, val:[]},\n                formats:{toggle:false, val:[]},\n                restricted:{toggle:false,val:[]},\n                balanced:{toggle:false,val:[]},\n                keywords:{toggle:false,val:[]}\n            },\n            name: \"\",\n            options:false,\n            styles:false\n        }\n    }\n\n    if(action.type === 'SET_CARDS'){\n        return{\n            ...state,\n            cards:action.cards\n        }\n    }\n\n    if(action.type === 'SET_FORMATS'){\n        return{\n            ...state,\n            formats:action.fmts\n        }\n    }\n\n    if(action.type === 'SET_SETS'){\n        return{\n            ...state,\n            sets:action.sts\n        }\n    }\n\n\n    return state;\n};\n\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {createStore} from 'redux';\nimport {Provider} from \"react-redux\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from \"./redux/reducers\";\nimport {HashRouter as Router} from \"react-router-dom\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n            <App/>\n        </Router>\n    </Provider>,\n\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}