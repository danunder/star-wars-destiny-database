{"version":3,"sources":["assets/convergencelogo.svg","assets/schoolImage.jpeg","assets sync /^/.//.*logo/.svg$","assets/awakeningslogo.svg","assets/legacieslogo.svg","redux/actions/setActions.js","components/card/Card.js","components/input/Button.js","components/main/List.js","components/card/Side.js","components/card/CardInfo.js","components/card/CardPage.js","components/main/About.js","components/input/Search.js","components/nav/Navigation.js","components/footer/Footer.js","components/nav/OptionItem.js","components/nav/Option.js","components/nav/options.js","components/nav/SortTag.js","components/nav/SortNav.js","components/nav/StyleOption.js","data/Style.js","components/nav/StyleOptions.js","App.js","serviceWorker.js","redux/reducers/index.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","setName","name","type","setSort","prop","val","Card","props","imgStyle","React","useState","load","updateLoading","img","error","rend","rendElement","seconds","setSeconds","style","useSelector","state","useEffect","interval","setInterval","imagesrc","clearInterval","color","bodyText","className","bod","alt","onLoad","onError","src","icon","faSpinner","spin","size","loadColor","faCircle","faExclamationCircle","Button","styler","hover","setHover","nav","backgroundColor","navText","hoverChange","onClick","handleClick","bind","this","onMouseEnter","onMouseLeave","text","List","cardEle","sort","itemLimit","sorted","cards","formats","dispatch","useDispatch","sortObject","sortedList","p","toggle","filter","crd","ret","points","arrayPoints","split","i","length","v","hasOwnProperty","sides","includes","q","data","sets","set_code","y","restricted","balance","balanced","keywords","toLowerCase","toUpperCase","slice","idx","to","key","button","Side","finished","setVal","sd","setClass","isNaN","dangerouslySetInnerHTML","__html","CardInfo","format","legal","rst","setRst","stFormats","formatSet","fm","push","is_unique","health","faHeart","cost","type_name","undefined","subtypes","sb","has_errata","replace","flavor","affiliation_name","rarity_name","faction_code","set_name","position","CardPage","card","setCard","status","cardMain","match","params","faTimes","About","IMG","Search","sty","sg","close","placeholder","value","onChange","event","target","Nav","options","styles","require","faPalette","faSearch","Footer","borderTop","href","rel","OptionItem","shower","faCheckSquare","faSquare","charAt","substring","Option","drop","toggleDrop","opt","values","op","faChevronDown","faChevronUp","Options","show","Sets","srt","SortTag","body","vl","prp","Number","SortNav","updateShow","tags","updateTags","check","tagArray","x","obj","top","tagEles","st","StyleOption","active","setStyles","Styles","StyleOptions","App","pad","setPad","loadCard","setLoadCards","loadFormat","setLoadFormat","loadSet","setLoadSet","setLoad","localStorage","setItem","JSON","stringify","fetch","then","response","json","catch","fmts","sts","document","querySelector","getBoundingClientRect","height","documentElement","appStyle","wrapStyle","paddingTop","path","component","exact","Boolean","window","location","hostname","initState","affiliation_code","type_code","parse","getItem","rootReducer","action","orgArray","ind","indexOf","splice","togg","store","createStore","ReactDOM","render","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fede9740.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/convergencelogo.f7ca2921.svg\";","module.exports = __webpack_public_path__ + \"static/media/schoolImage.74e3f05b.jpeg\";","var map = {\n\t\"./awakeningslogo.svg\": 49,\n\t\"./convergencelogo.svg\": 27,\n\t\"./legacieslogo.svg\": 50\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48;","module.exports = __webpack_public_path__ + \"static/media/awakeningslogo.519004a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/legacieslogo.f7ca2921.svg\";","export const changeLimit = () => {\n    return {\n        type: 'INCREASE_LIMIT'\n    }\n};\n\nexport const setName = (name) => {\n    return {\n        type: 'SET_NAME',\n        name:name\n    }\n};\n\nexport const setSort = (prop, val) => {\n    return {\n        type: 'SET_SORT',\n        prop: prop,\n        val: val\n    }\n};\n\nexport const toggleOptions = () => {\n    return {\n        type: 'TOGGLE_OPTIONS'\n    }\n};\n\nexport const toggleStyles = () => {\n    return {\n        type: 'TOGGLE_STYLES'\n    }\n};\n\nexport const setStyles = (style) => {\n    return {\n        type: 'SET_STYLE',\n        style:style\n\n    }\n};\n\nexport const clearOptions = () =>{\n    return {\n        type: 'CLEAR_OPTIONS'\n    }\n};\n\nexport const setCards = (cards) =>{\n    return {\n        type: 'SET_CARDS',\n        cards:cards\n    }\n};\n\nexport const setFormats = (fmts) =>{\n    return {\n        type: 'SET_FORMATS',\n        fmts:fmts\n    }\n};\n\nexport const setSets = (sts) =>{\n    return {\n        type: 'SET_SETS',\n        sts:sts\n    }\n};","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle, faCircle} from '@fortawesome/free-solid-svg-icons';\nimport { useSelector } from \"react-redux\";\nfunction Card(props) {\n\n    const [load, updateLoading] = React.useState(\"loading\");\n    const [rend, rendElement] = React.useState({\n        img:false,\n        load:true,\n        error:false\n    });\n    const [seconds, setSeconds] = React.useState(0);\n    const style =useSelector(state=>state.style);\n\n    React.useEffect(() => {\n        let interval = null;\n\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds + 1);\n                if (load) {\n                    if(props.imagesrc===null){\n                        rendElement({\n                            img:false,\n                            load:false,\n                            error:true\n                        });\n                    }else{\n                        rendElement({\n                            img:true,\n                            load:false,\n                            error:false\n                        });\n                    }\n\n                } else {\n                    if(seconds>3){\n                        rendElement({\n                            img:false,\n                            load:false,\n                            error:true\n                        });\n                    }else{\n                        rendElement({\n                            img:false,\n                            load:true,\n                            error:false\n                        });\n                    }\n                }\n            }, 1000);\n\n        return () => clearInterval(interval);\n    }, [seconds, load, props.imagesrc]);\n\n    const handleImageLoad = () => {\n        updateLoading(true)\n    };\n\n    const handleImageError = () => {\n        updateLoading(false)\n    };\n\n    let imgStyle;\n\n    if(style===\"\"){\n        imgStyle = {\n            color:\"black\"\n        };\n    }else{\n        imgStyle = {\n            color:style.bodyText\n        };\n    }\n\n\n    return (\n        <div className={\"card\"}>\n            {props.bod&&rend.error?<h1 style={{color:style.bodyText}}>{props.name}</h1>:null}\n            <div className={\"cardWrapper\"}>\n                {rend.img && <img alt={props.name} onLoad={handleImageLoad} onError={handleImageError} src={props.imagesrc} style={imgStyle}/>}\n\n                    {rend.load&&<FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color:props.loadColor}}/>}\n                    {rend.error&&<div className={\"errorBox\"}><h4 style={{color:(props.bod?style.bodyText:'white')}}>Error Loading Image</h4><div className=\"fa-layers fa-fw\"><FontAwesomeIcon style={{color:\"white\"}} icon={faCircle} size={\"6x\"} /><FontAwesomeIcon icon={faExclamationCircle} style={{color:\"red\"}} size={\"6x\"}/></div></div>}\n\n            </div>\n\n\n        </div>\n    )\n}\n\n\nexport default Card;\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\n\nfunction Button(props){\n\n    const [hover, setHover] = React.useState(false)\n    const style =useSelector(state=>state.style);\n    let styler;\n\n    if(hover){\n        styler = {\n            color:style.nav,\n            backgroundColor:style.navText\n        };\n    }else{\n        styler = {\n            color:style.navText,\n            backgroundColor:style.nav\n        };\n    }\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n\n    return (\n        <div className={\"button\"} style={styler} onClick={props.handleClick.bind(this)} onMouseEnter={hoverChange}\n             onMouseLeave={hoverChange} >\n            {props.text}\n        </div>\n    )\n}\n\n\n\nexport default Button;","import React from 'react';\nimport {changeLimit} from \"../../redux/actions/setActions\";\nimport Card from '../card/Card';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Button from '../input/Button';\nimport {Link} from 'react-router-dom';\n\nfunction List() {\n\n    const [sort, setSort] = React.useState([]);\n    const [load] = React.useState(true);\n    const [error] = React.useState(false);\n\n    const itemLimit =useSelector(state=>state.itemLimit);\n    const sorted =useSelector(state=>state.sorted);\n    const name =useSelector(state=>state.name);\n    const cards =useSelector(state=>state.cards);\n    const formats =useSelector(state=>state.formats);\n\n    const dispatch = useDispatch();\n\n\n    React.useEffect(() => {\n\n\n        function sortObject() {\n\n            let sortedList = cards;\n\n            for (let p in sorted) {\n\n\n                if (sorted[p].toggle) {\n\n                    if (p === \"points\") {\n\n\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            if (crd.points !== null) {\n                                let arrayPoints = crd.points.split(\"/\");\n                                for (let i = 0; i < sorted.points.val.length; i++) {\n                                    for (let v = 0; v < arrayPoints.length; v++) {\n                                        if (arrayPoints[v] === sorted.points.val[i]) {\n\n                                            ret = true;\n                                        }\n                                    }\n                                }\n                            }\n                            return (ret ? crd : null)\n\n                        });\n\n\n                    } else if (p === \"sides\") {\n\n                        for (let i = 0; i < sorted.sides.val.length; i++) {\n\n                            sortedList = sortedList.filter(crd => {\n                                let ret = false;\n                                if (crd.hasOwnProperty('sides')) {\n                                    for (let v = 0; v < crd.sides.length; v++) {\n                                        if (crd.sides[v].includes(sorted.sides.val[i])) {\n                                            ret = true\n                                        }\n                                    }\n                                }\n                                return (ret ? crd : null)\n\n                            });\n                        }\n\n\n                    } else if (p === 'formats') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for (let i = 0; i < formats.length; i++) {\n                                for (let q = 0; q < sorted.formats.val.length; q++) {\n                                    if (formats[i].name === sorted.formats.val[q] && formats[i].data.sets.includes(crd.set_code)) {\n                                        ret = true;\n                                    }\n                                }\n                            }\n                            return (ret ? crd : null);\n                        });\n                    }else if (p === 'restricted') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for(let y=0; y<formats.length; y++){\n                                for (let i = 0; i < formats[y].data.restricted.length; i++) {\n                                    if(formats[y].data.restricted[i]===crd.code&&sorted.restricted.val.includes(\"restricted\")){\n                                        ret=true\n                                    }\n                                }\n                            }\n\n                            return (ret ? crd : null);\n                        });\n                    }else if (p === 'balanced') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for(let y=0; y<formats.length; y++){\n                                for (let i in formats[y].data.balance) {\n                                    if(i===crd.code&&sorted.balanced.val.includes(\"balanced\")){\n                                        ret=true\n                                    }\n                                }\n                            }\n\n                            return (ret ? crd : null);\n                        });\n                    }else if (p === 'keywords') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for(let i=0; i<sorted.keywords.val.length; i++){\n                                if(crd.text!==null&&crd.text.includes(sorted.keywords.val[i])){\n                                    ret=true;\n                                }\n                            }\n                            return (ret ? crd : null);\n                        });\n                    } else {\n                        sortedList = sortedList.filter(crd => {\n\n                            return sorted[p].val.includes(crd[p])\n\n                        });\n                    }\n                }\n            }\n\n\n            if (name !== '') {\n                sortedList = sortedList.filter(crd => {\n                    if (crd.name.includes(name)) {\n                        return true\n                    } else if (crd.name.toLowerCase().includes(name)) {\n                        return true\n                    } else return crd.name.toUpperCase().includes(name);\n                });\n            }\n\n\n            setSort(sortedList)\n        }\n\n        sortObject();\n\n        return () => {\n            sortObject();\n        }\n\n    }, [load, name, sorted, cards, formats]);\n\n\n    let cardEle;\n\n    if (sort.length !== 0) {\n        cardEle = sort.slice(0,itemLimit).map((crd, idx) =>\n\n\n            <Link to={\"/card/\" + crd.code} key={idx} className={\"cardFlop\"}>\n\n                <Card name={crd.name} bod={true} imagesrc={crd.imagesrc} code={crd.code}\n                      loadColor={\"#343740\"}/>\n            </Link>\n        );\n    } else if (!load && !error) {\n        cardEle = <h1>No cards in search</h1>;\n    } else if (load && !error) {\n        cardEle = <h1>Fetching Cards...</h1>;\n    } else if (load && error) {\n        cardEle = <h1>Loading Cards failed. Refresh page...</h1>;\n    }\n\n\n    const button = () => {\n        if (itemLimit < sort.length && sort.length > 10) {\n            return <Button handleClick={() => dispatch(changeLimit())} text={\"Load More\"}/>\n        }\n    };\n\n\n    return (\n\n        <div className={\"list\"}>\n            <div className={\"wrapper\"}>\n                {cardEle}\n            </div>\n            {button()}\n        </div>\n    );\n}\n\n\nexport default List;\n","import React from 'react';\n\nfunction Side(props){\n\n    let finished;\n\n    function setVal (){\n        if(props.sd.includes(\"+\")){\n            return \"+ \"+props.sd[1];\n        }else if(props.sd.includes(\"Sp\")){\n            return \"\";\n        }else{\n            return props.sd[0];\n        }\n    }\n\n    function setClass(){\n        if(props.sd.includes(\"+\")){\n            return true\n        }else{\n            return false\n        }\n    }\n\n\n    if(props.sd.includes(\"RD\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-ranged '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-ranged '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Sh\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-shield '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-shield '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"MD\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-melee '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-melee '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"ID\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-indirect '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-indirect '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Dc\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-discard '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-discard '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Dr\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-disrupt '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-disrupt '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"F\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-focus '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-focus '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Sp\")){\n        finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-special '></span></span>\";\n    }else if(props.sd.includes(\"R\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-resource '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-resource '></span></span>\";\n        }\n\n    }else{\n        finished = \"<span class='blank'>-</span>\"\n    }\n\n\n\n    if(!isNaN(props.sd[props.sd.length-1])&&props.sd[props.sd.length-1]!==\"-\"){\n        if(setClass()){\n            finished = finished+\"<span class='res modify'> <span>\"+props.sd[props.sd.length-1]+\"</span> <span\" +\n                \" class='icon\" +\n                \" icon-resource'></span></span>\"\n        }else{\n            finished = finished+\"<span class='res'> <span>\"+props.sd[props.sd.length-1]+\"</span> <span\" +\n                \" class='icon\" +\n                \" icon-resource'></span></span>\"\n        }\n\n    }\n\n\n\n\n    return(\n        <div className={\"side\"} dangerouslySetInnerHTML={{ __html: finished }}></div>\n    )\n}\n\nexport default Side","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle, faHeart} from '@fortawesome/free-solid-svg-icons';\nimport Side from './Side';\nimport { useSelector } from \"react-redux\";\n\n\nfunction CardInfo(props) {\n\n    const [rst, setRst] = React.useState([\n\n        {\n            format: \"trilogy\",\n            restricted: false,\n            balance: \"--\",\n            legal: false\n        },\n        {\n            format: \"standard\",\n            restricted: false,\n            balance: \"--\",\n            legal: false\n        },\n        {\n            format: \"infinite\",\n            restricted: false,\n            balance: \"--\",\n            legal: true\n        }\n    ]);\n\n    const stFormats =useSelector(state=>state.formats);\n\n    const [rend, rendElement] = React.useState({\n        rst: false,\n        load: true,\n        error: false\n    });\n\n\n    React.useEffect(() => {\n\n\n        function handleStatusChange(status) {\n            setRst(status);\n        }\n\n\n        let formatSet = [];\n\n        stFormats.map((fm) => {\n\n            let format = {\n                name: fm.name,\n                restricted: false,\n                balance: \"--\",\n                legal: false\n            };\n\n            if (props.code in fm.data.balance) {\n                format.balance = fm.data.balance[props.code];\n            }\n\n            if (fm.data.restricted.includes(props.code)) {\n                format.restricted = true;\n            }\n\n            if (fm.data.sets.includes(props.crd.set_code)) {\n                format.legal = true;\n            }\n\n            rendElement({rst: true, load: false, error: false});\n\n\n            return formatSet.push(format);\n\n        });\n\n        handleStatusChange(formatSet);\n\n\n    }, [props.code, props.crd.set_code, stFormats]);\n\n    let formats = rst.map((fm, idx) =>\n        <div key={idx} className={\"format\"}>\n            <h3>{fm.name}</h3>\n            <h5 className={\"restrict\"}>{fm.restricted ? \"Restricted\" : null}</h5>\n            <h3>{fm.balance}</h3>\n            <h6 className={!fm.legal ? \"restrict\" : null}>{fm.legal ? \"Playable\" : \"Unplayable\"}</h6>\n        </div>\n    );\n\n\n    return (\n        <div className={\"cardInfo\"}>\n            <h1>{props.crd.is_unique && \"◆ \"}{props.crd.name}</h1>\n            {props.crd.health &&\n            <h2><FontAwesomeIcon icon={faHeart} size={\"lg\"} style={{color: \"red\"}}/> {props.crd.health}</h2>}\n            {props.crd.cost !== null &&\n            <h2 className={\"cost\"}><span className='icon icon-resource '></span> {props.crd.cost} </h2>}\n            <h2>{props.crd.points && \"Points:\"}{props.crd.points}</h2>\n            <h2>{props.crd.type_name}</h2>\n            <div className={\"subtypes\"}>{props.crd.subtypes !== undefined && props.crd.subtypes.map((sb, idx) =>\n                <h3 key={idx}>{sb.name}{idx !== (props.crd.subtypes.length - 1) && \"-\"}</h3>\n            )}</div>\n            <div className={\"sides\"}>{props.crd.sides !== undefined && props.crd.sides.map((sd, idx) =>\n                <Side key={idx} sd={sd}/>\n            )}</div>\n            <div className={\"formats\"}>\n                {rend.rst && formats}\n            </div>\n            <div>\n                {rend.load && <FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color: props.loadColor}}/>}\n                {rend.error && <FontAwesomeIcon icon={faExclamationCircle} style={{color: \"red\"}} size={\"6x\"}/>}\n            </div>\n            <div className={\"text\"}>\n                <h3 className={\"errata\"}>{props.crd.has_errata && \"This card has an errata\"}</h3>\n                {props.crd.text !== null && <p dangerouslySetInnerHTML={{\n                    __html: props.crd.text.replace(\"[special]\", \"<span class='icon\" +\n                        \" icon-special '></span>\").replace(\"([special])\", \"(<span class='icon\" +\n                        \" icon-special '></span>)\").replace(\"([indirect])\", \"(<span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"([melee])\", \"(<span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>)\").replace(\"([discard])\", \"(<span class='icon\" +\n                        \" icon-discard '></span>)\").replace(\"([focus])\", \"(<span class='icon\" +\n                        \" icon-focus '></span>)\").replace(\"([disrupt])\", \"(<span class='icon\" +\n                        \" icon-disrupt '></span>)\").replace(\"([shield])\", \"(<span class='icon\" +\n                        \" icon-shield '></span>)\").replace(\"([resource])\", \"(<span class='icon\" +\n                        \" icon-resource '></span>)\").replace(\"([blank])\", \"(<span class='icon\" +\n                        \" icon-blank '></span>)\").replace(\"([ranged] or [melee])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([melee] or [ranged])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged] or [melee])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged], [melee] or [indirect])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>, <span class='icon\" +\n                        \" icon-melee '></span> or <span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"([ranged], [melee], or [indirect])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>, <span class='icon\" +\n                        \" icon-melee '></span> or <span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"[AW]\", \"<span class='icon\" +\n                        \" icon-set-AW'></span>\").replace(\"[WotF]\", \"<span class='icon\" +\n                        \" icon-set-WotF'></span>\").replace(\"[RIV]\", \"<span class='icon\" +\n                        \" icon-set-RIV'></span>\").replace(\"[SoR]\", \"<span class='icon\" +\n                        \" icon-set-SoR'></span>\").replace(\"[LEG]\", \"<span class='icon\" +\n                        \" icon-set-LEG'></span>\").replace(\"[EaW]\", \"<span class='icon\" +\n                        \" icon-set-EaW'></span>\").replace(\"[AtG]\", \"<span class='icon\" +\n                        \" icon-set-AtG'></span>\").replace(\"[CONV]\", \"<span class='icon\" +\n                        \" icon-set-CONV'></span>\").replace(\"[AoN]\", \"<span class='icon\" +\n                        \" icon-set-AoN'></span>\").replace(\"[SoH]\", \"<span class='icon\" +\n                        \" icon-set-SoH'></span>\")\n                }} className={\"effects\"}></p>}\n\n                <i>{props.crd.flavor !== null && props.crd.flavor.replace(\"<cite>\", \"-\").replace(\"</cite>\", \"\")}</i>\n\n                <div className={\"bottom\"}>\n                    <div className={\"affl \" + props.crd.affiliation_name}>{props.crd.affiliation_name}</div>\n\n                    <div className={\"rr \" + props.crd.rarity_name}>{props.crd.rarity_name}</div>\n\n                    <div className={\"color\"} style={{\n                        backgroundColor: props.crd.faction_code,\n                        color: (props.crd.faction_code === 'blue' ? 'white' : 'black')\n                    }}>\n                        {props.crd.faction_code.toUpperCase()}\n                    </div>\n                    <div className={\"setStuff\"}><span\n                        className={\"icon icon-set-\" + props.crd.set_code}></span>{props.crd.set_name}: {props.crd.position}\n                    </div>\n                </div>\n\n\n            </div>\n\n\n        </div>\n    )\n}\n\n\n\nexport default CardInfo;","import React from 'react';\nimport {\n    Link\n} from \"react-router-dom\";\nimport Card from './Card';\nimport CardInfo from './CardInfo';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle, faTimes} from '@fortawesome/free-solid-svg-icons';\nimport {useSelector} from \"react-redux\";\n\n\nfunction CardPage(props) {\n\n    const [card, setCard] = React.useState(\"\");\n\n    const [rend, rendElement] = React.useState({\n        crd: false,\n        load: true,\n        error: false\n    });\n\n    const style =useSelector(state=>state.style);\n    const cards =useSelector(state=>state.cards);\n\n    React.useEffect(() => {\n\n\n            function handleStatusChange(status) {\n                rendElement({\n                    crd: true,\n                    load: false,\n                    error: false\n                });\n                setCard(status)\n            }\n\n\n            let cardMain = cards.filter(crd => {\n                return props.match.params.id === crd.code;\n            });\n\n            handleStatusChange(cardMain[0]);\n\n\n        }\n\n        ,\n        [props.match.params.id, cards]\n    )\n    ;\n\n    const code = card.code;\n\n\n    return (\n        <Link className={props.match.params.id ? \"cardPageWrapper\" : undefined} to={\"/\"}>\n\n            <div className={\"close\"} style={{backgroundColor: style.navText, color: props.style.nav}}>\n                <FontAwesomeIcon icon={faTimes} size={\"4x\"}/>\n            </div>\n\n            {rend.load && <FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color: style.loadColor}}/>}\n            {rend.error && <FontAwesomeIcon icon={faExclamationCircle} style={{color: \"red\"}} size={\"6x\"}/>}\n\n            {rend.crd &&\n            <Card name={card.name} bod={false} imagesrc={card.imagesrc} code={card.code} loadColor={\"white\"}/>}\n            {code && <CardInfo crd={card} code={code}/>}\n\n        </Link>\n    )\n}\n\nexport default CardPage;","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome/index';\nimport {faTimes} from '@fortawesome/free-solid-svg-icons/index';\nimport {\n    Link\n} from \"react-router-dom\";\nimport IMG from '../../assets/schoolImage.jpeg';\n\n\nfunction About(props){\n\n    const style =useSelector(state=>state.style);\n\n    return(\n        <Link className={\"about\"} to={\"/\"}>\n            <div className={\"close\"} style={{backgroundColor: style.navText, color: style.nav}}>\n                <FontAwesomeIcon icon={faTimes} size={\"4x\"}/>\n            </div>\n            <div className={\"aboutWrp\"}>\n                <h1>About the App</h1>\n                <p>Star Wars: Destiny Database is a web application built to help enthusiasts of the dice and card game find the card they need quicker and faster based on the criteria they desire.</p>\n                <img alt={\"Lukes Profile\"} src={IMG}/>\n                <h1>About the Developer</h1>\n                <p>Luke Jones is a web applications instructor who teaches at Purdue University of Indianapolis. On his spare time, he enjoys developing fun web apps and playing a variety of tabletop games.</p>\n            </div>\n        </Link>\n    )\n}\n\nexport default About;","import React from 'react';\nimport {setName} from \"../../redux/actions/setActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\n\nfunction Search(props) {\n\n\n    const style =useSelector(state=>state.style);\n\n    const name =useSelector(state=>state.name);\n    const dispatch = useDispatch();\n\n    const handleChange = event => {\n        dispatch(setName(event.target.value));\n\n    };\n\n\n    let sty = {\n        backgroundColor: style.navText,\n        color: style.nav,\n\n    };\n\n    let sg = {\n        color: style.nav\n    };\n\n    let close = (name!==\"\"?<FontAwesomeIcon style={sg} icon={faTimes} onClick={()=>dispatch(setName(\"\"))}/>:null);\n\n    return (\n        <div className={\"searchContainer\"}>\n            <input style={sty} placeholder={\"Search Card by Name...\"} value={name} onChange={handleChange}\n                   className={\"search \"+style.name}/>\n            {close}\n        </div>\n\n    );\n}\n\n\n\n\n\nexport default Search;\n","import React from 'react';\nimport {toggleOptions, clearOptions, toggleStyles} from \"../../redux/actions/setActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Search from '../input/Search';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSearch, faTimes, faPalette} from '@fortawesome/free-solid-svg-icons';\n\nfunction Nav() {\n\n    const options = useSelector(state=>state.options);\n    const styles = useSelector(state=>state.styles);\n    const style = useSelector(state=>state.style);\n\n    const dispatch = useDispatch();\n\n    let styler= {\n        color:style.navText,\n        backgroundColor:style.nav\n    };\n\n\n\n    return (\n\n\n        <nav style={styler}>\n            <div className={\"logo\"} >\n                {(style.name!==undefined)?<img alt={\"logo\"} src={require(\"./../../assets/\"+style.name.toLowerCase()+\"logo.svg\")} onClick={()=>dispatch(clearOptions())}/>:<img alt={\"logo\"} src={require(\"./../../assets/convergencelogo.svg\")} onClick={()=>dispatch(clearOptions())}/>}\n                <h5>Database</h5>\n            </div>\n            <Search/>\n            <div className={\"ham\"} >\n\n                {!styles && <FontAwesomeIcon icon={faPalette} size=\"2x\" onClick={() => dispatch(toggleStyles())}/>}\n                {styles && <FontAwesomeIcon icon={faTimes} size=\"2x\" onClick={() => dispatch(toggleStyles())}/>}\n\n                {!options && <FontAwesomeIcon icon={faSearch} size=\"2x\" onClick={() => dispatch(toggleOptions())}/>}\n                {options && <FontAwesomeIcon icon={faTimes} size=\"2x\" onClick={() => dispatch(toggleOptions())}/>}\n\n            </div>\n\n        </nav>\n\n\n    );\n}\n\n\n\n\nexport default Nav;\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport {\n    Link\n} from \"react-router-dom\";\n\n\nfunction Footer() {\n\n    const style =useSelector(state=>state.style);\n\n    let styler = {\n        backgroundColor: style.nav,\n        color: style.navText,\n        borderTop: \"5px solid \" + style.bodyText\n    };\n\n    return (\n        <footer style={styler}>\n            <div className={\"wrp\"}>\n                <p>Learn <Link to={\"/about\"} style={{color: style.bodyText}}>About</Link> the web app</p>\n                <p>View the <a href={\"http://swdestinydb.com/api/\"} target={\"_blank\"} rel=\"noopener noreferrer\"\n                               style={{color: style.bodyText}}>API</a> used to power this Database</p>\n                <p>Post Issues and view the Repository here at <a style={{color: style.bodyText}}\n                                                                  href={\"https://github.com/joker-jonesy/star-wars-destiny-database\"}\n                                                                  target={\"_blank\"} rel=\"noopener noreferrer\">GitHub</a></p>\n                <p>The information presented on this site about Star Wars Destiny, both literal and graphical, is\n                    copyrighted by Fantasy Flight Games. This website is not produced, endorsed, supported, or\n                    affiliated with Fantasy Flight Games.</p>\n            </div>\n        </footer>\n    )\n}\n\n\n\nexport default Footer","import React from 'react';\nimport {setSort} from \"../../redux/actions/setActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCheckSquare, faSquare} from '@fortawesome/free-solid-svg-icons';\n\n\nfunction OptionItem(props) {\n\n    const [hover, setHover] = React.useState(false)\n    const style =useSelector(state=>state.style);\n    const sorted =useSelector(state=>state.sorted);\n    const dispatch = useDispatch();\n\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n\n\n    let shower;\n\n    const handleSort = (prop, val) => {\n        dispatch(setSort(prop,  val));\n    };\n\n    if(hover){\n        if(style.navText===undefined){\n            shower = {\n                backgroundColor: '#343740',\n                color:'white'\n            }\n        }else{\n            shower = {\n                backgroundColor: style.bodyText,\n                color:style.navText\n            }\n        }\n    }else{\n        if (sorted[props.type].val.includes(props.value) && sorted[props.type].toggle) {\n            if(style.navText===undefined){\n                shower = {\n                    backgroundColor: 'black',\n                    color:'white'\n                }\n            }else{\n                shower = {\n                    backgroundColor: style.navText,\n                    color:style.nav\n                }\n            }\n\n        }else{\n            if(style.navText===undefined){\n                shower = {\n                    backgroundColor: 'white',\n                    color:'black'\n                }\n            }else{\n                shower = {\n                    backgroundColor: style.nav,\n                    color:style.navText\n                }\n            }\n        }\n    }\n\n\n\n    const numberCheck = () => {\n        if(props.value===\"RD\"){\n            return <span><span className='icon icon-ranged'></span> Ranged</span>\n        }else if(props.value===\"Sh\"){\n            return <span><span className='icon icon-shield'></span> Shield</span>\n        }else if(props.value===\"MD\"){\n            return <span><span className='icon icon-melee'></span> Melee</span>\n        }else if(props.value===\"ID\"){\n            return <span><span className='icon icon-indirect'></span> Indirect</span>\n        }else if(props.value===\"Dc\"){\n            return <span><span className='icon icon-discard'></span> Discard</span>\n        }else if(props.value===\"Dr\"){\n            return <span><span className='icon icon-disrupt'></span> Disrupt</span>\n        }else if(props.value===\"F\"){\n            return <span><span className='icon icon-focus'></span> Focus</span>\n        }else if(props.value===\"Sp\"){\n            return <span><span className='icon icon-special'></span> Special</span>\n        }else if(props.value===\"R\"){\n            return <span><span className='icon icon-resource'></span> Resource</span>\n        }else if(props.value===\"-\"){\n            return <span><span className='icon icon-blank'></span> Blank</span>\n        }else if(props.value===\"+\"){\n            return <span>Modified</span>\n        }else if (isNaN(props.value)) {\n            return props.value.charAt(0).toUpperCase() + props.value.substring(1)\n        } else {\n            return props.value\n        }\n    };\n\n\n    return (\n        <div className={\"item\"} onMouseEnter={hoverChange}\n             onMouseLeave={hoverChange} style={shower} onClick={() => handleSort(props.type, props.value)}>{sorted[props.type].val.includes(props.value) && sorted[props.type].toggle ? <FontAwesomeIcon icon={faCheckSquare}/> :<FontAwesomeIcon icon={faSquare}/>} {numberCheck()}</div>\n    );\n\n}\n\n\n\n\n\n\nexport default OptionItem;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faChevronUp, faChevronDown} from '@fortawesome/free-solid-svg-icons';\nimport OptionItem from './OptionItem';\nimport {useSelector } from \"react-redux\";\n\nfunction Option (props){\n    const [drop, toggleDrop] = React.useState(false);\n    const style =useSelector(state=>state.style);\n\n    let shower;\n\n    if(drop){\n        shower={\n            \"minHeight\":\"\"+(25*props.opt.values.length)+\"px\",\n            \"maxHeight\":\"\"+(25*props.opt.values.length)+\"px\"\n        }\n    }else{\n        shower={\n            \"minHeight\":\"0px\",\n            \"maxHeight\":\"0px\"\n        }\n    }\n\n    let values = props.opt.values.map((op, idx)=> {\n        return <OptionItem key={idx} type={props.opt.type} value={op}/>\n    });\n\n    return(\n        <div className={\"option\"}>\n            <h3 className={\"optHead\"} style={{color:style.nav}} onClick={()=>toggleDrop(!drop)}>\n                {props.opt.name}\n                {!drop && <FontAwesomeIcon icon={faChevronDown} />}\n                {drop && <FontAwesomeIcon icon={faChevronUp} />}\n            </h3>\n            <div className={\"listOpt\"} style={shower}>\n                {values}\n            </div>\n        </div>\n    );\n\n}\n\n\n\nexport default Option;","import React from 'react';\nimport {clearOptions} from \"../../redux/actions/setActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Option from './Option';\nimport Button from '../input/Button';\n\nfunction Options(props){\n\n    const style =useSelector(state=>state.style);\n    const Options =useSelector(state=>state.options);\n    const sets =useSelector(state=>state.sets);\n    const dispatch = useDispatch();\n\n    let show;\n\n    if(Options){\n        show={\n            \"right\":\"0\",\n            backgroundColor:style.navText,\n            color:style.nav\n        }\n    }else{\n        show={\n            \"right\":\"-100%\",\n            backgroundColor:style.navText,\n            color:style.nav\n        }\n    }\n\n    let Sets = [];\n\n    for(let i=0; i<sets.length; i++){\n        Sets.push(sets[i].name)\n    }\n\n    let Sort = [\n\n        {\n            name: \"Affiliations\",\n            type: \"affiliation_code\",\n            values:[\"hero\", \"villain\", \"neutral\"]\n        },\n        {\n            name: \"Colors\",\n            type: \"faction_code\",\n            values:[\"red\", \"blue\", \"yellow\", \"gray\"]\n        },\n        {\n            name: \"Rarity\",\n            type: \"rarity_name\",\n            values:[\"Starter\", \"Common\", \"Uncommon\", \"Rare\", \"Legendary\"]\n        },\n        {\n            name:\"Health\",\n            type:\"health\",\n            values:[4,5,6,7,8,9,10,11,12,13,14,15]\n        },\n        {\n            name:\"Cost\",\n            type:\"cost\",\n            values:[0,1,2,3,4,5,6]\n        },\n        {\n            name:\"Set\",\n            type:\"set_name\",\n            values:Sets},\n        {\n            name:\"Points\",\n            type:\"points\",\n            values:[\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\"]\n        },\n        {\n            name:\"Type\",\n            type:\"type_code\",\n            values:[\"character\", \"upgrade\", \"support\", \"event\", \"downgrade\", \"plot\"]\n        },\n        {\n            name:\"Dice Sides\",\n            type:\"sides\",\n            values:[\"RD\", \"Sh\",\"MD\", \"ID\", \"Dc\",\"Dr\", \"F\", \"R\", \"Sp\",\"-\",\"+\"]\n\n        },\n        {\n            name:\"Formats\",\n            type:\"formats\",\n            values:[\"Standard\", \"Trilogy\", \"Infinite\"]\n        },\n        {\n            name: \"Restricted\",\n            type:\"restricted\",\n            values:[\"restricted\"]\n        },\n        {\n            name: \"Balanced\",\n            type:\"balanced\",\n            values:[\"balanced\"]\n        },\n        {\n            name: \"Keywords\",\n            type:\"keywords\",\n            values:[\"Guardian\", \"Ambush\", \"Redeploy\"]\n        }\n\n    ];\n\n\n    let options = Sort.map((srt, idx)=>\n        <Option key={idx} opt={srt}/>\n    );\n\n\n    return (\n        <div className={\"options\"} style={show}>\n            <div className={\"top\"}><h1 style={{color:style.nav}}>Sort Cards </h1><Button handleClick={() => dispatch(clearOptions())} text={\"Clear Search Query\"}/></div>\n            <div className={\"wrapper\"}>\n                {options}\n            </div>\n\n        </div>\n    )\n}\n\n\n\n\n\n\n\nexport default Options;\n","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faHeart, faCircle, faTimes} from '@fortawesome/free-solid-svg-icons';\nimport {setSort} from \"../../redux/actions/setActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction SortTag(props){\n    const [hover, setHover] = React.useState(false);\n    const style =useSelector(state=>state.style);\n    const dispatch = useDispatch();\n\n    const handleSort = (prop, val) => {\n        dispatch(setSort(prop, val))\n    };\n\n    let styler;\n\n    if(hover){\n        styler = {\n            color:style.body,\n            backgroundColor:style.nav\n        };\n    }else{\n        styler = {\n            color:style.nav,\n            backgroundColor:style.body\n        };\n    }\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n    const numberCheck = (vl) => {\n        if(vl===\"RD\"){\n            return <span><span className='icon icon-ranged'></span> Ranged</span>\n        }else if(vl===\"Sh\"){\n            return <span><span className='icon icon-shield'></span> Shield</span>\n        }else if(vl===\"MD\"){\n            return <span><span className='icon icon-melee'></span> Melee</span>\n        }else if(vl===\"ID\"){\n            return <span><span className='icon icon-indirect'></span> Indirect</span>\n        }else if(vl===\"Dc\"){\n            return <span><span className='icon icon-discard'></span> Discard</span>\n        }else if(vl===\"Dr\"){\n            return <span><span className='icon icon-disrupt'></span> Disrupt</span>\n        }else if(vl===\"F\"){\n            return <span><span className='icon icon-focus'></span> Focus</span>\n        }else if(vl===\"Sp\"){\n            return <span><span className='icon icon-special'></span> Special</span>\n        }else if(vl===\"R\"){\n            return <span><span className='icon icon-resource'></span> Special</span>\n        }else if(vl===\"-\"){\n            return <span><span className='icon icon-blank'></span> Blank</span>\n        }else if(vl===\"+\"){\n            return <span>Modified</span>\n        }else if(vl.includes(\"H\")){\n            return <span><FontAwesomeIcon icon={faHeart}/> {vl.substring(0, vl.length - 1)}</span>\n        }else if(vl.includes(\"P\")){\n            return <span><FontAwesomeIcon icon={faCircle}/> {vl.substring(0, vl.length - 1)}</span>\n        }else if(vl.includes(\"C\")){\n            return <span><span className='icon icon-resource '></span> {vl.substring(0, vl.length - 1)}</span>\n        }else if (isNaN(vl)) {\n            return vl.charAt(0).toUpperCase() + vl.substring(1)\n        } else {\n            return vl\n        }\n    };\n\n    let text = (vl)=>{\n\n        if(vl.includes(\"H\")){\n            return Number(vl.substring(0, vl.length - 1));\n        }else if(vl.includes(\"P\")){\n            return vl.substring(0, vl.length - 1)\n        }else if(vl.includes(\"C\")){\n            return Number(vl.substring(0, vl.length - 1));\n        }else{\n            return vl\n        }\n    };\n\n    return (\n        <div className={\"itm\"} onClick={()=>handleSort(props.prp,(props.prp===\"set_name\"?props.val:text(props.val)))}\n            style={styler} onMouseEnter={hoverChange}\n             onMouseLeave={hoverChange}>{(props.prp===\"set_name\"?props.val:numberCheck(props.val))} <FontAwesomeIcon icon={faTimes}/></div>\n    )\n}\n\n\n\nexport default SortTag;","import React from 'react';\nimport SortTag from './SortTag';\nimport { useSelector } from \"react-redux\";\n\nfunction SortNav(props) {\n\n    const [show, updateShow] = React.useState(false);\n    const [tags, updateTags] = React.useState([]);\n    const style =useSelector(state=>state.style);\n    const sorted =useSelector(state=>state.sorted);\n\n\n    React.useEffect(() => {\n        let check = false;\n        let tagArray = [];\n\n\n        for (let p in sorted) {\n\n            if (sorted[p].toggle) {\n                check = true;\n                for(let x=0; x<sorted[p].val.length; x++){\n                    let obj = {\n                        prop:p,\n                        val:\"\"\n                    };\n                    if(p==='health'){\n                        obj.val=sorted[p].val[x]+\"H\";\n                    }else if(p==='points'){\n                        obj.val=sorted[p].val[x]+\"P\";\n                    }else if(p==='cost'){\n                        obj.val=sorted[p].val[x]+\"C\";\n                    }else{\n                        obj.val=sorted[p].val[x];\n                    }\n                    tagArray.push(obj)\n                }\n            }\n\n\n\n        }\n\n        updateShow(check);\n        updateTags(tagArray);\n    },\n[sorted]);\n\nlet shower;\n\nif (show) {\n    shower = {\n        top: '80px',\n        backgroundColor: style.bodyText\n    }\n} else {\n    shower = {\n        top: '-80px',\n        backgroundColor: style.bodyText\n    }\n}\n\n\nlet tagEles = tags.map((st, idx) =>\n    <SortTag key={idx} val={st.val} prp={st.prop}/>\n);\n\nreturn (\n    <div className={\"sortNav\"} style={shower}>\n        {tagEles}\n    </div>\n)\n}\n\n\n\nexport default SortNav;","import React from 'react';\nimport {setStyles} from \"../../redux/actions/setActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction StyleOption(props) {\n\n    const [hover, setHover] = React.useState(false)\n    const style =useSelector(state=>state.style);\n    const dispatch = useDispatch();\n\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n    let active;\n\n    if(hover){\n        if(style.navText===undefined){\n            active = {\n                backgroundColor: '#343740',\n                color:'white'\n            }\n        }else{\n            active = {\n                backgroundColor: style.bodyText,\n                color:style.navText\n            }\n        }\n    }else{\n        if(props.opt.name===style.name){\n            active={\n                backgroundColor:style.navText,\n                color:style.nav\n            }\n        }else{\n            active={\n                backgroundColor:style.nav,\n                color:style.navText\n            }\n        }\n    }\n\n\n\n\n\n    return (\n\n        <div className={\"item\"} onMouseEnter={hoverChange} onMouseLeave={hoverChange} style={active} onClick={() => dispatch(setStyles(props.opt))}>{props.opt.name}</div>\n\n    )\n}\n\n\n\n\n\nexport default StyleOption;","export const Styles = [\n    {\n        name:\"Awakenings\",\n        nav:\"white\",\n        body:\"black\",\n        navText:\"black\",\n        bodyText:\"#c4c4c4\"\n    },\n    {\n        name:\"Legacies\",\n        nav:\"red\",\n        body:\"white\",\n        navText:\"white\",\n        bodyText:\"#640f18\"\n    },\n    {\n        name:\"Convergence\",\n        nav:\"#343740\",\n        body:\"#ededed\",\n        navText:\"white\",\n        bodyText:\"#666a77\"\n    }\n];","import React from 'react';\nimport StyleOption from './StyleOption';\nimport {Styles} from './../../data/Style';\nimport { useSelector } from \"react-redux\";\n\nfunction StyleOptions(props) {\n\n    const style =useSelector(state=>state.style);\n\n    let show;\n\n    if (props.styles) {\n        show={\n            \"right\":\"0\",\n            backgroundColor:style.navText,\n            color:style.nav\n        }\n    }else{\n        show={\n            \"right\":\"-100%\",\n            backgroundColor:style.navText,\n            color:style.nav\n        }\n    }\n\n    let styles = Styles.map((srt, idx) =>\n        <StyleOption key={idx} opt={srt}/>\n    );\n\n\n    return (\n        <div className={\"navOptions\"} style={show}>\n            <div className={\"top\"}><h1 style={{color:style.nav}}>Change Style</h1></div>\n            <div className={\"wrapper\"}>\n                {styles}\n            </div>\n        </div>\n    )\n}\n\n\n\n\n\nexport default StyleOptions;\n\n","import React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage';\nimport About from './components/main/About';\nimport Nav from './components/nav/Navigation';\nimport Footer from './components/footer/Footer';\nimport Options from './components/nav/options';\nimport SortNav from './components/nav/SortNav'\nimport StyleOptions from './components/nav/StyleOptions';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {setCards, setFormats, setSets} from \"./redux/actions/setActions\";\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\n\nfunction App() {\n\n    const [show, updateShow] = React.useState(false);\n    const [seconds, setSeconds] = React.useState(0);\n    const [pad, setPad] = React.useState(60);\n    const [loadCard, setLoadCards] = React.useState(\"load\");\n    const [loadFormat, setLoadFormat] = React.useState(\"load\");\n    const [loadSet, setLoadSet] = React.useState(\"load\");\n    const [load, setLoad] =React.useState(\"load\");\n\n    const style =useSelector(state=>state.style);\n    const sorted =useSelector(state=>state.sorted);\n    const dispatch = useDispatch();\n\n\n    React.useEffect(() => {\n        localStorage.setItem('localStyle', JSON.stringify(style));\n        if(load===\"load\"){\n            fetch(\"https://swdestinydb.com/api/public/cards/\")\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    setLoadCards(\"loaded\");\n                    dispatch(setCards(data));\n                }).catch(function () {\n                setLoadCards(\"error\");\n            });\n            fetch(\"https://swdestinydb.com/api/public/formats/\")\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    setLoadFormat(\"loaded\");\n                    dispatch(setFormats(data));\n                }).catch(function () {\n                setLoadFormat(\"error\");\n            });\n            //\n            fetch(\"https://swdestinydb.com/api/public/sets/\")\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    setLoadSet(\"loaded\");\n                    dispatch(setSets(data));\n                }).catch(function () {\n                setLoadSet(\"error\");\n            });\n        }\n\n\n        if(loadCard===\"loaded\"&&loadFormat===\"loaded\"&&loadSet===\"loaded\"){\n            setLoad(\"loaded\")\n        }else if(loadCard===\"error\"||loadFormat===\"error\"||loadSet===\"error\"){\n            setLoad(\"error\");\n        }\n\n        let check = false;\n\n        for (let p in sorted) {\n            if (sorted[p].toggle) {\n                check = true;\n            }\n        }\n\n        updateShow(check);\n\n        let interval = null;\n\n        interval = setInterval(() => {\n            setSeconds(seconds => seconds + 1);\n        }, 500);\n\n        if(load===\"loaded\"){\n            setPad(document.querySelector(\".sortNav\").getBoundingClientRect().height);\n\n            document.documentElement.style.backgroundColor = style.body;\n        }\n\n\n        return () => clearInterval(interval);\n\n    }, [style, sorted, seconds, loadCard, loadFormat, loadSet, load, dispatch]);\n\n    let appStyle = {\n        backgroundColor: style.body\n    };\n\n    let wrapStyle = {\n        color: style.bodyText,\n        backgroundColor: style.body,\n        paddingTop: (show ? \"\" + pad + \"px\" : \"0\")\n    };\n\n    return (\n\n        <div className=\"App\" style={appStyle}>\n            {load===\"loaded\"&&<span><Nav/> <SortNav/> <Options/> <StyleOptions/> <div className={\"mainWrapper\"} style={wrapStyle}><Switch><Route path=\"/\" component={List}/></Switch></div><Route path={\"/card/:id\"} component={CardPage}/><Route exact path={\"/about\"} component={About}/></span>}\n            {load===\"load\"&&<div style={{height:\"100%\"}}><FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color:style.bodyText}}/></div>}\n            {load===\"error\"&&<div style={{height:\"100%\"}}><FontAwesomeIcon icon={faExclamationCircle} spin size={\"lg\"} style={{color:style.bodyText}}/><h1>Error Loading Card API. Try again later</h1></div>}\n            {load===\"loaded\"&&<Footer/>}\n        </div>\n    );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    cards:[],\n    formats:[],\n    sets:[],\n    itemLimit: 10,\n    sorted:{\n        rarity_name: {toggle: false, val: []},\n        affiliation_code: {toggle: false, val: []},\n        type_code: {toggle: false, val: []},\n        faction_code: {toggle: false, val: []},\n        set_name:{toggle:false,val:[]},\n        health: {toggle: false, val: []},\n        cost: {toggle: false, val: []},\n        points: {toggle: false, val: []},\n        sides:{toggle: false, val:[]},\n        formats:{toggle:false, val:[]},\n        restricted:{toggle:false,val:[]},\n        balanced:{toggle:false,val:[]},\n        keywords:{toggle:false,val:[]}\n    },\n    style:JSON.parse(localStorage.getItem('localStyle')) || '',\n    name: \"\",\n    options:false,\n    styles:false\n\n\n};\n\n\nconst rootReducer = (state = initState, action) => {\n\n    if (action.type === 'INCREASE_LIMIT') {\n\n        let val = state.itemLimit;\n\n        val = val + 10;\n\n\n        return {\n            ...state,\n            itemLimit: val\n        }\n    }\n\n    if (action.type === 'SET_SORT') {\n\n        let orgArray = state.sorted[action.prop].val;\n\n        if(orgArray.includes(action.val)){\n            let ind = orgArray.indexOf(action.val);\n            orgArray.splice(ind,1);\n\n        }else{\n            orgArray.push(action.val)\n        }\n\n        let togg = orgArray.length > 0;\n\n        return {\n            ...state,\n            itemLimit:10,\n            sorted:{\n                ...state.sorted,\n                [action.prop]: {\n                    toggle: togg,\n                    val: orgArray\n                }\n            }\n\n        }\n\n    }\n\n    if(action.type === 'SET_NAME'){\n        return{\n            ...state,\n            name:action.name\n        }\n    }\n\n    if(action.type === 'SET_STYLE'){\n\n        document.documentElement.style.backgroundColor=action.style.body;\n\n        return{\n            ...state,\n            style:action.style\n        }\n    }\n\n    if(action.type === 'TOGGLE_OPTIONS'){\n\n        return{\n            ...state,\n            options:!state.options,\n            styles:false\n        }\n    }\n\n    if(action.type === 'TOGGLE_STYLES'){\n\n\n        return{\n            ...state,\n            styles:!state.styles,\n            options:false\n        }\n    }\n\n    if(action.type === 'CLEAR_OPTIONS'){\n\n        return{\n            ...state,\n            itemLimit: 10,\n            sorted:{\n                rarity_name: {toggle: false, val: []},\n                affiliation_code: {toggle: false, val: []},\n                type_code: {toggle: false, val: []},\n                faction_code: {toggle: false, val: []},\n                set_name:{toggle:false,val:[]},\n                health: {toggle: false, val: []},\n                cost: {toggle: false, val: []},\n                points: {toggle: false, val: []},\n                sides:{toggle: false, val:[]},\n                formats:{toggle:false, val:[]},\n                restricted:{toggle:false,val:[]},\n                balanced:{toggle:false,val:[]},\n                keywords:{toggle:false,val:[]}\n            },\n            name: \"\",\n            options:false,\n            styles:false\n        }\n    }\n\n    if(action.type === 'SET_CARDS'){\n        return{\n            ...state,\n            cards:action.cards\n        }\n    }\n\n    if(action.type === 'SET_FORMATS'){\n        return{\n            ...state,\n            formats:action.fmts\n        }\n    }\n\n    if(action.type === 'SET_SETS'){\n        return{\n            ...state,\n            sets:action.sts\n        }\n    }\n\n\n    return state;\n};\n\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {createStore} from 'redux';\nimport {Provider} from \"react-redux\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from \"./redux/reducers\";\nimport {HashRouter as Router} from \"react-router-dom\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n            <App/>\n        </Router>\n    </Provider>,\n\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}