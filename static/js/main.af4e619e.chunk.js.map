{"version":3,"sources":["assets/convergencelogo.svg","assets sync /^/.//.*logo/.svg$","assets/awakeningslogo.svg","assets/legacieslogo.svg","redux/actions/setActions.js","components/card/Card.js","components/input/Button.js","components/main/List.js","components/card/Side.js","components/card/CardInfo.js","components/card/CardPage.js","components/input/Search.js","components/nav/Navigation.js","components/nav/OptionItem.js","components/nav/Option.js","components/nav/options.js","components/nav/SortTag.js","components/nav/SortNav.js","components/nav/StyleOption.js","data/Style.js","components/nav/StyleOptions.js","App.js","serviceWorker.js","redux/reducers/index.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","setSort","prop","val","type","connect","state","style","props","React","useState","load","updateLoading","img","error","rend","rendElement","seconds","setSeconds","useEffect","interval","setInterval","imagesrc","clearInterval","className","bod","color","bodyText","name","alt","onLoad","onError","src","icon","faSpinner","spin","size","loadColor","faExclamationCircle","hover","setHover","nav","backgroundColor","navText","hoverChange","onClick","handleClick","bind","this","onMouseEnter","onMouseLeave","text","displayedSet","itemLimit","setLimit","sorted","cards","formats","dispatch","changeLimit","cardEle","sort","sortObject","sortedList","p","toggle","filter","crd","ret","points","arrayPoints","split","i","length","v","hasOwnProperty","sides","includes","q","data","sets","set_code","y","restricted","balance","balanced","keywords","toLowerCase","toUpperCase","slice","idx","to","key","button","Side","finished","setVal","sd","setClass","isNaN","dangerouslySetInnerHTML","__html","format","legal","rst","setRst","formatSet","fm","push","is_unique","health","faHeart","cost","type_name","undefined","subtypes","sb","has_errata","replace","flavor","affiliation_name","rarity_name","faction_code","set_name","position","card","setCard","status","cardMain","match","params","faTimes","setName","sty","sg","placeholder","value","onChange","event","target","options","styles","toggleOptions","clearOptions","toggleStyles","require","faPalette","faSearch","shower","faCheckSquare","faSquare","charAt","substring","drop","toggleDrop","opt","values","op","faChevronDown","faChevronUp","show","Sets","srt","body","vl","prp","Number","faCircle","updateShow","tags","updateTags","check","tagArray","x","obj","top","tagEles","st","setStyles","active","Styles","setCards","crds","setFormats","fmts","setSets","sts","pad","setPad","loadCard","setLoadCards","loadFormat","setLoadFormat","loadSet","setLoadSet","setLoad","localStorage","setItem","JSON","stringify","fetch","then","response","json","catch","document","querySelector","getBoundingClientRect","height","documentElement","appStyle","wrapStyle","paddingTop","path","component","List","CardPage","Boolean","window","location","hostname","initState","affiliation_code","type_code","parse","getItem","rootReducer","action","orgArray","ind","indexOf","splice","togg","store","createStore","ReactDOM","render","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af4e619e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/convergencelogo.f7ca2921.svg\";","var map = {\n\t\"./awakeningslogo.svg\": 45,\n\t\"./convergencelogo.svg\": 26,\n\t\"./legacieslogo.svg\": 46\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 44;","module.exports = __webpack_public_path__ + \"static/media/awakeningslogo.519004a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/legacieslogo.f7ca2921.svg\";","export const changeLimit = () => {\n    return {\n        type: 'INCREASE_LIMIT'\n    }\n};\n\nexport const setName = (name) => {\n    return {\n        type: 'SET_NAME',\n        name:name\n    }\n};\n\nexport const setSort = (prop, val) => {\n    return {\n        type: 'SET_SORT',\n        prop: prop,\n        val: val\n    }\n};\n\nexport const toggleOptions = () => {\n    return {\n        type: 'TOGGLE_OPTIONS'\n    }\n};\n\nexport const toggleStyles = () => {\n    return {\n        type: 'TOGGLE_STYLES'\n    }\n};\n\nexport const setStyles = (style) => {\n    return {\n        type: 'SET_STYLE',\n        style:style\n\n    }\n};\n\nexport const clearOptions = () =>{\n    return {\n        type: 'CLEAR_OPTIONS'\n    }\n};\n\nexport const setCards = (cards) =>{\n    return {\n        type: 'SET_CARDS',\n        cards:cards\n    }\n};\n\nexport const setFormats = (fmts) =>{\n    return {\n        type: 'SET_FORMATS',\n        fmts:fmts\n    }\n};\n\nexport const setSets = (sts) =>{\n    return {\n        type: 'SET_SETS',\n        sts:sts\n    }\n};","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\nimport {connect} from \"react-redux\";\nfunction Card(props) {\n\n    const [load, updateLoading] = React.useState(\"loading\");\n    const [rend, rendElement] = React.useState({\n        img:false,\n        load:true,\n        error:false\n    });\n    const [seconds, setSeconds] = React.useState(0);\n\n\n    React.useEffect(() => {\n        let interval = null;\n\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds + 1);\n                if (load) {\n                    if(props.imagesrc===null){\n                        rendElement({\n                            img:false,\n                            load:false,\n                            error:true\n                        });\n                    }else{\n                        rendElement({\n                            img:true,\n                            load:false,\n                            error:false\n                        });\n                    }\n\n                } else {\n                    if(seconds>3){\n                        rendElement({\n                            img:false,\n                            load:false,\n                            error:true\n                        });\n                    }else{\n                        rendElement({\n                            img:false,\n                            load:true,\n                            error:false\n                        });\n                    }\n                }\n            }, 1000);\n\n        return () => clearInterval(interval);\n    }, [seconds, load, props.imagesrc]);\n\n    const handleImageLoad = () => {\n        updateLoading(true)\n    };\n\n    const handleImageError = () => {\n        updateLoading(false)\n    };\n\n    return (\n        <div className={\"card\"}>\n            {props.bod&&<h1 style={{color:props.style.bodyText}}>{props.name}</h1>}\n            <div className={\"cardWrapper\"}>\n                {rend.img && <img alt={props.name} onLoad={handleImageLoad} onError={handleImageError} src={props.imagesrc}/>}\n                <div>\n                    {rend.load&&<FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color:props.loadColor}}/>}\n                    {rend.error&&<FontAwesomeIcon icon={faExclamationCircle} style={{color:\"red\"}} size={\"6x\"}/>}\n                </div>\n            </div>\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style:state.style\n    }\n};\n\nexport default connect(mapStateToProps)(Card);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nfunction Button(props){\n\n    const [hover, setHover] = React.useState(false)\n\n    let style;\n\n    if(hover){\n        style = {\n            color:props.style.nav,\n            backgroundColor:props.style.navText\n        };\n    }else{\n        style = {\n            color:props.style.navText,\n            backgroundColor:props.style.nav\n        };\n    }\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n\n    return (\n        <div className={\"button\"} style={style} onClick={props.handleClick.bind(this)} onMouseEnter={hoverChange}\n             onMouseLeave={hoverChange} >\n            {props.text}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style:state.style\n    }\n};\n\nexport default connect(mapStateToProps)(Button);","import React from 'react';\nimport {changeLimit} from \"../../redux/actions/setActions\";\nimport Card from '../card/Card';\nimport {connect} from 'react-redux';\nimport Button from '../input/Button';\nimport {Link} from 'react-router-dom';\n\nfunction List(props) {\n\n    const [sort, setSort] = React.useState([]);\n    const [load] = React.useState(true);\n    const [error] = React.useState(false);\n\n\n    React.useEffect(() => {\n\n\n        function sortObject() {\n\n            let sortedList = props.cards;\n\n            for (let p in props.sorted) {\n\n\n                if (props.sorted[p].toggle) {\n\n                    if (p === \"points\") {\n\n\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            if (crd.points !== null) {\n                                let arrayPoints = crd.points.split(\"/\");\n                                for (let i = 0; i < props.sorted.points.val.length; i++) {\n                                    for (let v = 0; v < arrayPoints.length; v++) {\n                                        if (arrayPoints[v] === props.sorted.points.val[i]) {\n\n                                            ret = true;\n                                        }\n                                    }\n                                }\n                            }\n                            return (ret ? crd : null)\n\n                        });\n\n\n                    } else if (p === \"sides\") {\n\n                        for (let i = 0; i < props.sorted.sides.val.length; i++) {\n\n                            sortedList = sortedList.filter(crd => {\n                                let ret = false;\n                                if (crd.hasOwnProperty('sides')) {\n                                    for (let v = 0; v < crd.sides.length; v++) {\n                                        if (crd.sides[v].includes(props.sorted.sides.val[i])) {\n                                            ret = true\n                                        }\n                                    }\n                                }\n                                return (ret ? crd : null)\n\n                            });\n                        }\n\n\n                    } else if (p === 'formats') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for (let i = 0; i < props.formats.length; i++) {\n                                for (let q = 0; q < props.sorted.formats.val.length; q++) {\n                                    if (props.formats[i].name === props.sorted.formats.val[q] && props.formats[i].data.sets.includes(crd.set_code)) {\n                                        ret = true;\n                                    }\n                                }\n                            }\n                            return (ret ? crd : null);\n                        });\n                    }else if (p === 'restricted') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for(let y=0; y<props.formats.length; y++){\n                                for (let i = 0; i < props.formats[y].data.restricted.length; i++) {\n                                    if(props.formats[y].data.restricted[i]===crd.code&&props.sorted.restricted.val.includes(\"restricted\")){\n                                        ret=true\n                                    }\n                                }\n                            }\n\n                            return (ret ? crd : null);\n                        });\n                    }else if (p === 'balanced') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for(let y=0; y<props.formats.length; y++){\n                                for (let i in props.formats[y].data.balance) {\n                                    if(i===crd.code&&props.sorted.balanced.val.includes(\"balanced\")){\n                                        ret=true\n                                    }\n                                }\n                            }\n\n                            return (ret ? crd : null);\n                        });\n                    }else if (p === 'keywords') {\n                        sortedList = sortedList.filter(crd => {\n                            let ret = false;\n                            for(let i=0; i<props.sorted.keywords.val.length; i++){\n                                if(crd.text!==null&&crd.text.includes(props.sorted.keywords.val[i])){\n                                    ret=true;\n                                }\n                            }\n                            return (ret ? crd : null);\n                        });\n                    } else {\n                        sortedList = sortedList.filter(crd => {\n\n                            return props.sorted[p].val.includes(crd[p])\n\n                        });\n                    }\n                }\n            }\n\n\n            if (props.name !== '') {\n                sortedList = sortedList.filter(crd => {\n                    if (crd.name.includes(props.name)) {\n                        return true\n                    } else if (crd.name.toLowerCase().includes(props.name)) {\n                        return true\n                    } else return crd.name.toUpperCase().includes(props.name);\n                });\n            }\n\n\n            setSort(sortedList)\n        }\n\n        sortObject();\n\n        return () => {\n            sortObject();\n        }\n\n    }, [load, props.name, props.sorted, props.cards, props.formats]);\n\n\n    let cardEle;\n\n    if (sort.length !== 0) {\n        cardEle = sort.slice(0, props.itemLimit).map((crd, idx) =>\n\n\n            <Link to={\"/\" + crd.code} key={idx} className={\"cardFlop\"}>\n\n                <Card name={crd.name} bod={true} imagesrc={crd.imagesrc} code={crd.code}\n                      loadColor={\"#343740\"}/>\n            </Link>\n        );\n    } else if (!load && !error) {\n        cardEle = <h1>No cards in search</h1>;\n    } else if (load && !error) {\n        cardEle = <h1>Fetching Cards...</h1>;\n    } else if (load && error) {\n        cardEle = <h1>Loading Cards failed. Refresh page...</h1>;\n    }\n\n\n    const button = () => {\n        if (props.itemLimit < sort.length && sort.length > 10) {\n            return <Button handleClick={() => props.changeLimit()} text={\"Load More\"}/>\n        }\n    };\n\n\n    return (\n\n        <div className={\"list\"}>\n            <div className={\"wrapper\"}>\n                {cardEle}\n            </div>\n            {button()}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        displayedSet: state.displayedSet,\n        itemLimit: state.itemLimit,\n        setLimit: state.setLimit,\n        sorted: state.sorted,\n        name: state.name,\n        style: state.style,\n        cards:state.cards,\n        formats:state.formats\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeLimit: () => {\n            dispatch(changeLimit())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","import React from 'react';\n\nfunction Side(props){\n\n    let finished;\n\n    function setVal (){\n        if(props.sd.includes(\"+\")){\n            return \"+ \"+props.sd[1];\n        }else if(props.sd.includes(\"Sp\")){\n            return \"\";\n        }else{\n            return props.sd[0];\n        }\n    }\n\n    function setClass(){\n        if(props.sd.includes(\"+\")){\n            return true\n        }else{\n            return false\n        }\n    }\n\n\n    if(props.sd.includes(\"RD\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-ranged '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-ranged '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Sh\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-shield '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-shield '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"MD\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-melee '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-melee '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"ID\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-indirect '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-indirect '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Dc\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-discard '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-discard '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Dr\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-disrupt '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-disrupt '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"F\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-focus '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-focus '></span></span>\";\n        }\n\n    }else if(props.sd.includes(\"Sp\")){\n        finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-special '></span></span>\";\n    }else if(props.sd.includes(\"R\")){\n        if(setClass()){\n            finished = \"<span class='sd modify'>\"+setVal ()+\" <span class='icon icon-resource '></span></span>\";\n        }else{\n            finished = \"<span class='sd'>\"+setVal ()+\" <span class='icon icon-resource '></span></span>\";\n        }\n\n    }else{\n        finished = \"<span class='blank'>-</span>\"\n    }\n\n\n\n    if(!isNaN(props.sd[props.sd.length-1])&&props.sd[props.sd.length-1]!==\"-\"){\n        if(setClass()){\n            finished = finished+\"<span class='res modify'> <span>\"+props.sd[props.sd.length-1]+\"</span> <span\" +\n                \" class='icon\" +\n                \" icon-resource'></span></span>\"\n        }else{\n            finished = finished+\"<span class='res'> <span>\"+props.sd[props.sd.length-1]+\"</span> <span\" +\n                \" class='icon\" +\n                \" icon-resource'></span></span>\"\n        }\n\n    }\n\n\n\n\n    return(\n        <div className={\"side\"} dangerouslySetInnerHTML={{ __html: finished }}></div>\n    )\n}\n\nexport default Side","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle, faHeart} from '@fortawesome/free-solid-svg-icons';\nimport Side from './Side';\nimport {connect} from 'react-redux';\n\n\nfunction CardInfo(props) {\n\n    const [rst, setRst] = React.useState([\n\n        {\n            format: \"trilogy\",\n            restricted: false,\n            balance: \"--\",\n            legal: false\n        },\n        {\n            format: \"standard\",\n            restricted: false,\n            balance: \"--\",\n            legal: false\n        },\n        {\n            format: \"infinite\",\n            restricted: false,\n            balance: \"--\",\n            legal: true\n        }\n    ]);\n\n    const [rend, rendElement] = React.useState({\n        rst: false,\n        load: true,\n        error: false\n    });\n\n\n    React.useEffect(() => {\n\n\n        function handleStatusChange(status) {\n            setRst(status);\n        }\n\n\n        let formatSet = [];\n\n        props.formats.map((fm) => {\n\n            let format = {\n                name: fm.name,\n                restricted: false,\n                balance: \"--\",\n                legal: false\n            };\n\n            if (props.code in fm.data.balance) {\n                format.balance = fm.data.balance[props.code];\n            }\n\n            if (fm.data.restricted.includes(props.code)) {\n                format.restricted = true;\n            }\n\n            if (fm.data.sets.includes(props.crd.set_code)) {\n                format.legal = true;\n            }\n\n            rendElement({rst: true, load: false, error: false});\n\n\n            return formatSet.push(format);\n\n        });\n\n        handleStatusChange(formatSet);\n\n\n    }, [props.code, props.crd.set_code, props.formats]);\n\n    let formats = rst.map((fm, idx) =>\n        <div key={idx} className={\"format\"}>\n            <h3>{fm.name}</h3>\n            <h5 className={\"restrict\"}>{fm.restricted ? \"Restricted\" : null}</h5>\n            <h3>{fm.balance}</h3>\n            <h6 className={!fm.legal ? \"restrict\" : null}>{fm.legal ? \"Playable\" : \"Unplayable\"}</h6>\n        </div>\n    );\n\n\n    return (\n        <div className={\"cardInfo\"}>\n            <h1>{props.crd.is_unique && \"◆ \"}{props.crd.name}</h1>\n            {props.crd.health &&\n            <h2><FontAwesomeIcon icon={faHeart} size={\"lg\"} style={{color: \"red\"}}/> {props.crd.health}</h2>}\n            {props.crd.cost !== null &&\n            <h2 className={\"cost\"}><span className='icon icon-resource '></span> {props.crd.cost} </h2>}\n            <h2>{props.crd.points && \"Points:\"}{props.crd.points}</h2>\n            <h2>{props.crd.type_name}</h2>\n            <div className={\"subtypes\"}>{props.crd.subtypes !== undefined && props.crd.subtypes.map((sb, idx) =>\n                <h3 key={idx}>{sb.name}{idx !== (props.crd.subtypes.length - 1) && \"-\"}</h3>\n            )}</div>\n            <div className={\"sides\"}>{props.crd.sides !== undefined && props.crd.sides.map((sd, idx) =>\n                <Side key={idx} sd={sd}/>\n            )}</div>\n            <div className={\"formats\"}>\n                {rend.rst && formats}\n            </div>\n            <div>\n                {rend.load && <FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color: props.loadColor}}/>}\n                {rend.error && <FontAwesomeIcon icon={faExclamationCircle} style={{color: \"red\"}} size={\"6x\"}/>}\n            </div>\n            <div className={\"text\"}>\n                <h3 className={\"errata\"}>{props.crd.has_errata && \"This card has an errata\"}</h3>\n                {props.crd.text !== null && <p dangerouslySetInnerHTML={{\n                    __html: props.crd.text.replace(\"[special]\", \"<span class='icon\" +\n                        \" icon-special '></span>\").replace(\"([special])\", \"(<span class='icon\" +\n                        \" icon-special '></span>)\").replace(\"([indirect])\", \"(<span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"([melee])\", \"(<span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>)\").replace(\"([discard])\", \"(<span class='icon\" +\n                        \" icon-discard '></span>)\").replace(\"([focus])\", \"(<span class='icon\" +\n                        \" icon-focus '></span>)\").replace(\"([disrupt])\", \"(<span class='icon\" +\n                        \" icon-disrupt '></span>)\").replace(\"([shield])\", \"(<span class='icon\" +\n                        \" icon-shield '></span>)\").replace(\"([resource])\", \"(<span class='icon\" +\n                        \" icon-resource '></span>)\").replace(\"([blank])\", \"(<span class='icon\" +\n                        \" icon-blank '></span>)\").replace(\"([ranged] or [melee])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([melee] or [ranged])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged] or [melee])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span> or <span class='icon\" +\n                        \" icon-melee '></span>)\").replace(\"([ranged], [melee] or [indirect])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>, <span class='icon\" +\n                        \" icon-melee '></span> or <span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"([ranged], [melee], or [indirect])\", \"(<span class='icon\" +\n                        \" icon-ranged '></span>, <span class='icon\" +\n                        \" icon-melee '></span> or <span class='icon\" +\n                        \" icon-indirect '></span>)\").replace(\"[AW]\", \"<span class='icon\" +\n                        \" icon-set-AW'></span>\").replace(\"[WotF]\", \"<span class='icon\" +\n                        \" icon-set-WotF'></span>\").replace(\"[RIV]\", \"<span class='icon\" +\n                        \" icon-set-RIV'></span>\").replace(\"[SoR]\", \"<span class='icon\" +\n                        \" icon-set-SoR'></span>\").replace(\"[LEG]\", \"<span class='icon\" +\n                        \" icon-set-LEG'></span>\").replace(\"[EaW]\", \"<span class='icon\" +\n                        \" icon-set-EaW'></span>\").replace(\"[AtG]\", \"<span class='icon\" +\n                        \" icon-set-AtG'></span>\").replace(\"[CONV]\", \"<span class='icon\" +\n                        \" icon-set-CONV'></span>\").replace(\"[AoN]\", \"<span class='icon\" +\n                        \" icon-set-AoN'></span>\").replace(\"[SoH]\", \"<span class='icon\" +\n                        \" icon-set-SoH'></span>\")\n                }} className={\"effects\"}></p>}\n\n                <i>{props.crd.flavor !== null && props.crd.flavor.replace(\"<cite>\", \"-\").replace(\"</cite>\", \"\")}</i>\n\n                <div className={\"bottom\"}>\n                    <div className={\"affl \" + props.crd.affiliation_name}>{props.crd.affiliation_name}</div>\n\n                    <div className={\"rr \" + props.crd.rarity_name}>{props.crd.rarity_name}</div>\n\n                    <div className={\"color\"} style={{\n                        backgroundColor: props.crd.faction_code,\n                        color: (props.crd.faction_code === 'blue' ? 'white' : 'black')\n                    }}>\n                        {props.crd.faction_code.toUpperCase()}\n                    </div>\n                    <div className={\"setStuff\"}><span\n                        className={\"icon icon-set-\" + props.crd.set_code}></span>{props.crd.set_name}: {props.crd.position}\n                    </div>\n                </div>\n\n\n            </div>\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        formats: state.formats\n    }\n};\n\nexport default connect(mapStateToProps)(CardInfo);","import React from 'react';\nimport {\n    Link\n} from \"react-router-dom\";\nimport Card from './Card';\nimport {connect} from 'react-redux';\nimport CardInfo from './CardInfo';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle, faTimes} from '@fortawesome/free-solid-svg-icons';\n\n\nfunction CardPage(props) {\n\n    const [card, setCard] = React.useState(\"\");\n\n    const [rend, rendElement] = React.useState({\n        crd: false,\n        load: true,\n        error: false\n    });\n\n\n    React.useEffect(() => {\n\n\n            function handleStatusChange(status) {\n                rendElement({\n                    crd: true,\n                    load: false,\n                    error: false\n                });\n                setCard(status)\n            }\n\n\n            let cardMain = props.cards.filter(crd => {\n                return props.match.params.id === crd.code;\n            });\n\n            handleStatusChange(cardMain[0]);\n\n\n        }\n\n        ,\n        [props.match.params.id, props.cards]\n    )\n    ;\n\n    const code = card.code;\n\n\n    return (\n        <Link className={props.match.params.id ? \"cardPageWrapper\" : undefined} to={\"/\"}>\n\n            <div className={\"close\"} style={{backgroundColor: props.style.navText, color: props.style.nav}}>\n                <FontAwesomeIcon icon={faTimes} size={\"4x\"}/>\n            </div>\n\n            {rend.load && <FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color: props.loadColor}}/>}\n            {rend.error && <FontAwesomeIcon icon={faExclamationCircle} style={{color: \"red\"}} size={\"6x\"}/>}\n\n            {rend.crd &&\n            <Card name={card.name} bod={false} imagesrc={card.imagesrc} code={card.code} loadColor={\"white\"}/>}\n            {code && <CardInfo crd={card} code={code}/>}\n\n        </Link>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style,\n        cards: state.cards\n    }\n};\n\nexport default connect(mapStateToProps)(CardPage);","import React from 'react';\nimport {setName} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\n\nfunction Search(props) {\n\n    const handleChange = event => {\n        props.setName(event.target.value);\n\n    };\n\n    let sty = {\n        backgroundColor: props.style.navText,\n        color: props.style.nav\n    };\n\n    let sg  ={\n        color: props.style.nav\n    };\n\n    return (\n        <div className={\"searchContainer\"}>\n            <input style={sty} placeholder={\"Search Card by Name...\"} value={props.name} onChange={handleChange}\n               className={\"search\"}/>\n               <FontAwesomeIcon style={sg} icon={faTimes} onClick={()=> props.setName(\"\")}/>\n        </div>\n\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        name: state.name,\n        style: state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setName: (name) => {\n            dispatch(setName(name))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport {toggleOptions, clearOptions, toggleStyles} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\nimport Search from '../input/Search';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSearch, faTimes, faPalette} from '@fortawesome/free-solid-svg-icons';\n\nfunction Nav(props) {\n\n    let style= {\n        color:props.style.navText,\n        backgroundColor:props.style.nav\n    };\n\n    return (\n\n\n        <nav style={style}>\n            <div className={\"logo\"} >\n                {(props.style.name!==undefined)?<img alt={\"logo\"} src={require(\"./../../assets/\"+props.style.name.toLowerCase()+\"logo.svg\")} onClick={()=>props.clearOptions()}/>:<img alt={\"logo\"} src={require(\"./../../assets/convergencelogo.svg\")} onClick={()=>props.clearOptions()}/>}\n            </div>\n            <Search/>\n            <div className={\"ham\"} >\n\n                {!props.styles && <FontAwesomeIcon icon={faPalette} size=\"2x\" onClick={() => props.toggleStyles()}/>}\n                {props.styles && <FontAwesomeIcon icon={faTimes} size=\"2x\" onClick={() => props.toggleStyles()}/>}\n\n                {!props.options && <FontAwesomeIcon icon={faSearch} size=\"2x\" onClick={() => props.toggleOptions()}/>}\n                {props.options && <FontAwesomeIcon icon={faTimes} size=\"2x\" onClick={() => props.toggleOptions()}/>}\n\n            </div>\n\n        </nav>\n\n\n    );\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        options: state.options,\n        styles:state.styles,\n        style:state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleOptions: () => {\n            dispatch(toggleOptions())\n        },\n        clearOptions:()=>{\n            dispatch(clearOptions())\n        },\n        toggleStyles: ()=>{\n            dispatch(toggleStyles())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","import React from 'react';\nimport {setSort} from \"../../redux/actions/setActions\";\nimport {connect} from \"react-redux\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCheckSquare, faSquare} from '@fortawesome/free-solid-svg-icons';\n\n\nfunction OptionItem(props) {\n\n    const [hover, setHover] = React.useState(false)\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n\n\n    let shower;\n\n    const handleSort = (prop, val) => {\n        props.setSort(prop,  val)\n    };\n\n    if(hover){\n        if(props.style.navText===undefined){\n            shower = {\n                backgroundColor: '#343740',\n                color:'white'\n            }\n        }else{\n            shower = {\n                backgroundColor: props.style.bodyText,\n                color:props.style.navText\n            }\n        }\n    }else{\n        if (props.sorted[props.type].val.includes(props.value) && props.sorted[props.type].toggle) {\n            if(props.style.navText===undefined){\n                shower = {\n                    backgroundColor: 'black',\n                    color:'white'\n                }\n            }else{\n                shower = {\n                    backgroundColor: props.style.navText,\n                    color:props.style.nav\n                }\n            }\n\n        }else{\n            if(props.style.navText===undefined){\n                shower = {\n                    backgroundColor: 'white',\n                    color:'black'\n                }\n            }else{\n                shower = {\n                    backgroundColor: props.style.nav,\n                    color:props.style.navText\n                }\n            }\n        }\n    }\n\n\n\n    const numberCheck = () => {\n        if(props.value===\"RD\"){\n            return <span><span className='icon icon-ranged'></span> Ranged</span>\n        }else if(props.value===\"Sh\"){\n            return <span><span className='icon icon-shield'></span> Shield</span>\n        }else if(props.value===\"MD\"){\n            return <span><span className='icon icon-melee'></span> Melee</span>\n        }else if(props.value===\"ID\"){\n            return <span><span className='icon icon-indirect'></span> Indirect</span>\n        }else if(props.value===\"Dc\"){\n            return <span><span className='icon icon-discard'></span> Discard</span>\n        }else if(props.value===\"Dr\"){\n            return <span><span className='icon icon-disrupt'></span> Disrupt</span>\n        }else if(props.value===\"F\"){\n            return <span><span className='icon icon-focus'></span> Focus</span>\n        }else if(props.value===\"Sp\"){\n            return <span><span className='icon icon-special'></span> Special</span>\n        }else if(props.value===\"R\"){\n            return <span><span className='icon icon-resource'></span> Resource</span>\n        }else if(props.value===\"-\"){\n            return <span><span className='icon icon-blank'></span> Blank</span>\n        }else if(props.value===\"+\"){\n            return <span>Modified</span>\n        }else if (isNaN(props.value)) {\n            return props.value.charAt(0).toUpperCase() + props.value.substring(1)\n        } else {\n            return props.value\n        }\n    };\n\n\n    return (\n        <div className={\"item\"} onMouseEnter={hoverChange}\n             onMouseLeave={hoverChange} style={shower} onClick={() => handleSort(props.type, props.value)}>{props.sorted[props.type].val.includes(props.value) && props.sorted[props.type].toggle ? <FontAwesomeIcon icon={faCheckSquare}/> :<FontAwesomeIcon icon={faSquare}/>} {numberCheck()}</div>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted,\n        style:state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSort: (prop, val) => {\n            dispatch(setSort(prop, val))\n        }\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionItem);","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faChevronUp, faChevronDown} from '@fortawesome/free-solid-svg-icons';\nimport OptionItem from './OptionItem';\nimport {connect} from 'react-redux';\n\nfunction Option (props){\n    const [drop, toggleDrop] = React.useState(false);\n\n    let shower;\n\n    if(drop){\n        shower={\n            \"minHeight\":\"\"+(25*props.opt.values.length)+\"px\",\n            \"maxHeight\":\"\"+(25*props.opt.values.length)+\"px\"\n        }\n    }else{\n        shower={\n            \"minHeight\":\"0px\",\n            \"maxHeight\":\"0px\"\n        }\n    }\n\n    let values = props.opt.values.map((op, idx)=> {\n        return <OptionItem key={idx} type={props.opt.type} value={op}/>\n    });\n\n    return(\n        <div className={\"option\"}>\n            <h3 className={\"optHead\"} style={{color:props.style.nav}} onClick={()=>toggleDrop(!drop)}>\n                {props.opt.name}\n                {!drop && <FontAwesomeIcon icon={faChevronDown} />}\n                {drop && <FontAwesomeIcon icon={faChevronUp} />}\n            </h3>\n            <div className={\"listOpt\"} style={shower}>\n                {values}\n            </div>\n        </div>\n    );\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style:state.style\n    }\n};\n\nexport default connect(mapStateToProps)(Option);","import React from 'react';\nimport {clearOptions} from \"../../redux/actions/setActions\";\nimport {connect} from 'react-redux';\nimport Option from './Option';\nimport Button from '../input/Button';\n\nfunction Options(props){\n\n    let show;\n\n    if(props.options){\n        show={\n            \"right\":\"0\",\n            backgroundColor:props.style.navText,\n            color:props.style.nav\n        }\n    }else{\n        show={\n            \"right\":\"-100%\",\n            backgroundColor:props.style.navText,\n            color:props.style.nav\n        }\n    }\n\n    let Sets = [];\n\n    for(let i=0; i<props.sets.length; i++){\n        Sets.push(props.sets[i].name)\n    }\n\n    let Sort = [\n\n        {\n            name: \"Affiliations\",\n            type: \"affiliation_code\",\n            values:[\"hero\", \"villain\", \"neutral\"]\n        },\n        {\n            name: \"Colors\",\n            type: \"faction_code\",\n            values:[\"red\", \"blue\", \"yellow\", \"gray\"]\n        },\n        {\n            name: \"Rarity\",\n            type: \"rarity_name\",\n            values:[\"Starter\", \"Common\", \"Uncommon\", \"Rare\", \"Legendary\"]\n        },\n        {\n            name:\"Health\",\n            type:\"health\",\n            values:[4,5,6,7,8,9,10,11,12,13,14,15]\n        },\n        {\n            name:\"Cost\",\n            type:\"cost\",\n            values:[0,1,2,3,4,5,6]\n        },\n        {\n            name:\"Set\",\n            type:\"set_name\",\n            values:Sets},\n        {\n            name:\"Points\",\n            type:\"points\",\n            values:[\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\"]\n        },\n        {\n            name:\"Type\",\n            type:\"type_code\",\n            values:[\"character\", \"upgrade\", \"support\", \"event\", \"downgrade\", \"plot\"]\n        },\n        {\n            name:\"Dice Sides\",\n            type:\"sides\",\n            values:[\"RD\", \"Sh\",\"MD\", \"ID\", \"Dc\",\"Dr\", \"F\", \"R\", \"Sp\",\"-\",\"+\"]\n\n        },\n        {\n            name:\"Formats\",\n            type:\"formats\",\n            values:[\"Standard\", \"Trilogy\", \"Infinite\"]\n        },\n        {\n            name: \"Restricted\",\n            type:\"restricted\",\n            values:[\"restricted\"]\n        },\n        {\n            name: \"Balanced\",\n            type:\"balanced\",\n            values:[\"balanced\"]\n        },\n        {\n            name: \"Keywords\",\n            type:\"keywords\",\n            values:[\"Guardian\", \"Ambush\", \"Redeploy\"]\n        }\n\n    ];\n\n\n    let options = Sort.map((srt, idx)=>\n        <Option key={idx} opt={srt}/>\n    );\n\n\n    return (\n        <div className={\"options\"} style={show}>\n            <div className={\"top\"}><h1 style={{color:props.style.nav}}>Sort Cards </h1><Button handleClick={() => props.clearOptions()} text={\"Clear Search Query\"}/></div>\n            <div className={\"wrapper\"}>\n                {options}\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        options:state.options,\n        style:state.style,\n        sets:state.sets\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n        clearOptions:()=>{\n            dispatch(clearOptions())\n        }\n    }\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Options);\n","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faHeart, faCircle, faTimes} from '@fortawesome/free-solid-svg-icons';\n\nimport {connect} from 'react-redux';\nimport {setSort} from \"../../redux/actions/setActions\";\n\nfunction SortTag(props){\n    const [hover, setHover] = React.useState(false);\n\n\n    const handleSort = (prop, val) => {\n        props.setSort(prop, val)\n    };\n\n    let style;\n\n    if(hover){\n        style = {\n            color:props.style.body,\n            backgroundColor:props.style.nav\n        };\n    }else{\n        style = {\n            color:props.style.nav,\n            backgroundColor:props.style.body\n        };\n    }\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n    const numberCheck = (vl) => {\n        if(vl===\"RD\"){\n            return <span><span className='icon icon-ranged'></span> Ranged</span>\n        }else if(vl===\"Sh\"){\n            return <span><span className='icon icon-shield'></span> Shield</span>\n        }else if(vl===\"MD\"){\n            return <span><span className='icon icon-melee'></span> Melee</span>\n        }else if(vl===\"ID\"){\n            return <span><span className='icon icon-indirect'></span> Indirect</span>\n        }else if(vl===\"Dc\"){\n            return <span><span className='icon icon-discard'></span> Discard</span>\n        }else if(vl===\"Dr\"){\n            return <span><span className='icon icon-disrupt'></span> Disrupt</span>\n        }else if(vl===\"F\"){\n            return <span><span className='icon icon-focus'></span> Focus</span>\n        }else if(vl===\"Sp\"){\n            return <span><span className='icon icon-special'></span> Special</span>\n        }else if(vl===\"R\"){\n            return <span><span className='icon icon-resource'></span> Special</span>\n        }else if(vl===\"-\"){\n            return <span><span className='icon icon-blank'></span> Blank</span>\n        }else if(vl===\"+\"){\n            return <span>Modified</span>\n        }else if(vl.includes(\"H\")){\n            return <span><FontAwesomeIcon icon={faHeart}/> {vl.substring(0, vl.length - 1)}</span>\n        }else if(vl.includes(\"P\")){\n            return <span><FontAwesomeIcon icon={faCircle}/> {vl.substring(0, vl.length - 1)}</span>\n        }else if(vl.includes(\"C\")){\n            return <span><span className='icon icon-resource '></span> {vl.substring(0, vl.length - 1)}</span>\n        }else if (isNaN(vl)) {\n            return vl.charAt(0).toUpperCase() + vl.substring(1)\n        } else {\n            return vl\n        }\n    };\n\n    let text = (vl)=>{\n\n        if(vl.includes(\"H\")){\n            return Number(vl.substring(0, vl.length - 1));\n        }else if(vl.includes(\"P\")){\n            return vl.substring(0, vl.length - 1)\n        }else if(vl.includes(\"C\")){\n            return Number(vl.substring(0, vl.length - 1));\n        }else{\n            return vl\n        }\n    };\n\n    return (\n        <div className={\"itm\"} onClick={()=>handleSort(props.prp,(props.prp===\"set_name\"?props.val:text(props.val)))}\n            style={style} onMouseEnter={hoverChange}\n             onMouseLeave={hoverChange}>{(props.prp===\"set_name\"?props.val:numberCheck(props.val))} <FontAwesomeIcon icon={faTimes}/></div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted,\n        style: state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSort: (prop, val) => {\n            dispatch(setSort(prop,  val))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortTag);","import React from 'react';\nimport SortTag from './SortTag';\nimport {connect} from 'react-redux';\n\nfunction SortNav(props) {\n\n    const [show, updateShow] = React.useState(false);\n    const [tags, updateTags] = React.useState([]);\n\n\n    React.useEffect(() => {\n        let check = false;\n        let tagArray = [];\n\n\n        for (let p in props.sorted) {\n\n            if (props.sorted[p].toggle) {\n                check = true;\n                for(let x=0; x<props.sorted[p].val.length; x++){\n                    let obj = {\n                        prop:p,\n                        val:\"\"\n                    };\n                    if(p==='health'){\n                        obj.val=props.sorted[p].val[x]+\"H\";\n                    }else if(p==='points'){\n                        obj.val=props.sorted[p].val[x]+\"P\";\n                    }else if(p==='cost'){\n                        obj.val=props.sorted[p].val[x]+\"C\";\n                    }else{\n                        obj.val=props.sorted[p].val[x];\n                    }\n                    tagArray.push(obj)\n                }\n            }\n\n\n\n        }\n\n        updateShow(check);\n        updateTags(tagArray);\n    },\n[props.sorted]);\n\nlet shower;\n\nif (show) {\n    shower = {\n        top: '80px',\n        backgroundColor: props.style.bodyText\n    }\n} else {\n    shower = {\n        top: '-80px',\n        backgroundColor: props.style.bodyText\n    }\n}\n\n\nlet tagEles = tags.map((st, idx) =>\n    <SortTag key={idx} val={st.val} prp={st.prop}/>\n);\n\nreturn (\n    <div className={\"sortNav\"} style={shower}>\n        {tagEles}\n    </div>\n)\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sorted: state.sorted,\n        style: state.style\n    }\n};\n\nexport default connect(mapStateToProps)(SortNav);","import React from 'react';\nimport {setStyles} from \"../../redux/actions/setActions\";\nimport {connect} from \"react-redux\";\n\nfunction StyleOption(props) {\n\n    const [hover, setHover] = React.useState(false)\n\n    const hoverChange = ()=>{\n        setHover(!hover)\n    };\n\n    let active;\n\n    if(hover){\n        if(props.style.navText===undefined){\n            active = {\n                backgroundColor: '#343740',\n                color:'white'\n            }\n        }else{\n            active = {\n                backgroundColor: props.style.bodyText,\n                color:props.style.navText\n            }\n        }\n    }else{\n        if(props.opt.name===props.style.name){\n            active={\n                backgroundColor:props.style.navText,\n                color:props.style.nav\n            }\n        }else{\n            active={\n                backgroundColor:props.style.nav,\n                color:props.style.navText\n            }\n        }\n    }\n\n\n\n\n\n    return (\n\n        <div className={\"item\"} onMouseEnter={hoverChange} onMouseLeave={hoverChange} style={active} onClick={() => props.setStyles(props.opt)}>{props.opt.name}</div>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setStyles: (style) => {\n            dispatch(setStyles(style))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StyleOption);","export const Styles = [\n    {\n        name:\"Awakenings\",\n        nav:\"white\",\n        body:\"black\",\n        navText:\"black\",\n        bodyText:\"#c4c4c4\"\n    },\n    {\n        name:\"Legacies\",\n        nav:\"red\",\n        body:\"white\",\n        navText:\"white\",\n        bodyText:\"#640f18\"\n    },\n    {\n        name:\"Convergence\",\n        nav:\"#343740\",\n        body:\"#ededed\",\n        navText:\"white\",\n        bodyText:\"#666a77\"\n    }\n];","import React from 'react';\nimport StyleOption from './StyleOption';\nimport {connect} from \"react-redux\";\nimport {Styles} from './../../data/Style';\n\nfunction StyleOptions(props) {\n\n    let show;\n\n    if (props.styles) {\n        show={\n            \"right\":\"0\",\n            backgroundColor:props.style.navText,\n            color:props.style.nav\n        }\n    }else{\n        show={\n            \"right\":\"-100%\",\n            backgroundColor:props.style.navText,\n            color:props.style.nav\n        }\n    }\n\n    let styles = Styles.map((srt, idx) =>\n        <StyleOption key={idx} opt={srt}/>\n    );\n\n\n    return (\n        <div className={\"navOptions\"} style={show}>\n            <div className={\"top\"}><h1 style={{color:props.style.nav}}>Change Style</h1></div>\n            <div className={\"wrapper\"}>\n                {styles}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        styles: state.styles,\n        style: state.style\n    }\n};\n\n\n\nexport default connect(mapStateToProps)(StyleOptions);\n\n","import React from 'react';\nimport './less/style.css';\nimport List from './components/main/List';\nimport CardPage from './components/card/CardPage'\nimport Nav from './components/nav/Navigation';\nimport Options from './components/nav/options';\nimport SortNav from './components/nav/SortNav'\nimport StyleOptions from './components/nav/StyleOptions';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSpinner, faExclamationCircle} from '@fortawesome/free-solid-svg-icons';\n\nimport {connect} from 'react-redux';\nimport {setCards, setFormats, setSets} from \"./redux/actions/setActions\";\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\n\n\nfunction App(props) {\n\n    const [show, updateShow] = React.useState(false);\n    const [seconds, setSeconds] = React.useState(0);\n    const [pad, setPad] = React.useState(60);\n    const [loadCard, setLoadCards] = React.useState(\"load\");\n    const [loadFormat, setLoadFormat] = React.useState(\"load\");\n    const [loadSet, setLoadSet] = React.useState(\"load\");\n    const [load, setLoad] =React.useState(\"load\");\n\n\n    React.useEffect(() => {\n        localStorage.setItem('localStyle', JSON.stringify(props.style));\n        if(load===\"load\"){\n            fetch(\"https://swdestinydb.com/api/public/cards/\")\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    setLoadCards(\"loaded\");\n                    props.setCards(data);\n                }).catch(function () {\n                setLoadCards(\"error\");\n            });\n            fetch(\"https://swdestinydb.com/api/public/formats/\")\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    setLoadFormat(\"loaded\");\n                    props.setFormats(data);\n                }).catch(function () {\n                setLoadFormat(\"error\");\n            });\n            //\n            fetch(\"https://swdestinydb.com/api/public/sets/\")\n                .then(response => {\n                    return response.json();\n                })\n                .then((data) => {\n                    setLoadSet(\"loaded\");\n                    props.setSets(data);\n                }).catch(function () {\n                setLoadSet(\"error\");\n            });\n        }\n\n\n        if(loadCard===\"loaded\"&&loadFormat===\"loaded\"&&loadSet===\"loaded\"){\n            setLoad(\"loaded\")\n        }else if(loadCard===\"error\"||loadFormat===\"error\"||loadSet===\"error\"){\n            setLoad(\"error\");\n        }\n\n        let check = false;\n\n        for (let p in props.sorted) {\n            if (props.sorted[p].toggle) {\n                check = true;\n            }\n        }\n\n        updateShow(check);\n\n        let interval = null;\n\n        interval = setInterval(() => {\n            setSeconds(seconds => seconds + 1);\n        }, 500);\n\n        if(load===\"loaded\"){\n            setPad(document.querySelector(\".sortNav\").getBoundingClientRect().height);\n\n            document.documentElement.style.backgroundColor = props.style.body;\n        }\n\n\n        return () => clearInterval(interval);\n\n    }, [props.style, props.sorted, seconds, loadCard, loadFormat, loadSet, load, props]);\n\n    let appStyle = {\n        backgroundColor: props.style.body\n    };\n\n    let wrapStyle = {\n        color: props.style.bodyText,\n        backgroundColor: props.style.body,\n        paddingTop: (show ? \"\" + pad + \"px\" : \"0\")\n    };\n\n    return (\n\n        <div className=\"App\" style={appStyle}>\n            {load===\"loaded\"&&<span><Nav/> <SortNav/> <Options/> <StyleOptions/> <div className={\"mainWrapper\"} style={wrapStyle}><Switch><Route path=\"/\" component={List}/></Switch></div><Route path={\"/:id\"} component={CardPage}/></span>}\n            {load===\"load\"&&<div style={{height:\"100%\"}}><FontAwesomeIcon icon={faSpinner} spin size={\"lg\"} style={{color:props.style.bodyText}}/></div>}\n            {load===\"error\"&&<div style={{height:\"100%\"}}><FontAwesomeIcon icon={faExclamationCircle} spin size={\"lg\"} style={{color:props.style.bodyText}}/><h1>Error Loading Card API. Try again later</h1></div>}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        style: state.style,\n        sorted: state.sorted\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setCards: (crds) => {\n            dispatch(setCards(crds))\n        },\n        setFormats: (fmts) => {\n            dispatch(setFormats(fmts))\n        },\n        setSets: (sts) => {\n            dispatch(setSets(sts))\n        },\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    cards:[],\n    formats:[],\n    sets:[],\n    itemLimit: 10,\n    sorted:{\n        rarity_name: {toggle: false, val: []},\n        affiliation_code: {toggle: false, val: []},\n        type_code: {toggle: false, val: []},\n        faction_code: {toggle: false, val: []},\n        set_name:{toggle:false,val:[]},\n        health: {toggle: false, val: []},\n        cost: {toggle: false, val: []},\n        points: {toggle: false, val: []},\n        sides:{toggle: false, val:[]},\n        formats:{toggle:false, val:[]},\n        restricted:{toggle:false,val:[]},\n        balanced:{toggle:false,val:[]},\n        keywords:{toggle:false,val:[]}\n    },\n    style:JSON.parse(localStorage.getItem('localStyle')) || '',\n    name: \"\",\n    options:false,\n    styles:false\n\n\n};\n\n\nconst rootReducer = (state = initState, action) => {\n\n    if (action.type === 'INCREASE_LIMIT') {\n\n        let val = state.itemLimit;\n\n        val = val + 10;\n\n\n        return {\n            ...state,\n            itemLimit: val\n        }\n    }\n\n    if (action.type === 'SET_SORT') {\n\n        let orgArray = state.sorted[action.prop].val;\n\n        if(orgArray.includes(action.val)){\n            let ind = orgArray.indexOf(action.val);\n            orgArray.splice(ind,1);\n\n        }else{\n            orgArray.push(action.val)\n        }\n\n        let togg = orgArray.length > 0;\n\n        return {\n            ...state,\n            itemLimit:10,\n            sorted:{\n                ...state.sorted,\n                [action.prop]: {\n                    toggle: togg,\n                    val: orgArray\n                }\n            }\n\n        }\n\n    }\n\n    if(action.type === 'SET_NAME'){\n        return{\n            ...state,\n            name:action.name\n        }\n    }\n\n    if(action.type === 'SET_STYLE'){\n\n        document.documentElement.style.backgroundColor=action.style.body;\n\n        return{\n            ...state,\n            style:action.style\n        }\n    }\n\n    if(action.type === 'TOGGLE_OPTIONS'){\n\n        return{\n            ...state,\n            options:!state.options,\n            styles:false\n        }\n    }\n\n    if(action.type === 'TOGGLE_STYLES'){\n\n\n        return{\n            ...state,\n            styles:!state.styles,\n            options:false\n        }\n    }\n\n    if(action.type === 'CLEAR_OPTIONS'){\n\n        return{\n            ...state,\n            itemLimit: 10,\n            sorted:{\n                rarity_name: {toggle: false, val: []},\n                affiliation_code: {toggle: false, val: []},\n                type_code: {toggle: false, val: []},\n                faction_code: {toggle: false, val: []},\n                set_name:{toggle:false,val:[]},\n                health: {toggle: false, val: []},\n                cost: {toggle: false, val: []},\n                points: {toggle: false, val: []},\n                sides:{toggle: false, val:[]},\n                formats:{toggle:false, val:[]},\n                restricted:{toggle:false,val:[]},\n                balanced:{toggle:false,val:[]},\n                keywords:{toggle:false,val:[]}\n            },\n            name: \"\",\n            options:false,\n            styles:false\n        }\n    }\n\n    if(action.type === 'SET_CARDS'){\n        return{\n            ...state,\n            cards:action.cards\n        }\n    }\n\n    if(action.type === 'SET_FORMATS'){\n        return{\n            ...state,\n            formats:action.fmts\n        }\n    }\n\n    if(action.type === 'SET_SETS'){\n        return{\n            ...state,\n            sets:action.sts\n        }\n    }\n\n\n    return state;\n};\n\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {createStore} from 'redux';\nimport {Provider} from \"react-redux\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from \"./redux/reducers\";\nimport {HashRouter as Router} from \"react-router-dom\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n            <App/>\n        </Router>\n    </Provider>,\n\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}